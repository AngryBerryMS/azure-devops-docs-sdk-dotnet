<Type Name="ProjectHttpClient" FullName="Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient">
  <TypeSignature Language="C#" Value="public class ProjectHttpClient : Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ProjectHttpClient extends Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectHttpClient&#xA;Inherits ProjectHttpClientBase" />
  <TypeSignature Language="F#" Value="type ProjectHttpClient = class&#xA;    inherit ProjectHttpClientBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ResourceArea("79134C72-4A58-4B42-976C-04E7115F32BF")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            HttpClient for get, edit, create, delete project.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectHttpClient (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProject">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProject&gt; GetProject (string id, Nullable&lt;bool&gt; includeCapabilities = null, bool includeHistory = false, object userState = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Core.WebApi.TeamProject&gt; GetProject(string id, valuetype System.Nullable`1&lt;bool&gt; includeCapabilities, bool includeHistory, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.GetProject(System.String,System.Nullable{System.Boolean},System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProject (id As String, Optional includeCapabilities As Nullable(Of Boolean) = null, Optional includeHistory As Boolean = false, Optional userState As Object = null) As Task(Of TeamProject)" />
      <MemberSignature Language="F#" Value="member this.GetProject : string * Nullable&lt;bool&gt; * bool * obj -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProject&gt;" Usage="projectHttpClient.GetProject (id, includeCapabilities, includeHistory, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProject&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="includeCapabilities" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeHistory" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="id">The name or id of the project.</param>
        <param name="includeCapabilities">Include capabilities (such as source control) in the team project result.</param>
        <param name="includeHistory">Search within renamed projects (that had such name in the past).</param>
        <param name="userState"></param>
        <summary>
            Get project with the specified id or name, optionally including capabilities.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectHistory">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt; GetProjectHistory (long minRevision, object userState = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt; GetProjectHistory(int64 minRevision, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.GetProjectHistory(System.Int64,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProjectHistory (minRevision As Long, Optional userState As Object = null) As Task(Of IEnumerable(Of TeamProjectReference))" />
      <MemberSignature Language="F#" Value="member this.GetProjectHistory : int64 * obj -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt;" Usage="projectHttpClient.GetProjectHistory (minRevision, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetProjectHistoryEntriesAsync instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRevision" Type="System.Int64" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="minRevision">Starting revision for the changes to return</param>
        <param name="userState"></param>
        <summary>
            Get recorded project changes since the provided revision (inclusive).
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjects">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt; GetProjects (Nullable&lt;Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt; stateFilter, Nullable&lt;int&gt; top, Nullable&lt;int&gt; skip, object userState, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt; GetProjects(valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt; stateFilter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.GetProjects(System.Nullable{Microsoft.TeamFoundation.Core.WebApi.ProjectState},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProjects (stateFilter As Nullable(Of ProjectState), top As Nullable(Of Integer), skip As Nullable(Of Integer), userState As Object, continuationToken As String) As Task(Of IPagedList(Of TeamProjectReference))" />
      <MemberSignature Language="F#" Value="override this.GetProjects : Nullable&lt;Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt;" Usage="projectHttpClient.GetProjects (stateFilter, top, skip, userState, continuationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stateFilter">Filter on team projects in a specific team project state.</param>
        <param name="top">Number of team projects to return (default: 100)</param>
        <param name="skip">Number of team projects to skip.</param>
        <param name="userState"></param>
        <param name="continuationToken">To be added.</param>
        <summary>
            Get projects with the specified state.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjects">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt; GetProjects (Nullable&lt;Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt; stateFilter = null, Nullable&lt;int&gt; top = null, Nullable&lt;int&gt; skip = null, object userState = null, string continuationToken = null, Nullable&lt;bool&gt; getDefaultTeamImageUrl = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt; GetProjects(valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt; stateFilter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, string continuationToken, valuetype System.Nullable`1&lt;bool&gt; getDefaultTeamImageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.GetProjects(System.Nullable{Microsoft.TeamFoundation.Core.WebApi.ProjectState},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProjects (Optional stateFilter As Nullable(Of ProjectState) = null, Optional top As Nullable(Of Integer) = null, Optional skip As Nullable(Of Integer) = null, Optional userState As Object = null, Optional continuationToken As String = null, Optional getDefaultTeamImageUrl As Nullable(Of Boolean) = null) As Task(Of IPagedList(Of TeamProjectReference))" />
      <MemberSignature Language="F#" Value="override this.GetProjects : Nullable&lt;Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * string * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt;" Usage="projectHttpClient.GetProjects (stateFilter, top, skip, userState, continuationToken, getDefaultTeamImageUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Core.WebApi.ProjectState&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="getDefaultTeamImageUrl" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="stateFilter">Filter on team projects in a specific team project state.</param>
        <param name="top">Number of team projects to return (default: 100)</param>
        <param name="skip">Number of team projects to skip.</param>
        <param name="userState"></param>
        <param name="continuationToken">To be added.</param>
        <param name="getDefaultTeamImageUrl">Project references can include their DefaultTeamImageUrl</param>
        <summary>
            Get projects with the specified state.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation&gt; Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation&gt; Options() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.Options" />
      <MemberSignature Language="VB.NET" Value="Public Function Options () As Task(Of ApiResourceLocation)" />
      <MemberSignature Language="F#" Value="member this.Options : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation&gt;" Usage="projectHttpClient.Options " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueCreateProject">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt; QueueCreateProject (Microsoft.TeamFoundation.Core.WebApi.TeamProject projectToCreate, object userState = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.Operations.OperationReference&gt; QueueCreateProject(class Microsoft.TeamFoundation.Core.WebApi.TeamProject projectToCreate, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.QueueCreateProject(Microsoft.TeamFoundation.Core.WebApi.TeamProject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueueCreateProject (projectToCreate As TeamProject, Optional userState As Object = null) As Task(Of OperationReference)" />
      <MemberSignature Language="F#" Value="member this.QueueCreateProject : Microsoft.TeamFoundation.Core.WebApi.TeamProject * obj -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;" Usage="projectHttpClient.QueueCreateProject (projectToCreate, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectToCreate" Type="Microsoft.TeamFoundation.Core.WebApi.TeamProject" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="projectToCreate">The project to create.</param>
        <param name="userState"></param>
        <summary>
            Queue a project creation with a specific Name, Abbreviation, Capabilities.VersionControl, Capabilities.ProcessTemplate, and optionally Description.
            </summary>
        <returns>Reference to the create operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDeleteProject">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt; QueueDeleteProject (Guid projectId, object userState = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.Operations.OperationReference&gt; QueueDeleteProject(valuetype System.Guid projectId, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.QueueDeleteProject(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueueDeleteProject (projectId As Guid, Optional userState As Object = null) As Task(Of OperationReference)" />
      <MemberSignature Language="F#" Value="member this.QueueDeleteProject : Guid * obj -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;" Usage="projectHttpClient.QueueDeleteProject (projectId, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="projectId">The project id of the project to delete.</param>
        <param name="userState"></param>
        <summary>
            Queue a project deletion.
            </summary>
        <returns>Reference to the delete operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDeleteProject">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt; QueueDeleteProject (Guid projectId, bool hardDelete, object userState = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.Operations.OperationReference&gt; QueueDeleteProject(valuetype System.Guid projectId, bool hardDelete, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.QueueDeleteProject(System.Guid,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueueDeleteProject (projectId As Guid, hardDelete As Boolean, Optional userState As Object = null) As Task(Of OperationReference)" />
      <MemberSignature Language="F#" Value="member this.QueueDeleteProject : Guid * bool * obj -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;" Usage="projectHttpClient.QueueDeleteProject (projectId, hardDelete, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="hardDelete" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="hardDelete">To be added.</param>
        <param name="userState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatedExceptions">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IDictionary&lt;string,Type&gt; TranslatedExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Type&gt; TranslatedExceptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.TranslatedExceptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TranslatedExceptions As IDictionary(Of String, Type)" />
      <MemberSignature Language="F#" Value="member this.TranslatedExceptions : System.Collections.Generic.IDictionary&lt;string, Type&gt;" Usage="Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.TranslatedExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProject">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt; UpdateProject (Guid projectToUpdateId, Microsoft.TeamFoundation.Core.WebApi.TeamProject projectUpdate, object userState = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.Operations.OperationReference&gt; UpdateProject(valuetype System.Guid projectToUpdateId, class Microsoft.TeamFoundation.Core.WebApi.TeamProject projectUpdate, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient.UpdateProject(System.Guid,Microsoft.TeamFoundation.Core.WebApi.TeamProject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateProject (projectToUpdateId As Guid, projectUpdate As TeamProject, Optional userState As Object = null) As Task(Of OperationReference)" />
      <MemberSignature Language="F#" Value="member this.UpdateProject : Guid * Microsoft.TeamFoundation.Core.WebApi.TeamProject * obj -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;" Usage="projectHttpClient.UpdateProject (projectToUpdateId, projectUpdate, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Operations.OperationReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectToUpdateId" Type="System.Guid" />
        <Parameter Name="projectUpdate" Type="Microsoft.TeamFoundation.Core.WebApi.TeamProject" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="projectToUpdateId">The project id of the project to update.</param>
        <param name="projectUpdate">The updated project.</param>
        <param name="userState"></param>
        <summary>
            Update an existing project's name, abbreviation, or description.
            </summary>
        <returns>Reference to the update operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>