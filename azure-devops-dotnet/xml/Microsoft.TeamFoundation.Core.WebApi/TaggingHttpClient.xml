<Type Name="TaggingHttpClient" FullName="Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient">
  <TypeSignature Language="C#" Value="public class TaggingHttpClient : Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaggingHttpClient extends Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TaggingHttpClient&#xA;Inherits VssHttpClientBase" />
  <TypeSignature Language="F#" Value="type TaggingHttpClient = class&#xA;    inherit VssHttpClientBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ResourceArea("1F131D7F-CFBB-4EC9-B358-FB4E8341CE59")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Client proxy for the <em>tagging</em> WebApi interface.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaggingHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaggingHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaggingHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaggingHttpClient (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaggingHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient" Usage="new Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTagAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; CreateTagAsync (Guid scopeId, string name, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; CreateTagAsync(valuetype System.Guid scopeId, string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.CreateTagAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.CreateTagAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;" Usage="taggingHttpClient.CreateTagAsync (scopeId, name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeId">The tagging scope.</param>
        <param name="name">The tag name</param>
        <param name="userState">Optional user state that is passed to the async call.</param>
        <param name="cancellationToken">Optional cancellation token that is passed to the async call.</param>
        <summary>
            Create a tag.
            </summary>
        <returns>A <c>Task</c> which returns the newly created tag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTagAsync (Guid scopeId, Guid tagId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTagAsync(valuetype System.Guid scopeId, valuetype System.Guid tagId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.DeleteTagAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTagAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteTagAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taggingHttpClient.DeleteTagAsync (scopeId, tagId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="tagId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeId">The tagging scope.</param>
        <param name="tagId">The tag's Id.</param>
        <param name="userState">Optional user state that is passed to the async call.</param>
        <param name="cancellationToken">Optional cancellation token that is passed to the async call.</param>
        <summary>
            Delete a tag.
            </summary>
        <returns>A <c>Task</c> which completes when the tag has been deleted.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; GetTagAsync (Guid scopeId, Guid tagId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; GetTagAsync(valuetype System.Guid scopeId, valuetype System.Guid tagId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.GetTagAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;&#xA;override this.GetTagAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;" Usage="taggingHttpClient.GetTagAsync (scopeId, tagId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="tagId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeId">The tagging scope.</param>
        <param name="tagId">The tag's Id.</param>
        <param name="userState">Optional user state that is passed to the async call.</param>
        <param name="cancellationToken">Optional cancellation token that is passed to the async call.</param>
        <summary>
            Get a tag by its ID.
            </summary>
        <returns>A <c>Task</c> which returns the tag matching the <paramref name="scopeId" /> and <paramref name="tagId" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; GetTagAsync (Guid scopeId, string name, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; GetTagAsync(valuetype System.Guid scopeId, string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.GetTagAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;&#xA;override this.GetTagAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;" Usage="taggingHttpClient.GetTagAsync (scopeId, name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeId">The tagging scope.</param>
        <param name="name">The tag name</param>
        <param name="userState">Optional user state that is passed to the async call.</param>
        <param name="cancellationToken">Optional cancellation token that is passed to the async call.</param>
        <summary>
            Get a tag by its name.
            </summary>
        <returns>A <c>Task</c> which returns the tag matching the <paramref name="scopeId" /> and <paramref name="name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinitionList&gt; GetTagsAsync (Guid scopeId, bool includeInactive = false, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinitionList&gt; GetTagsAsync(valuetype System.Guid scopeId, bool includeInactive, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.GetTagsAsync(System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagsAsync : Guid * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinitionList&gt;&#xA;override this.GetTagsAsync : Guid * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinitionList&gt;" Usage="taggingHttpClient.GetTagsAsync (scopeId, includeInactive, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinitionList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="includeInactive" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeId">The tagging scope.</param>
        <param name="includeInactive"></param>
        <param name="userState">Optional user state that is passed to the async call.</param>
        <param name="cancellationToken">Optional cancellation token that is passed to the async call.</param>
        <summary>
            Get all tags within a scope.
            </summary>
        <returns>A <c>Task</c> which returns the list of tag matching the <paramref name="scopeId" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTagAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; UpdateTagAsync (Guid scopeId, Guid tagId, string name, Nullable&lt;bool&gt; active, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt; UpdateTagAsync(valuetype System.Guid scopeId, valuetype System.Guid tagId, string name, valuetype System.Nullable`1&lt;bool&gt; active, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient.UpdateTagAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.UpdateTagAsync : Guid * Guid * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;" Usage="taggingHttpClient.UpdateTagAsync (scopeId, tagId, name, active, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Core.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="tagId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="active" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeId">The tagging scope.</param>
        <param name="tagId">The tag's Id.</param>
        <param name="name">The new name of the tag.</param>
        <param name="active">The new active status fo the tag.</param>
        <param name="userState">Optional user state that is passed to the async call.</param>
        <param name="cancellationToken">Optional cancellation token that is passed to the async call.</param>
        <summary>
            Update a tag's information.
            </summary>
        <returns>A <c>Task</c> which returns the updated tag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>