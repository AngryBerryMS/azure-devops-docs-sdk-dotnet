<Type Name="BuildHttpClientBase" FullName="Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase">
  <TypeSignature Language="C#" Value="public abstract class BuildHttpClientBase : Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientCompatBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildHttpClientBase extends Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientCompatBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildHttpClientBase&#xA;Inherits BuildHttpClientCompatBase" />
  <TypeSignature Language="F#" Value="type BuildHttpClientBase = class&#xA;    inherit BuildHttpClientCompatBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientCompatBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ResourceArea("5D6898BB-45EC-463F-95F9-54D49C71752E")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase" Usage="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase" Usage="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase" Usage="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildHttpClientBase (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase" Usage="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase" Usage="new Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBuildTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddBuildTagAsync (Guid project, int buildId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddBuildTagAsync(valuetype System.Guid project, int32 buildId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddBuildTagAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddBuildTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddBuildTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddBuildTagAsync (project, buildId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="tag">The tag to add.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds a tag to a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBuildTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddBuildTagAsync (string project, int buildId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddBuildTagAsync(string project, int32 buildId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddBuildTagAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddBuildTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddBuildTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddBuildTagAsync (project, buildId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="tag">The tag to add.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds a tag to a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBuildTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddBuildTagsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; tags, Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddBuildTagsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddBuildTagsAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddBuildTagsAsync : seq&lt;string&gt; * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddBuildTagsAsync : seq&lt;string&gt; * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddBuildTagsAsync (tags, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags">The tags to add.</param>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds tags to a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBuildTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddBuildTagsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; tags, string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddBuildTagsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddBuildTagsAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddBuildTagsAsync : seq&lt;string&gt; * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddBuildTagsAsync : seq&lt;string&gt; * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddBuildTagsAsync (tags, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags">The tags to add.</param>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds tags to a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefinitionTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddDefinitionTagAsync (Guid project, int definitionId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddDefinitionTagAsync(valuetype System.Guid project, int32 definitionId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddDefinitionTagAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDefinitionTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddDefinitionTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddDefinitionTagAsync (project, definitionId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="tag">The tag to add.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds a tag to a definition
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefinitionTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddDefinitionTagAsync (string project, int definitionId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddDefinitionTagAsync(string project, int32 definitionId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddDefinitionTagAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDefinitionTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddDefinitionTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddDefinitionTagAsync (project, definitionId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="tag">The tag to add.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds a tag to a definition
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefinitionTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddDefinitionTagsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; tags, Guid project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddDefinitionTagsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, valuetype System.Guid project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddDefinitionTagsAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDefinitionTagsAsync : seq&lt;string&gt; * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddDefinitionTagsAsync : seq&lt;string&gt; * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddDefinitionTagsAsync (tags, project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags">The tags to add.</param>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds multiple tags to a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefinitionTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; AddDefinitionTagsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; tags, string project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; AddDefinitionTagsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AddDefinitionTagsAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDefinitionTagsAsync : seq&lt;string&gt; * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.AddDefinitionTagsAsync : seq&lt;string&gt; * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.AddDefinitionTagsAsync (tags, project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags">The tags to add.</param>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Adds multiple tags to a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeDefinitionResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeDefinitionResourcesAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, Guid project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeDefinitionResourcesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, valuetype System.Guid project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AuthorizeDefinitionResourcesAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference},System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeDefinitionResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.AuthorizeDefinitionResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.AuthorizeDefinitionResourcesAsync (resources, project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resources"></param>
        <param name="project">Project ID</param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeDefinitionResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeDefinitionResourcesAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, string project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeDefinitionResourcesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, string project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AuthorizeDefinitionResourcesAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference},System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeDefinitionResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.AuthorizeDefinitionResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.AuthorizeDefinitionResourcesAsync (resources, project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resources"></param>
        <param name="project">Project ID or project name</param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeProjectResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeProjectResourcesAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeProjectResourcesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AuthorizeProjectResourcesAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference},System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeProjectResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.AuthorizeProjectResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.AuthorizeProjectResourcesAsync (resources, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resources"></param>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeProjectResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeProjectResourcesAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; AuthorizeProjectResourcesAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; resources, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.AuthorizeProjectResourcesAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeProjectResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.AuthorizeProjectResourcesAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.AuthorizeProjectResourcesAsync (resources, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resources"></param>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; CreateArtifactAsync (Microsoft.TeamFoundation.Build.WebApi.BuildArtifact artifact, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; CreateArtifactAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact artifact, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateArtifactAsync(Microsoft.TeamFoundation.Build.WebApi.BuildArtifact,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateArtifactAsync : Microsoft.TeamFoundation.Build.WebApi.BuildArtifact * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&#xA;override this.CreateArtifactAsync : Microsoft.TeamFoundation.Build.WebApi.BuildArtifact * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;" Usage="buildHttpClientBase.CreateArtifactAsync (artifact, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="artifact" Type="Microsoft.TeamFoundation.Build.WebApi.BuildArtifact" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="artifact">The artifact.</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Associates an artifact with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; CreateArtifactAsync (Microsoft.TeamFoundation.Build.WebApi.BuildArtifact artifact, Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; CreateArtifactAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact artifact, valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateArtifactAsync(Microsoft.TeamFoundation.Build.WebApi.BuildArtifact,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateArtifactAsync : Microsoft.TeamFoundation.Build.WebApi.BuildArtifact * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&#xA;override this.CreateArtifactAsync : Microsoft.TeamFoundation.Build.WebApi.BuildArtifact * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;" Usage="buildHttpClientBase.CreateArtifactAsync (artifact, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="artifact" Type="Microsoft.TeamFoundation.Build.WebApi.BuildArtifact" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="artifact">The artifact.</param>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Associates an artifact with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; CreateArtifactAsync (Microsoft.TeamFoundation.Build.WebApi.BuildArtifact artifact, string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; CreateArtifactAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact artifact, string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateArtifactAsync(Microsoft.TeamFoundation.Build.WebApi.BuildArtifact,System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateArtifactAsync : Microsoft.TeamFoundation.Build.WebApi.BuildArtifact * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&#xA;override this.CreateArtifactAsync : Microsoft.TeamFoundation.Build.WebApi.BuildArtifact * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;" Usage="buildHttpClientBase.CreateArtifactAsync (artifact, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="artifact" Type="Microsoft.TeamFoundation.Build.WebApi.BuildArtifact" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="artifact">The artifact.</param>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Associates an artifact with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; CreateDefinitionAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, Nullable&lt;int&gt; definitionToCloneId = null, Nullable&lt;int&gt; definitionToCloneRevision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; CreateDefinitionAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, valuetype System.Nullable`1&lt;int32&gt; definitionToCloneId, valuetype System.Nullable`1&lt;int32&gt; definitionToCloneRevision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateDefinitionAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinition,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.CreateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.CreateDefinitionAsync (definition, definitionToCloneId, definitionToCloneRevision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinition" />
        <Parameter Name="definitionToCloneId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="definitionToCloneRevision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definition">The definition.</param>
        <param name="definitionToCloneId"></param>
        <param name="definitionToCloneRevision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Creates a new definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; CreateDefinitionAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, Guid project, Nullable&lt;int&gt; definitionToCloneId = null, Nullable&lt;int&gt; definitionToCloneRevision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; CreateDefinitionAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, valuetype System.Guid project, valuetype System.Nullable`1&lt;int32&gt; definitionToCloneId, valuetype System.Nullable`1&lt;int32&gt; definitionToCloneRevision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateDefinitionAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinition,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * Guid * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.CreateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * Guid * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.CreateDefinitionAsync (definition, project, definitionToCloneId, definitionToCloneRevision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinition" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionToCloneId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="definitionToCloneRevision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definition">The definition.</param>
        <param name="project">Project ID</param>
        <param name="definitionToCloneId"></param>
        <param name="definitionToCloneRevision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Creates a new definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; CreateDefinitionAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, string project, Nullable&lt;int&gt; definitionToCloneId = null, Nullable&lt;int&gt; definitionToCloneRevision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; CreateDefinitionAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, string project, valuetype System.Nullable`1&lt;int32&gt; definitionToCloneId, valuetype System.Nullable`1&lt;int32&gt; definitionToCloneRevision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateDefinitionAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinition,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.CreateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.CreateDefinitionAsync (definition, project, definitionToCloneId, definitionToCloneRevision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinition" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionToCloneId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="definitionToCloneRevision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definition">The definition.</param>
        <param name="project">Project ID or project name</param>
        <param name="definitionToCloneId"></param>
        <param name="definitionToCloneRevision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Creates a new definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt; CreateFolderAsync (Microsoft.TeamFoundation.Build.WebApi.Folder folder, Guid project, string path, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Folder&gt; CreateFolderAsync(class Microsoft.TeamFoundation.Build.WebApi.Folder folder, valuetype System.Guid project, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateFolderAsync(Microsoft.TeamFoundation.Build.WebApi.Folder,System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&#xA;override this.CreateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;" Usage="buildHttpClientBase.CreateFolderAsync (folder, project, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.TeamFoundation.Build.WebApi.Folder" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="folder">The folder.</param>
        <param name="project">Project ID</param>
        <param name="path">The full path of the folder.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Creates a new folder.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt; CreateFolderAsync (Microsoft.TeamFoundation.Build.WebApi.Folder folder, string project, string path, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Folder&gt; CreateFolderAsync(class Microsoft.TeamFoundation.Build.WebApi.Folder folder, string project, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.CreateFolderAsync(Microsoft.TeamFoundation.Build.WebApi.Folder,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&#xA;override this.CreateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;" Usage="buildHttpClientBase.CreateFolderAsync (folder, project, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.TeamFoundation.Build.WebApi.Folder" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="folder">The folder.</param>
        <param name="project">Project ID or project name</param>
        <param name="path">The full path of the folder.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Creates a new folder.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteBuildAsync (int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteBuildAsync(int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteBuildAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteBuildAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteBuildAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteBuildAsync (buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Deletes a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteBuildAsync (Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteBuildAsync(valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteBuildAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteBuildAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteBuildAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteBuildAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteBuildAsync (string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteBuildAsync(string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteBuildAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteBuildAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteBuildAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteBuildAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuildTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; DeleteBuildTagAsync (Guid project, int buildId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; DeleteBuildTagAsync(valuetype System.Guid project, int32 buildId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteBuildTagAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteBuildTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.DeleteBuildTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.DeleteBuildTagAsync (project, buildId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="tag">The tag to remove.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Removes a tag from a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuildTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; DeleteBuildTagAsync (string project, int buildId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; DeleteBuildTagAsync(string project, int32 buildId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteBuildTagAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteBuildTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.DeleteBuildTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.DeleteBuildTagAsync (project, buildId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="tag">The tag to remove.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Removes a tag from a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDefinitionAsync (int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDefinitionAsync(int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteDefinitionAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDefinitionAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDefinitionAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteDefinitionAsync (definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Deletes a definition and all associated builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDefinitionAsync (Guid project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDefinitionAsync(valuetype System.Guid project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteDefinitionAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDefinitionAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDefinitionAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteDefinitionAsync (project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a definition and all associated builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDefinitionAsync (string project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDefinitionAsync(string project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteDefinitionAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDefinitionAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDefinitionAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteDefinitionAsync (project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a definition and all associated builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefinitionTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; DeleteDefinitionTagAsync (Guid project, int definitionId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; DeleteDefinitionTagAsync(valuetype System.Guid project, int32 definitionId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteDefinitionTagAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDefinitionTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.DeleteDefinitionTagAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.DeleteDefinitionTagAsync (project, definitionId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="tag">The tag to remove.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Removes a tag from a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefinitionTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; DeleteDefinitionTagAsync (string project, int definitionId, string tag, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; DeleteDefinitionTagAsync(string project, int32 definitionId, string tag, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteDefinitionTagAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDefinitionTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.DeleteDefinitionTagAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.DeleteDefinitionTagAsync (project, definitionId, tag, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="tag">The tag to remove.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Removes a tag from a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteFolderAsync (Guid project, string path, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteFolderAsync(valuetype System.Guid project, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteFolderAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFolderAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteFolderAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteFolderAsync (project, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">The full path to the folder.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a definition folder. Definitions and their corresponding builds will also be deleted.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteFolderAsync (string project, string path, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteFolderAsync(string project, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteFolderAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFolderAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteFolderAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteFolderAsync (project, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">The full path to the folder.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a definition folder. Definitions and their corresponding builds will also be deleted.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTemplateAsync (Guid project, string templateId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTemplateAsync(valuetype System.Guid project, string templateId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteTemplateAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTemplateAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteTemplateAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteTemplateAsync (project, templateId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="templateId">The ID of the template.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a build definition template.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTemplateAsync (string project, string templateId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTemplateAsync(string project, string templateId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.DeleteTemplateAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTemplateAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteTemplateAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.DeleteTemplateAsync (project, templateId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="templateId">The ID of the template.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Deletes a build definition template.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; GetArtifactAsync (int buildId, string artifactName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; GetArtifactAsync(int32 buildId, string artifactName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactAsync(System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&#xA;override this.GetArtifactAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;" Usage="buildHttpClientBase.GetArtifactAsync (buildId, artifactName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a specific artifact for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; GetArtifactAsync (Guid project, int buildId, string artifactName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; GetArtifactAsync(valuetype System.Guid project, int32 buildId, string artifactName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&#xA;override this.GetArtifactAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;" Usage="buildHttpClientBase.GetArtifactAsync (project, buildId, artifactName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific artifact for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; GetArtifactAsync (string project, int buildId, string artifactName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt; GetArtifactAsync(string project, int32 buildId, string artifactName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&#xA;override this.GetArtifactAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;" Usage="buildHttpClientBase.GetArtifactAsync (project, buildId, artifactName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific artifact for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactContentZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetArtifactContentZipAsync (int buildId, string artifactName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetArtifactContentZipAsync(int32 buildId, string artifactName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactContentZipAsync(System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactContentZipAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetArtifactContentZipAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetArtifactContentZipAsync (buildId, artifactName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a specific artifact for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactContentZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetArtifactContentZipAsync (Guid project, int buildId, string artifactName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetArtifactContentZipAsync(valuetype System.Guid project, int32 buildId, string artifactName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactContentZipAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactContentZipAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetArtifactContentZipAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetArtifactContentZipAsync (project, buildId, artifactName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific artifact for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactContentZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetArtifactContentZipAsync (string project, int buildId, string artifactName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetArtifactContentZipAsync(string project, int32 buildId, string artifactName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactContentZipAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactContentZipAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetArtifactContentZipAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetArtifactContentZipAsync (project, buildId, artifactName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific artifact for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt; GetArtifactsAsync (int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt; GetArtifactsAsync(int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactsAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;&#xA;override this.GetArtifactsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;" Usage="buildHttpClientBase.GetArtifactsAsync (buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets all artifacts for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt; GetArtifactsAsync (Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt; GetArtifactsAsync(valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;&#xA;override this.GetArtifactsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;" Usage="buildHttpClientBase.GetArtifactsAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all artifacts for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArtifactsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt; GetArtifactsAsync (string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt; GetArtifactsAsync(string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetArtifactsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetArtifactsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;&#xA;override this.GetArtifactsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;" Usage="buildHttpClientBase.GetArtifactsAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildArtifact&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all artifacts for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetAttachmentAsync (Guid project, int buildId, Guid timelineId, Guid recordId, string type, string name, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetAttachmentAsync(valuetype System.Guid project, int32 buildId, valuetype System.Guid timelineId, valuetype System.Guid recordId, string type, string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetAttachmentAsync(System.Guid,System.Int32,System.Guid,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentAsync : Guid * int * Guid * Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetAttachmentAsync : Guid * int * Guid * Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetAttachmentAsync (project, buildId, timelineId, recordId, type, name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="timelineId" Type="System.Guid" />
        <Parameter Name="recordId" Type="System.Guid" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="timelineId">The ID of the timeline.</param>
        <param name="recordId">The ID of the timeline record.</param>
        <param name="type">The type of the attachment.</param>
        <param name="name">The name of the attachment.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific attachment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetAttachmentAsync (string project, int buildId, Guid timelineId, Guid recordId, string type, string name, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetAttachmentAsync(string project, int32 buildId, valuetype System.Guid timelineId, valuetype System.Guid recordId, string type, string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetAttachmentAsync(System.String,System.Int32,System.Guid,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentAsync : string * int * Guid * Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetAttachmentAsync : string * int * Guid * Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetAttachmentAsync (project, buildId, timelineId, recordId, type, name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="timelineId" Type="System.Guid" />
        <Parameter Name="recordId" Type="System.Guid" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="timelineId">The ID of the timeline.</param>
        <param name="recordId">The ID of the timeline record.</param>
        <param name="type">The type of the attachment.</param>
        <param name="name">The name of the attachment.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific attachment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt; GetAttachmentsAsync (Guid project, int buildId, string type, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt; GetAttachmentsAsync(valuetype System.Guid project, int32 buildId, string type, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetAttachmentsAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentsAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt;&#xA;override this.GetAttachmentsAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt;" Usage="buildHttpClientBase.GetAttachmentsAsync (project, buildId, type, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="type">The type of attachment.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the list of attachments of a specific type that are associated with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt; GetAttachmentsAsync (string project, int buildId, string type, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt; GetAttachmentsAsync(string project, int32 buildId, string type, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetAttachmentsAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentsAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt;&#xA;override this.GetAttachmentsAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt;" Usage="buildHttpClientBase.GetAttachmentsAsync (project, buildId, type, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Attachment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="type">The type of attachment.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the list of attachments of a specific type that are associated with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBadgeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetBadgeAsync (Guid project, int definitionId, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetBadgeAsync(valuetype System.Guid project, int32 definitionId, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBadgeAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBadgeAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetBadgeAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="buildHttpClientBase.GetBadgeAsync (project, definitionId, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("Use StatusBadgeController.GetStatusBadge")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">The project ID or name.</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="branchName">The name of the branch.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a badge that indicates the status of the most recent build for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetBuildAsync (int buildId, string propertyFilters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetBuildAsync(int32 buildId, string propertyFilters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildAsync(System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.GetBuildAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.GetBuildAsync (buildId, propertyFilters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="propertyFilters" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId"></param>
        <param name="propertyFilters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetBuildAsync (Guid project, int buildId, string propertyFilters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetBuildAsync(valuetype System.Guid project, int32 buildId, string propertyFilters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.GetBuildAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.GetBuildAsync (project, buildId, propertyFilters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="propertyFilters" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId"></param>
        <param name="propertyFilters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetBuildAsync (string project, int buildId, string propertyFilters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetBuildAsync(string project, int32 buildId, string propertyFilters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.GetBuildAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.GetBuildAsync (project, buildId, propertyFilters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="propertyFilters" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId"></param>
        <param name="propertyFilters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildBadgeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt; GetBuildBadgeAsync (Guid project, string repoType, string repoId = null, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt; GetBuildBadgeAsync(valuetype System.Guid project, string repoType, string repoId, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildBadgeAsync(System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildBadgeAsync : Guid * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt;&#xA;override this.GetBuildBadgeAsync : Guid * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt;" Usage="buildHttpClientBase.GetBuildBadgeAsync (project, repoType, repoId, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="repoType" Type="System.String" />
        <Parameter Name="repoId" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="repoType">The repository type.</param>
        <param name="repoId">The repository ID.</param>
        <param name="branchName">The branch name.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a badge that indicates the status of the most recent build for the specified branch.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildBadgeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt; GetBuildBadgeAsync (string project, string repoType, string repoId = null, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt; GetBuildBadgeAsync(string project, string repoType, string repoId, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildBadgeAsync(System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildBadgeAsync : string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt;&#xA;override this.GetBuildBadgeAsync : string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt;" Usage="buildHttpClientBase.GetBuildBadgeAsync (project, repoType, repoId, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildBadge&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="repoType" Type="System.String" />
        <Parameter Name="repoId" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="repoType">The repository type.</param>
        <param name="repoId">The repository ID.</param>
        <param name="branchName">The branch name.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a badge that indicates the status of the most recent build for the specified branch.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildBadgeDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetBuildBadgeDataAsync (Guid project, string repoType, string repoId = null, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetBuildBadgeDataAsync(valuetype System.Guid project, string repoType, string repoId, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildBadgeDataAsync(System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildBadgeDataAsync : Guid * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetBuildBadgeDataAsync : Guid * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="buildHttpClientBase.GetBuildBadgeDataAsync (project, repoType, repoId, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="repoType" Type="System.String" />
        <Parameter Name="repoId" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="repoType">The repository type.</param>
        <param name="repoId">The repository ID.</param>
        <param name="branchName">The branch name.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a badge that indicates the status of the most recent build for the specified branch.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildBadgeDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetBuildBadgeDataAsync (string project, string repoType, string repoId = null, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetBuildBadgeDataAsync(string project, string repoType, string repoId, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildBadgeDataAsync(System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildBadgeDataAsync : string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetBuildBadgeDataAsync : string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="buildHttpClientBase.GetBuildBadgeDataAsync (project, repoType, repoId, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="repoType" Type="System.String" />
        <Parameter Name="repoId" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="repoType">The repository type.</param>
        <param name="repoId">The repository ID.</param>
        <param name="branchName">The branch name.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a badge that indicates the status of the most recent build for the specified branch.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildChangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetBuildChangesAsync (Guid project, int buildId, string continuationToken = null, Nullable&lt;int&gt; top = null, Nullable&lt;bool&gt; includeSourceChange = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetBuildChangesAsync(valuetype System.Guid project, int32 buildId, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;bool&gt; includeSourceChange, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildChangesAsync(System.Guid,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildChangesAsync : Guid * int * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;&#xA;override this.GetBuildChangesAsync : Guid * int * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;" Usage="buildHttpClientBase.GetBuildChangesAsync (project, buildId, continuationToken, top, includeSourceChange, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeSourceChange" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId"></param>
        <param name="continuationToken"></param>
        <param name="top">The maximum number of changes to return</param>
        <param name="includeSourceChange"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the changes associated with a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildChangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetBuildChangesAsync (string project, int buildId, string continuationToken = null, Nullable&lt;int&gt; top = null, Nullable&lt;bool&gt; includeSourceChange = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetBuildChangesAsync(string project, int32 buildId, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;bool&gt; includeSourceChange, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildChangesAsync(System.String,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildChangesAsync : string * int * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;&#xA;override this.GetBuildChangesAsync : string * int * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;" Usage="buildHttpClientBase.GetBuildChangesAsync (project, buildId, continuationToken, top, includeSourceChange, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeSourceChange" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId"></param>
        <param name="continuationToken"></param>
        <param name="top">The maximum number of changes to return</param>
        <param name="includeSourceChange"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the changes associated with a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildControllerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt; GetBuildControllerAsync (int controllerId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildController&gt; GetBuildControllerAsync(int32 controllerId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildControllerAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildControllerAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;&#xA;override this.GetBuildControllerAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;" Usage="buildHttpClientBase.GetBuildControllerAsync (controllerId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controllerId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="controllerId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a controller
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildControllersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;&gt; GetBuildControllersAsync (string name = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;&gt; GetBuildControllersAsync(string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildControllersAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildControllersAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;&gt;&#xA;override this.GetBuildControllersAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;&gt;" Usage="buildHttpClientBase.GetBuildControllersAsync (name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildController&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets controller, optionally filtered by name
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildLogAsync (Guid project, int buildId, int logId, Nullable&lt;long&gt; startLine = null, Nullable&lt;long&gt; endLine = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildLogAsync(valuetype System.Guid project, int32 buildId, int32 logId, valuetype System.Nullable`1&lt;int64&gt; startLine, valuetype System.Nullable`1&lt;int64&gt; endLine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogAsync : Guid * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildLogAsync : Guid * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildLogAsync (project, buildId, logId, startLine, endLine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="logId" Type="System.Int32" />
        <Parameter Name="startLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="endLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="logId">The ID of the log file.</param>
        <param name="startLine">The start line.</param>
        <param name="endLine">The end line.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets an individual log file for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildLogAsync (string project, int buildId, int logId, Nullable&lt;long&gt; startLine = null, Nullable&lt;long&gt; endLine = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildLogAsync(string project, int32 buildId, int32 logId, valuetype System.Nullable`1&lt;int64&gt; startLine, valuetype System.Nullable`1&lt;int64&gt; endLine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogAsync : string * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildLogAsync : string * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildLogAsync (project, buildId, logId, startLine, endLine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="logId" Type="System.Int32" />
        <Parameter Name="startLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="endLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="logId">The ID of the log file.</param>
        <param name="startLine">The start line.</param>
        <param name="endLine">The end line.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets an individual log file for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogLinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetBuildLogLinesAsync (Guid project, int buildId, int logId, Nullable&lt;long&gt; startLine = null, Nullable&lt;long&gt; endLine = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetBuildLogLinesAsync(valuetype System.Guid project, int32 buildId, int32 logId, valuetype System.Nullable`1&lt;int64&gt; startLine, valuetype System.Nullable`1&lt;int64&gt; endLine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogLinesAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogLinesAsync : Guid * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetBuildLogLinesAsync : Guid * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetBuildLogLinesAsync (project, buildId, logId, startLine, endLine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="logId" Type="System.Int32" />
        <Parameter Name="startLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="endLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="logId">The ID of the log file.</param>
        <param name="startLine">The start line.</param>
        <param name="endLine">The end line.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets an individual log file for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogLinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetBuildLogLinesAsync (string project, int buildId, int logId, Nullable&lt;long&gt; startLine = null, Nullable&lt;long&gt; endLine = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetBuildLogLinesAsync(string project, int32 buildId, int32 logId, valuetype System.Nullable`1&lt;int64&gt; startLine, valuetype System.Nullable`1&lt;int64&gt; endLine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogLinesAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogLinesAsync : string * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetBuildLogLinesAsync : string * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetBuildLogLinesAsync (project, buildId, logId, startLine, endLine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="logId" Type="System.Int32" />
        <Parameter Name="startLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="endLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="logId">The ID of the log file.</param>
        <param name="startLine">The start line.</param>
        <param name="endLine">The end line.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets an individual log file for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt; GetBuildLogsAsync (Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt; GetBuildLogsAsync(valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt;&#xA;override this.GetBuildLogsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt;" Usage="buildHttpClientBase.GetBuildLogsAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the logs for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt; GetBuildLogsAsync (string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt; GetBuildLogsAsync(string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt;&#xA;override this.GetBuildLogsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt;" Usage="buildHttpClientBase.GetBuildLogsAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildLog&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the logs for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogsZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildLogsZipAsync (Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildLogsZipAsync(valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogsZipAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogsZipAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildLogsZipAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildLogsZipAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the logs for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogsZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildLogsZipAsync (string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildLogsZipAsync(string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogsZipAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogsZipAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildLogsZipAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildLogsZipAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the logs for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildLogZipAsync (Guid project, int buildId, int logId, Nullable&lt;long&gt; startLine = null, Nullable&lt;long&gt; endLine = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildLogZipAsync(valuetype System.Guid project, int32 buildId, int32 logId, valuetype System.Nullable`1&lt;int64&gt; startLine, valuetype System.Nullable`1&lt;int64&gt; endLine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogZipAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogZipAsync : Guid * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildLogZipAsync : Guid * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildLogZipAsync (project, buildId, logId, startLine, endLine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="logId" Type="System.Int32" />
        <Parameter Name="startLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="endLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="logId">The ID of the log file.</param>
        <param name="startLine">The start line.</param>
        <param name="endLine">The end line.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets an individual log file for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildLogZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildLogZipAsync (string project, int buildId, int logId, Nullable&lt;long&gt; startLine = null, Nullable&lt;long&gt; endLine = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildLogZipAsync(string project, int32 buildId, int32 logId, valuetype System.Nullable`1&lt;int64&gt; startLine, valuetype System.Nullable`1&lt;int64&gt; endLine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildLogZipAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildLogZipAsync : string * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildLogZipAsync : string * int * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildLogZipAsync (project, buildId, logId, startLine, endLine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="logId" Type="System.Int32" />
        <Parameter Name="startLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="endLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="logId">The ID of the log file.</param>
        <param name="startLine">The start line.</param>
        <param name="endLine">The end line.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets an individual log file for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildOptionDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt; GetBuildOptionDefinitionsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt; GetBuildOptionDefinitionsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildOptionDefinitionsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildOptionDefinitionsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;&#xA;override this.GetBuildOptionDefinitionsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;" Usage="buildHttpClientBase.GetBuildOptionDefinitionsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all build definition options supported by the system.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildOptionDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt; GetBuildOptionDefinitionsAsync (Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt; GetBuildOptionDefinitionsAsync(valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildOptionDefinitionsAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildOptionDefinitionsAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;&#xA;override this.GetBuildOptionDefinitionsAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;" Usage="buildHttpClientBase.GetBuildOptionDefinitionsAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all build definition options supported by the system.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildOptionDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt; GetBuildOptionDefinitionsAsync (string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt; GetBuildOptionDefinitionsAsync(string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildOptionDefinitionsAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildOptionDefinitionsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;&#xA;override this.GetBuildOptionDefinitionsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;" Usage="buildHttpClientBase.GetBuildOptionDefinitionsAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildOptionDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all build definition options supported by the system.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetBuildPropertiesAsync (Guid project, int buildId, System.Collections.Generic.IEnumerable&lt;string&gt; filter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetBuildPropertiesAsync(valuetype System.Guid project, int32 buildId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; filter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildPropertiesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildPropertiesAsync : Guid * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.GetBuildPropertiesAsync : Guid * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.GetBuildPropertiesAsync (project, buildId, filter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="filter">A comma-delimited list of properties. If specified, filters to these specific properties.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets properties for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetBuildPropertiesAsync (string project, int buildId, System.Collections.Generic.IEnumerable&lt;string&gt; filter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetBuildPropertiesAsync(string project, int32 buildId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; filter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildPropertiesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildPropertiesAsync : string * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.GetBuildPropertiesAsync : string * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.GetBuildPropertiesAsync (project, buildId, filter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="filter">A comma-delimited list of properties. If specified, filters to these specific properties.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets properties for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildReportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt; GetBuildReportAsync (Guid project, int buildId, string type = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt; GetBuildReportAsync(valuetype System.Guid project, int32 buildId, string type, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildReportAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildReportAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt;&#xA;override this.GetBuildReportAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt;" Usage="buildHttpClientBase.GetBuildReportAsync (project, buildId, type, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="type"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a build report.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildReportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt; GetBuildReportAsync (string project, int buildId, string type = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt; GetBuildReportAsync(string project, int32 buildId, string type, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildReportAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildReportAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt;&#xA;override this.GetBuildReportAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt;" Usage="buildHttpClientBase.GetBuildReportAsync (project, buildId, type, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReportMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="type"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a build report.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildReportHtmlContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildReportHtmlContentAsync (Guid project, int buildId, string type = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildReportHtmlContentAsync(valuetype System.Guid project, int32 buildId, string type, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildReportHtmlContentAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildReportHtmlContentAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildReportHtmlContentAsync : Guid * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildReportHtmlContentAsync (project, buildId, type, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="type"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a build report.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildReportHtmlContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetBuildReportHtmlContentAsync (string project, int buildId, string type = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetBuildReportHtmlContentAsync(string project, int32 buildId, string type, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildReportHtmlContentAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildReportHtmlContentAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetBuildReportHtmlContentAsync : string * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetBuildReportHtmlContentAsync (project, buildId, type, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="type"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a build report.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; GetBuildsAsync (System.Collections.Generic.IEnumerable&lt;int&gt; definitions = null, System.Collections.Generic.IEnumerable&lt;int&gt; queues = null, string buildNumber = null, Nullable&lt;DateTime&gt; minTime = null, Nullable&lt;DateTime&gt; maxTime = null, string requestedFor = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; reasonFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; statusFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; resultFilter = null, System.Collections.Generic.IEnumerable&lt;string&gt; tagFilters = null, System.Collections.Generic.IEnumerable&lt;string&gt; properties = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;int&gt; maxBuildsPerDefinition = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; deletedFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; queryOrder = null, string branchName = null, System.Collections.Generic.IEnumerable&lt;int&gt; buildIds = null, string repositoryId = null, string repositoryType = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; GetBuildsAsync(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitions, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; queues, string buildNumber, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minTime, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; maxTime, string requestedFor, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; reasonFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; statusFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; resultFilter, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tagFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; properties, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; maxBuildsPerDefinition, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; deletedFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; queryOrder, string branchName, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; buildIds, string repositoryId, string repositoryType, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildsAsync(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildReason},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildStatus},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildResult},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder},System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetBuildsAsync : seq&lt;int&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; * string * seq&lt;int&gt; * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;" Usage="buildHttpClientBase.GetBuildsAsync (definitions, queues, buildNumber, minTime, maxTime, requestedFor, reasonFilter, statusFilter, resultFilter, tagFilters, properties, top, continuationToken, maxBuildsPerDefinition, deletedFilter, queryOrder, branchName, buildIds, repositoryId, repositoryType, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definitions" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="queues" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="buildNumber" Type="System.String" />
        <Parameter Name="minTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="maxTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="requestedFor" Type="System.String" />
        <Parameter Name="reasonFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt;" />
        <Parameter Name="statusFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt;" />
        <Parameter Name="resultFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt;" />
        <Parameter Name="tagFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="maxBuildsPerDefinition" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="deletedFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt;" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="buildIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definitions">A comma-delimited list of definition IDs. If specified, filters to builds for these definitions.</param>
        <param name="queues">A comma-delimited list of queue IDs. If specified, filters to builds that ran against these queues.</param>
        <param name="buildNumber">If specified, filters to builds that match this build number. Append * to do a prefix search.</param>
        <param name="minTime">If specified, filters to builds that finished/started/queued after this date based on the queryOrder specified.</param>
        <param name="maxTime">If specified, filters to builds that finished/started/queued before this date based on the queryOrder specified.</param>
        <param name="requestedFor">If specified, filters to builds requested for the specified user.</param>
        <param name="reasonFilter">If specified, filters to builds that match this reason.</param>
        <param name="statusFilter">If specified, filters to builds that match this status.</param>
        <param name="resultFilter">If specified, filters to builds that match this result.</param>
        <param name="tagFilters">A comma-delimited list of tags. If specified, filters to builds that have the specified tags.</param>
        <param name="properties">A comma-delimited list of properties to retrieve.</param>
        <param name="top">The maximum number of builds to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of builds.</param>
        <param name="maxBuildsPerDefinition">The maximum number of builds to return per definition.</param>
        <param name="deletedFilter">Indicates whether to exclude, include, or only return deleted builds.</param>
        <param name="queryOrder">The order in which builds should be returned.</param>
        <param name="branchName">If specified, filters to builds that built branches that built this branch.</param>
        <param name="buildIds">A comma-delimited list that specifies the IDs of builds to retrieve.</param>
        <param name="repositoryId">If specified, filters to builds that built from this repository.</param>
        <param name="repositoryType">If specified, filters to builds that built from repositories of this type.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a list of builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; GetBuildsAsync (Guid project, System.Collections.Generic.IEnumerable&lt;int&gt; definitions = null, System.Collections.Generic.IEnumerable&lt;int&gt; queues = null, string buildNumber = null, Nullable&lt;DateTime&gt; minTime = null, Nullable&lt;DateTime&gt; maxTime = null, string requestedFor = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; reasonFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; statusFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; resultFilter = null, System.Collections.Generic.IEnumerable&lt;string&gt; tagFilters = null, System.Collections.Generic.IEnumerable&lt;string&gt; properties = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;int&gt; maxBuildsPerDefinition = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; deletedFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; queryOrder = null, string branchName = null, System.Collections.Generic.IEnumerable&lt;int&gt; buildIds = null, string repositoryId = null, string repositoryType = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; GetBuildsAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitions, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; queues, string buildNumber, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minTime, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; maxTime, string requestedFor, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; reasonFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; statusFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; resultFilter, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tagFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; properties, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; maxBuildsPerDefinition, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; deletedFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; queryOrder, string branchName, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; buildIds, string repositoryId, string repositoryType, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildReason},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildStatus},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildResult},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder},System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetBuildsAsync : Guid * seq&lt;int&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; * string * seq&lt;int&gt; * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;" Usage="buildHttpClientBase.GetBuildsAsync (project, definitions, queues, buildNumber, minTime, maxTime, requestedFor, reasonFilter, statusFilter, resultFilter, tagFilters, properties, top, continuationToken, maxBuildsPerDefinition, deletedFilter, queryOrder, branchName, buildIds, repositoryId, repositoryType, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitions" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="queues" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="buildNumber" Type="System.String" />
        <Parameter Name="minTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="maxTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="requestedFor" Type="System.String" />
        <Parameter Name="reasonFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt;" />
        <Parameter Name="statusFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt;" />
        <Parameter Name="resultFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt;" />
        <Parameter Name="tagFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="maxBuildsPerDefinition" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="deletedFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt;" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="buildIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitions">A comma-delimited list of definition IDs. If specified, filters to builds for these definitions.</param>
        <param name="queues">A comma-delimited list of queue IDs. If specified, filters to builds that ran against these queues.</param>
        <param name="buildNumber">If specified, filters to builds that match this build number. Append * to do a prefix search.</param>
        <param name="minTime">If specified, filters to builds that finished/started/queued after this date based on the queryOrder specified.</param>
        <param name="maxTime">If specified, filters to builds that finished/started/queued before this date based on the queryOrder specified.</param>
        <param name="requestedFor">If specified, filters to builds requested for the specified user.</param>
        <param name="reasonFilter">If specified, filters to builds that match this reason.</param>
        <param name="statusFilter">If specified, filters to builds that match this status.</param>
        <param name="resultFilter">If specified, filters to builds that match this result.</param>
        <param name="tagFilters">A comma-delimited list of tags. If specified, filters to builds that have the specified tags.</param>
        <param name="properties">A comma-delimited list of properties to retrieve.</param>
        <param name="top">The maximum number of builds to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of builds.</param>
        <param name="maxBuildsPerDefinition">The maximum number of builds to return per definition.</param>
        <param name="deletedFilter">Indicates whether to exclude, include, or only return deleted builds.</param>
        <param name="queryOrder">The order in which builds should be returned.</param>
        <param name="branchName">If specified, filters to builds that built branches that built this branch.</param>
        <param name="buildIds">A comma-delimited list that specifies the IDs of builds to retrieve.</param>
        <param name="repositoryId">If specified, filters to builds that built from this repository.</param>
        <param name="repositoryType">If specified, filters to builds that built from repositories of this type.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; GetBuildsAsync (string project, System.Collections.Generic.IEnumerable&lt;int&gt; definitions = null, System.Collections.Generic.IEnumerable&lt;int&gt; queues = null, string buildNumber = null, Nullable&lt;DateTime&gt; minTime = null, Nullable&lt;DateTime&gt; maxTime = null, string requestedFor = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; reasonFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; statusFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; resultFilter = null, System.Collections.Generic.IEnumerable&lt;string&gt; tagFilters = null, System.Collections.Generic.IEnumerable&lt;string&gt; properties = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;int&gt; maxBuildsPerDefinition = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; deletedFilter = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; queryOrder = null, string branchName = null, System.Collections.Generic.IEnumerable&lt;int&gt; buildIds = null, string repositoryId = null, string repositoryType = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; GetBuildsAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitions, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; queues, string buildNumber, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minTime, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; maxTime, string requestedFor, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; reasonFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; statusFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; resultFilter, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tagFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; properties, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; maxBuildsPerDefinition, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; deletedFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; queryOrder, string branchName, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; buildIds, string repositoryId, string repositoryType, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildsAsync(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildReason},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildStatus},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildResult},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption},System.Nullable{Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder},System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetBuildsAsync : string * seq&lt;int&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt; * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt; * string * seq&lt;int&gt; * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;" Usage="buildHttpClientBase.GetBuildsAsync (project, definitions, queues, buildNumber, minTime, maxTime, requestedFor, reasonFilter, statusFilter, resultFilter, tagFilters, properties, top, continuationToken, maxBuildsPerDefinition, deletedFilter, queryOrder, branchName, buildIds, repositoryId, repositoryType, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitions" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="queues" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="buildNumber" Type="System.String" />
        <Parameter Name="minTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="maxTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="requestedFor" Type="System.String" />
        <Parameter Name="reasonFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildReason&gt;" />
        <Parameter Name="statusFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildStatus&gt;" />
        <Parameter Name="resultFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResult&gt;" />
        <Parameter Name="tagFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="maxBuildsPerDefinition" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="deletedFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.QueryDeletedOption&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.BuildQueryOrder&gt;" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="buildIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitions">A comma-delimited list of definition IDs. If specified, filters to builds for these definitions.</param>
        <param name="queues">A comma-delimited list of queue IDs. If specified, filters to builds that ran against these queues.</param>
        <param name="buildNumber">If specified, filters to builds that match this build number. Append * to do a prefix search.</param>
        <param name="minTime">If specified, filters to builds that finished/started/queued after this date based on the queryOrder specified.</param>
        <param name="maxTime">If specified, filters to builds that finished/started/queued before this date based on the queryOrder specified.</param>
        <param name="requestedFor">If specified, filters to builds requested for the specified user.</param>
        <param name="reasonFilter">If specified, filters to builds that match this reason.</param>
        <param name="statusFilter">If specified, filters to builds that match this status.</param>
        <param name="resultFilter">If specified, filters to builds that match this result.</param>
        <param name="tagFilters">A comma-delimited list of tags. If specified, filters to builds that have the specified tags.</param>
        <param name="properties">A comma-delimited list of properties to retrieve.</param>
        <param name="top">The maximum number of builds to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of builds.</param>
        <param name="maxBuildsPerDefinition">The maximum number of builds to return per definition.</param>
        <param name="deletedFilter">Indicates whether to exclude, include, or only return deleted builds.</param>
        <param name="queryOrder">The order in which builds should be returned.</param>
        <param name="branchName">If specified, filters to builds that built branches that built this branch.</param>
        <param name="buildIds">A comma-delimited list that specifies the IDs of builds to retrieve.</param>
        <param name="repositoryId">If specified, filters to builds that built from this repository.</param>
        <param name="repositoryType">If specified, filters to builds that built from repositories of this type.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; GetBuildSettingsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; GetBuildSettingsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildSettingsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildSettingsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;&#xA;override this.GetBuildSettingsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;" Usage="buildHttpClientBase.GetBuildSettingsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the build settings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; GetBuildSettingsAsync (Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; GetBuildSettingsAsync(valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildSettingsAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildSettingsAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;&#xA;override this.GetBuildSettingsAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;" Usage="buildHttpClientBase.GetBuildSettingsAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the build settings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; GetBuildSettingsAsync (string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; GetBuildSettingsAsync(string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildSettingsAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildSettingsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;&#xA;override this.GetBuildSettingsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;" Usage="buildHttpClientBase.GetBuildSettingsAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the build settings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetBuildTagsAsync (Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetBuildTagsAsync(valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildTagsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildTagsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetBuildTagsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetBuildTagsAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the tags for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetBuildTagsAsync (string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetBuildTagsAsync(string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildTagsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildTagsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetBuildTagsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetBuildTagsAsync (project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the tags for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildTimelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt; GetBuildTimelineAsync (Guid project, int buildId, Nullable&lt;Guid&gt; timelineId = null, Nullable&lt;int&gt; changeId = null, Nullable&lt;Guid&gt; planId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Timeline&gt; GetBuildTimelineAsync(valuetype System.Guid project, int32 buildId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; timelineId, valuetype System.Nullable`1&lt;int32&gt; changeId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; planId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildTimelineAsync(System.Guid,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildTimelineAsync : Guid * int * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt;&#xA;override this.GetBuildTimelineAsync : Guid * int * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt;" Usage="buildHttpClientBase.GetBuildTimelineAsync (project, buildId, timelineId, changeId, planId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="timelineId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="changeId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="planId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId"></param>
        <param name="timelineId"></param>
        <param name="changeId"></param>
        <param name="planId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets details for a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildTimelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt; GetBuildTimelineAsync (string project, int buildId, Nullable&lt;Guid&gt; timelineId = null, Nullable&lt;int&gt; changeId = null, Nullable&lt;Guid&gt; planId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Timeline&gt; GetBuildTimelineAsync(string project, int32 buildId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; timelineId, valuetype System.Nullable`1&lt;int32&gt; changeId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; planId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildTimelineAsync(System.String,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildTimelineAsync : string * int * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt;&#xA;override this.GetBuildTimelineAsync : string * int * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt;" Usage="buildHttpClientBase.GetBuildTimelineAsync (project, buildId, timelineId, changeId, planId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Timeline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="timelineId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="changeId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="planId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId"></param>
        <param name="timelineId"></param>
        <param name="changeId"></param>
        <param name="planId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets details for a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildWorkItemsRefsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsAsync (Guid project, int buildId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsAsync(valuetype System.Guid project, int32 buildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildWorkItemsRefsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildWorkItemsRefsAsync : Guid * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;&#xA;override this.GetBuildWorkItemsRefsAsync : Guid * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;" Usage="buildHttpClientBase.GetBuildWorkItemsRefsAsync (project, buildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="top">The maximum number of work items to return.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the work items associated with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildWorkItemsRefsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsAsync (string project, int buildId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsAsync(string project, int32 buildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildWorkItemsRefsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildWorkItemsRefsAsync : string * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;&#xA;override this.GetBuildWorkItemsRefsAsync : string * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;" Usage="buildHttpClientBase.GetBuildWorkItemsRefsAsync (project, buildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="top">The maximum number of work items to return.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the work items associated with a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildWorkItemsRefsFromCommitsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsFromCommitsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; commitIds, Guid project, int buildId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsFromCommitsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; commitIds, valuetype System.Guid project, int32 buildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildWorkItemsRefsFromCommitsAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildWorkItemsRefsFromCommitsAsync : seq&lt;string&gt; * Guid * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;&#xA;override this.GetBuildWorkItemsRefsFromCommitsAsync : seq&lt;string&gt; * Guid * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;" Usage="buildHttpClientBase.GetBuildWorkItemsRefsFromCommitsAsync (commitIds, project, buildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commitIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="commitIds">A comma-delimited list of commit IDs.</param>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="top">The maximum number of work items to return, or the number of commits to consider if no commit IDs are specified.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the work items associated with a build, filtered to specific commits.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuildWorkItemsRefsFromCommitsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsFromCommitsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; commitIds, string project, int buildId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetBuildWorkItemsRefsFromCommitsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; commitIds, string project, int32 buildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetBuildWorkItemsRefsFromCommitsAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBuildWorkItemsRefsFromCommitsAsync : seq&lt;string&gt; * string * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;&#xA;override this.GetBuildWorkItemsRefsFromCommitsAsync : seq&lt;string&gt; * string * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;" Usage="buildHttpClientBase.GetBuildWorkItemsRefsFromCommitsAsync (commitIds, project, buildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commitIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="commitIds">A comma-delimited list of commit IDs.</param>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="top">The maximum number of work items to return, or the number of commits to consider if no commit IDs are specified.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the work items associated with a build, filtered to specific commits.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesBetweenBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetChangesBetweenBuildsAsync (Guid project, Nullable&lt;int&gt; fromBuildId = null, Nullable&lt;int&gt; toBuildId = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetChangesBetweenBuildsAsync(valuetype System.Guid project, valuetype System.Nullable`1&lt;int32&gt; fromBuildId, valuetype System.Nullable`1&lt;int32&gt; toBuildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetChangesBetweenBuildsAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesBetweenBuildsAsync : Guid * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;&#xA;override this.GetChangesBetweenBuildsAsync : Guid * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;" Usage="buildHttpClientBase.GetChangesBetweenBuildsAsync (project, fromBuildId, toBuildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="fromBuildId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="toBuildId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="fromBuildId">The ID of the first build.</param>
        <param name="toBuildId">The ID of the last build.</param>
        <param name="top">The maximum number of changes to return.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the changes made to the repository between two given builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesBetweenBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetChangesBetweenBuildsAsync (string project, Nullable&lt;int&gt; fromBuildId = null, Nullable&lt;int&gt; toBuildId = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt; GetChangesBetweenBuildsAsync(string project, valuetype System.Nullable`1&lt;int32&gt; fromBuildId, valuetype System.Nullable`1&lt;int32&gt; toBuildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetChangesBetweenBuildsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesBetweenBuildsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;&#xA;override this.GetChangesBetweenBuildsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;" Usage="buildHttpClientBase.GetChangesBetweenBuildsAsync (project, fromBuildId, toBuildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Change&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="fromBuildId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="toBuildId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="fromBuildId">The ID of the first build.</param>
        <param name="toBuildId">The ID of the last build.</param>
        <param name="top">The maximum number of changes to return.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the changes made to the repository between two given builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; GetDefinitionAsync (int definitionId, Nullable&lt;int&gt; revision = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = null, Nullable&lt;bool&gt; includeLatestBuilds = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; GetDefinitionAsync(int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; revision, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionAsync : int * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.GetDefinitionAsync (definitionId, revision, minMetricsTime, propertyFilters, includeLatestBuilds, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definitionId">The ID of the definition.</param>
        <param name="revision">The revision number to retrieve. If this is not specified, the latest version will be returned.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="propertyFilters">A comma-delimited list of properties to include in the results.</param>
        <param name="includeLatestBuilds"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a definition, optionally at a specific revision.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; GetDefinitionAsync (Guid project, int definitionId, Nullable&lt;int&gt; revision = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = null, Nullable&lt;bool&gt; includeLatestBuilds = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; GetDefinitionAsync(valuetype System.Guid project, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; revision, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionAsync : Guid * int * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.GetDefinitionAsync (project, definitionId, revision, minMetricsTime, propertyFilters, includeLatestBuilds, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="revision">The revision number to retrieve. If this is not specified, the latest version will be returned.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="propertyFilters">A comma-delimited list of properties to include in the results.</param>
        <param name="includeLatestBuilds"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a definition, optionally at a specific revision.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; GetDefinitionAsync (string project, int definitionId, Nullable&lt;int&gt; revision = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = null, Nullable&lt;bool&gt; includeLatestBuilds = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; GetDefinitionAsync(string project, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; revision, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionAsync : string * int * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.GetDefinitionAsync (project, definitionId, revision, minMetricsTime, propertyFilters, includeLatestBuilds, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="revision">The revision number to retrieve. If this is not specified, the latest version will be returned.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="propertyFilters">A comma-delimited list of properties to include in the results.</param>
        <param name="includeLatestBuilds"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a definition, optionally at a specific revision.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetDefinitionMetricsAsync (Guid project, int definitionId, Nullable&lt;DateTime&gt; minMetricsTime = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetDefinitionMetricsAsync(valuetype System.Guid project, int32 definitionId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionMetricsAsync(System.Guid,System.Int32,System.Nullable{System.DateTime},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionMetricsAsync : Guid * int * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;&#xA;override this.GetDefinitionMetricsAsync : Guid * int * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionMetricsAsync (project, definitionId, minMetricsTime, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="minMetricsTime">The date from which to calculate metrics.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets build metrics for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetDefinitionMetricsAsync (string project, int definitionId, Nullable&lt;DateTime&gt; minMetricsTime = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetDefinitionMetricsAsync(string project, int32 definitionId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionMetricsAsync(System.String,System.Int32,System.Nullable{System.DateTime},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionMetricsAsync : string * int * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;&#xA;override this.GetDefinitionMetricsAsync : string * int * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionMetricsAsync (project, definitionId, minMetricsTime, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="minMetricsTime">The date from which to calculate metrics.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets build metrics for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetDefinitionPropertiesAsync (Guid project, int definitionId, System.Collections.Generic.IEnumerable&lt;string&gt; filter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetDefinitionPropertiesAsync(valuetype System.Guid project, int32 definitionId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; filter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionPropertiesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionPropertiesAsync : Guid * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.GetDefinitionPropertiesAsync : Guid * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.GetDefinitionPropertiesAsync (project, definitionId, filter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="filter">A comma-delimited list of properties. If specified, filters to these specific properties.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets properties for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetDefinitionPropertiesAsync (string project, int definitionId, System.Collections.Generic.IEnumerable&lt;string&gt; filter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; GetDefinitionPropertiesAsync(string project, int32 definitionId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; filter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionPropertiesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionPropertiesAsync : string * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.GetDefinitionPropertiesAsync : string * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.GetDefinitionPropertiesAsync (project, definitionId, filter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="filter">A comma-delimited list of properties. If specified, filters to these specific properties.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets properties for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetDefinitionResourcesAsync (Guid project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetDefinitionResourcesAsync(valuetype System.Guid project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionResourcesAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionResourcesAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.GetDefinitionResourcesAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionResourcesAsync (project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetDefinitionResourcesAsync (string project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetDefinitionResourcesAsync(string project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionResourcesAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionResourcesAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.GetDefinitionResourcesAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionResourcesAsync (project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionRevisionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt; GetDefinitionRevisionsAsync (Guid project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt; GetDefinitionRevisionsAsync(valuetype System.Guid project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionRevisionsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionRevisionsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt;&#xA;override this.GetDefinitionRevisionsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionRevisionsAsync (project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all revisions of a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionRevisionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt; GetDefinitionRevisionsAsync (string project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt; GetDefinitionRevisionsAsync(string project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionRevisionsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionRevisionsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt;&#xA;override this.GetDefinitionRevisionsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionRevisionsAsync (project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionRevision&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all revisions of a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync (string name = null, string repositoryId = null, string repositoryType = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;int&gt; definitionIds = null, string path = null, Nullable&lt;DateTime&gt; builtAfter = null, Nullable&lt;DateTime&gt; notBuiltAfter = null, Nullable&lt;bool&gt; includeAllProperties = null, Nullable&lt;bool&gt; includeLatestBuilds = null, Nullable&lt;Guid&gt; taskIdFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync(string name, string repositoryId, string repositoryType, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitionIds, string path, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; builtAfter, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; notBuiltAfter, valuetype System.Nullable`1&lt;bool&gt; includeAllProperties, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionsAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionsAsync : string * string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; * Nullable&lt;int&gt; * string * Nullable&lt;DateTime&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionsAsync (name, repositoryId, repositoryType, queryOrder, top, continuationToken, minMetricsTime, definitionIds, path, builtAfter, notBuiltAfter, includeAllProperties, includeLatestBuilds, taskIdFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="definitionIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="builtAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="notBuiltAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="includeAllProperties" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">If specified, filters to definitions whose names match this pattern.</param>
        <param name="repositoryId">A repository ID. If specified, filters to definitions that use this repository.</param>
        <param name="repositoryType">If specified, filters to definitions that have a repository of this type.</param>
        <param name="queryOrder">Indicates the order in which definitions should be returned.</param>
        <param name="top">The maximum number of definitions to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of definitions.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="definitionIds">A comma-delimited list that specifies the IDs of definitions to retrieve.</param>
        <param name="path">If specified, filters to definitions under this folder.</param>
        <param name="builtAfter">If specified, filters to definitions that have builds after this date.</param>
        <param name="notBuiltAfter">If specified, filters to definitions that do not have builds after this date.</param>
        <param name="includeAllProperties">Indicates whether the full definitions should be returned. By default, shallow representations of the definitions are returned.</param>
        <param name="includeLatestBuilds">Indicates whether to return the latest and latest completed builds for this definition.</param>
        <param name="taskIdFilter">If specified, filters to definitions that use the specified task.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a list of definitions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync (Guid project, string name = null, string repositoryId = null, string repositoryType = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;int&gt; definitionIds = null, string path = null, Nullable&lt;DateTime&gt; builtAfter = null, Nullable&lt;DateTime&gt; notBuiltAfter = null, Nullable&lt;bool&gt; includeAllProperties = null, Nullable&lt;bool&gt; includeLatestBuilds = null, Nullable&lt;Guid&gt; taskIdFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync(valuetype System.Guid project, string name, string repositoryId, string repositoryType, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitionIds, string path, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; builtAfter, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; notBuiltAfter, valuetype System.Nullable`1&lt;bool&gt; includeAllProperties, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionsAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionsAsync : Guid * string * string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; * Nullable&lt;int&gt; * string * Nullable&lt;DateTime&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionsAsync (project, name, repositoryId, repositoryType, queryOrder, top, continuationToken, minMetricsTime, definitionIds, path, builtAfter, notBuiltAfter, includeAllProperties, includeLatestBuilds, taskIdFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="definitionIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="builtAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="notBuiltAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="includeAllProperties" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="name">If specified, filters to definitions whose names match this pattern.</param>
        <param name="repositoryId">A repository ID. If specified, filters to definitions that use this repository.</param>
        <param name="repositoryType">If specified, filters to definitions that have a repository of this type.</param>
        <param name="queryOrder">Indicates the order in which definitions should be returned.</param>
        <param name="top">The maximum number of definitions to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of definitions.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="definitionIds">A comma-delimited list that specifies the IDs of definitions to retrieve.</param>
        <param name="path">If specified, filters to definitions under this folder.</param>
        <param name="builtAfter">If specified, filters to definitions that have builds after this date.</param>
        <param name="notBuiltAfter">If specified, filters to definitions that do not have builds after this date.</param>
        <param name="includeAllProperties">Indicates whether the full definitions should be returned. By default, shallow representations of the definitions are returned.</param>
        <param name="includeLatestBuilds">Indicates whether to return the latest and latest completed builds for this definition.</param>
        <param name="taskIdFilter">If specified, filters to definitions that use the specified task.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a list of definitions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync (string project, string name = null, string repositoryId = null, string repositoryType = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;int&gt; definitionIds = null, string path = null, Nullable&lt;DateTime&gt; builtAfter = null, Nullable&lt;DateTime&gt; notBuiltAfter = null, Nullable&lt;bool&gt; includeAllProperties = null, Nullable&lt;bool&gt; includeLatestBuilds = null, Nullable&lt;Guid&gt; taskIdFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync(string project, string name, string repositoryId, string repositoryType, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitionIds, string path, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; builtAfter, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; notBuiltAfter, valuetype System.Nullable`1&lt;bool&gt; includeAllProperties, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionsAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionsAsync : string * string * string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; * Nullable&lt;int&gt; * string * Nullable&lt;DateTime&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionsAsync (project, name, repositoryId, repositoryType, queryOrder, top, continuationToken, minMetricsTime, definitionIds, path, builtAfter, notBuiltAfter, includeAllProperties, includeLatestBuilds, taskIdFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="definitionIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="builtAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="notBuiltAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="includeAllProperties" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="name">If specified, filters to definitions whose names match this pattern.</param>
        <param name="repositoryId">A repository ID. If specified, filters to definitions that use this repository.</param>
        <param name="repositoryType">If specified, filters to definitions that have a repository of this type.</param>
        <param name="queryOrder">Indicates the order in which definitions should be returned.</param>
        <param name="top">The maximum number of definitions to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of definitions.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="definitionIds">A comma-delimited list that specifies the IDs of definitions to retrieve.</param>
        <param name="path">If specified, filters to definitions under this folder.</param>
        <param name="builtAfter">If specified, filters to definitions that have builds after this date.</param>
        <param name="notBuiltAfter">If specified, filters to definitions that do not have builds after this date.</param>
        <param name="includeAllProperties">Indicates whether the full definitions should be returned. By default, shallow representations of the definitions are returned.</param>
        <param name="includeLatestBuilds">Indicates whether to return the latest and latest completed builds for this definition.</param>
        <param name="taskIdFilter">If specified, filters to definitions that use the specified task.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Gets a list of definitions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync (Guid project, string name = null, string repositoryId = null, string repositoryType = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;int&gt; definitionIds = null, string path = null, Nullable&lt;DateTime&gt; builtAfter = null, Nullable&lt;DateTime&gt; notBuiltAfter = null, Nullable&lt;bool&gt; includeAllProperties = null, Nullable&lt;bool&gt; includeLatestBuilds = null, Nullable&lt;Guid&gt; taskIdFilter = null, Nullable&lt;int&gt; processType = null, string yamlFilename = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync(valuetype System.Guid project, string name, string repositoryId, string repositoryType, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitionIds, string path, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; builtAfter, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; notBuiltAfter, valuetype System.Nullable`1&lt;bool&gt; includeAllProperties, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, valuetype System.Nullable`1&lt;int32&gt; processType, string yamlFilename, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionsAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionsAsync : Guid * string * string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; * Nullable&lt;int&gt; * string * Nullable&lt;DateTime&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionsAsync (project, name, repositoryId, repositoryType, queryOrder, top, continuationToken, minMetricsTime, definitionIds, path, builtAfter, notBuiltAfter, includeAllProperties, includeLatestBuilds, taskIdFilter, processType, yamlFilename, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="definitionIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="builtAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="notBuiltAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="includeAllProperties" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="processType" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="yamlFilename" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="name">If specified, filters to definitions whose names match this pattern.</param>
        <param name="repositoryId">A repository ID. If specified, filters to definitions that use this repository.</param>
        <param name="repositoryType">If specified, filters to definitions that have a repository of this type.</param>
        <param name="queryOrder">Indicates the order in which definitions should be returned.</param>
        <param name="top">The maximum number of definitions to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of definitions.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="definitionIds">A comma-delimited list that specifies the IDs of definitions to retrieve.</param>
        <param name="path">If specified, filters to definitions under this folder.</param>
        <param name="builtAfter">If specified, filters to definitions that have builds after this date.</param>
        <param name="notBuiltAfter">If specified, filters to definitions that do not have builds after this date.</param>
        <param name="includeAllProperties">Indicates whether the full definitions should be returned. By default, shallow representations of the definitions are returned.</param>
        <param name="includeLatestBuilds">Indicates whether to return the latest and latest completed builds for this definition.</param>
        <param name="taskIdFilter">If specified, filters to definitions that use the specified task.</param>
        <param name="processType">If specified, filters to definitions with the given process type.</param>
        <param name="yamlFilename">If specified, filters to YAML definitions that match the given filename.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of definitions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync (string project, string name = null, string repositoryId = null, string repositoryType = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder = null, Nullable&lt;int&gt; top = null, string continuationToken = null, Nullable&lt;DateTime&gt; minMetricsTime = null, System.Collections.Generic.IEnumerable&lt;int&gt; definitionIds = null, string path = null, Nullable&lt;DateTime&gt; builtAfter = null, Nullable&lt;DateTime&gt; notBuiltAfter = null, Nullable&lt;bool&gt; includeAllProperties = null, Nullable&lt;bool&gt; includeLatestBuilds = null, Nullable&lt;Guid&gt; taskIdFilter = null, Nullable&lt;int&gt; processType = null, string yamlFilename = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt; GetDefinitionsAsync(string project, string name, string repositoryId, string repositoryType, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; queryOrder, valuetype System.Nullable`1&lt;int32&gt; top, string continuationToken, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; definitionIds, string path, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; builtAfter, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; notBuiltAfter, valuetype System.Nullable`1&lt;bool&gt; includeAllProperties, valuetype System.Nullable`1&lt;bool&gt; includeLatestBuilds, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, valuetype System.Nullable`1&lt;int32&gt; processType, string yamlFilename, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionsAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetDefinitionsAsync : string * string * string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt; * Nullable&lt;int&gt; * string * Nullable&lt;DateTime&gt; * seq&lt;int&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * Nullable&lt;int&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionsAsync (project, name, repositoryId, repositoryType, queryOrder, top, continuationToken, minMetricsTime, definitionIds, path, builtAfter, notBuiltAfter, includeAllProperties, includeLatestBuilds, taskIdFilter, processType, yamlFilename, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="repositoryType" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionQueryOrder&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="definitionIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="builtAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="notBuiltAfter" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="includeAllProperties" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLatestBuilds" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="processType" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="yamlFilename" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="name">If specified, filters to definitions whose names match this pattern.</param>
        <param name="repositoryId">A repository ID. If specified, filters to definitions that use this repository.</param>
        <param name="repositoryType">If specified, filters to definitions that have a repository of this type.</param>
        <param name="queryOrder">Indicates the order in which definitions should be returned.</param>
        <param name="top">The maximum number of definitions to return.</param>
        <param name="continuationToken">A continuation token, returned by a previous call to this method, that can be used to return the next set of definitions.</param>
        <param name="minMetricsTime">If specified, indicates the date from which metrics should be included.</param>
        <param name="definitionIds">A comma-delimited list that specifies the IDs of definitions to retrieve.</param>
        <param name="path">If specified, filters to definitions under this folder.</param>
        <param name="builtAfter">If specified, filters to definitions that have builds after this date.</param>
        <param name="notBuiltAfter">If specified, filters to definitions that do not have builds after this date.</param>
        <param name="includeAllProperties">Indicates whether the full definitions should be returned. By default, shallow representations of the definitions are returned.</param>
        <param name="includeLatestBuilds">Indicates whether to return the latest and latest completed builds for this definition.</param>
        <param name="taskIdFilter">If specified, filters to definitions that use the specified task.</param>
        <param name="processType">If specified, filters to definitions with the given process type.</param>
        <param name="yamlFilename">If specified, filters to YAML definitions that match the given filename.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of definitions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetDefinitionTagsAsync (Guid project, int definitionId, Nullable&lt;int&gt; revision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetDefinitionTagsAsync(valuetype System.Guid project, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; revision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionTagsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionTagsAsync : Guid * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetDefinitionTagsAsync : Guid * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionTagsAsync (project, definitionId, revision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="revision">The definition revision number. If not specified, uses the latest revision of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the tags for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefinitionTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetDefinitionTagsAsync (string project, int definitionId, Nullable&lt;int&gt; revision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetDefinitionTagsAsync(string project, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; revision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetDefinitionTagsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDefinitionTagsAsync : string * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetDefinitionTagsAsync : string * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetDefinitionTagsAsync (project, definitionId, revision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="revision">The definition revision number. If not specified, uses the latest revision of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the tags for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetFileAsync (Guid project, int buildId, string artifactName, string fileId, string fileName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetFileAsync(valuetype System.Guid project, int32 buildId, string artifactName, string fileId, string fileName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetFileAsync(System.Guid,System.Int32,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFileAsync : Guid * int * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetFileAsync : Guid * int * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetFileAsync (project, buildId, artifactName, fileId, fileName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="fileId">The primary key for the file.</param>
        <param name="fileName">The name that the file will be set to.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a file from the build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetFileAsync (string project, int buildId, string artifactName, string fileId, string fileName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetFileAsync(string project, int32 buildId, string artifactName, string fileId, string fileName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetFileAsync(System.String,System.Int32,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFileAsync : string * int * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetFileAsync : string * int * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetFileAsync (project, buildId, artifactName, fileId, fileName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="fileId" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="fileId">The primary key for the file.</param>
        <param name="fileName">The name that the file will be set to.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a file from the build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileContentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetFileContentsAsync (Guid project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, string commitOrBranch = null, string path = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetFileContentsAsync(valuetype System.Guid project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, string commitOrBranch, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetFileContentsAsync(System.Guid,System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFileContentsAsync : Guid * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetFileContentsAsync : Guid * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetFileContentsAsync (project, providerName, serviceEndpointId, repository, commitOrBranch, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="commitOrBranch" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="commitOrBranch">The identifier of the commit or branch from which a file's contents are retrieved.</param>
        <param name="path">The path to the file to retrieve, relative to the root of the repository.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the contents of a file in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileContentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetFileContentsAsync (string project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, string commitOrBranch = null, string path = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetFileContentsAsync(string project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, string commitOrBranch, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetFileContentsAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFileContentsAsync : string * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetFileContentsAsync : string * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetFileContentsAsync (project, providerName, serviceEndpointId, repository, commitOrBranch, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="commitOrBranch" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="commitOrBranch">The identifier of the commit or branch from which a file's contents are retrieved.</param>
        <param name="path">The path to the file to retrieve, relative to the root of the repository.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the contents of a file in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFoldersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt; GetFoldersAsync (Guid project, string path = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; queryOrder = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt; GetFoldersAsync(valuetype System.Guid project, string path, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; queryOrder, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetFoldersAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFoldersAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt;&#xA;override this.GetFoldersAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt;" Usage="buildHttpClientBase.GetFoldersAsync (project, path, queryOrder, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">The path to start with.</param>
        <param name="queryOrder">The order in which folders should be returned.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of build definition folders.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFoldersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt; GetFoldersAsync (string project, string path = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; queryOrder = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt; GetFoldersAsync(string project, string path, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; queryOrder, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetFoldersAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFoldersAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt;&#xA;override this.GetFoldersAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt;" Usage="buildHttpClientBase.GetFoldersAsync (project, path, queryOrder, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.FolderQueryOrder&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">The path to start with.</param>
        <param name="queryOrder">The order in which folders should be returned.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of build definition folders.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLatestBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetLatestBuildAsync (Guid project, string definition, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetLatestBuildAsync(valuetype System.Guid project, string definition, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetLatestBuildAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetLatestBuildAsync : Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.GetLatestBuildAsync : Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.GetLatestBuildAsync (project, definition, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definition" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definition">definition name with optional leading folder path, or the definition id</param>
        <param name="branchName">optional parameter that indicates the specific branch to use</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the latest build for a definition, optionally scoped to a specific branch.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLatestBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetLatestBuildAsync (string project, string definition, string branchName = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; GetLatestBuildAsync(string project, string definition, string branchName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetLatestBuildAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetLatestBuildAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.GetLatestBuildAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.GetLatestBuildAsync (project, definition, branchName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definition" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definition">definition name with optional leading folder path, or the definition id</param>
        <param name="branchName">optional parameter that indicates the specific branch to use</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the latest build for a definition, optionally scoped to a specific branch.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathContentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt; GetPathContentsAsync (Guid project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, string commitOrBranch = null, string path = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt; GetPathContentsAsync(valuetype System.Guid project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, string commitOrBranch, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetPathContentsAsync(System.Guid,System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPathContentsAsync : Guid * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt;&#xA;override this.GetPathContentsAsync : Guid * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt;" Usage="buildHttpClientBase.GetPathContentsAsync (project, providerName, serviceEndpointId, repository, commitOrBranch, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="commitOrBranch" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="commitOrBranch">The identifier of the commit or branch from which a file's contents are retrieved.</param>
        <param name="path">The path contents to list, relative to the root of the repository.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the contents of a directory in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathContentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt; GetPathContentsAsync (string project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, string commitOrBranch = null, string path = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt; GetPathContentsAsync(string project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, string commitOrBranch, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetPathContentsAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPathContentsAsync : string * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt;&#xA;override this.GetPathContentsAsync : string * string * Nullable&lt;Guid&gt; * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt;" Usage="buildHttpClientBase.GetPathContentsAsync (project, providerName, serviceEndpointId, repository, commitOrBranch, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositoryItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="commitOrBranch" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="commitOrBranch">The identifier of the commit or branch from which a file's contents are retrieved.</param>
        <param name="path">The path contents to list, relative to the root of the repository.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets the contents of a directory in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetProjectMetricsAsync (Guid project, string metricAggregationType = null, Nullable&lt;DateTime&gt; minMetricsTime = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetProjectMetricsAsync(valuetype System.Guid project, string metricAggregationType, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetProjectMetricsAsync(System.Guid,System.String,System.Nullable{System.DateTime},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProjectMetricsAsync : Guid * string * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;&#xA;override this.GetProjectMetricsAsync : Guid * string * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;" Usage="buildHttpClientBase.GetProjectMetricsAsync (project, metricAggregationType, minMetricsTime, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="metricAggregationType" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="metricAggregationType">The aggregation type to use (hourly, daily).</param>
        <param name="minMetricsTime">The date from which to calculate metrics.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets build metrics for a project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetProjectMetricsAsync (string project, string metricAggregationType = null, Nullable&lt;DateTime&gt; minMetricsTime = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt; GetProjectMetricsAsync(string project, string metricAggregationType, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; minMetricsTime, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetProjectMetricsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProjectMetricsAsync : string * string * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;&#xA;override this.GetProjectMetricsAsync : string * string * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;" Usage="buildHttpClientBase.GetProjectMetricsAsync (project, metricAggregationType, minMetricsTime, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildMetric&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="metricAggregationType" Type="System.String" />
        <Parameter Name="minMetricsTime" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="metricAggregationType">The aggregation type to use (hourly, daily).</param>
        <param name="minMetricsTime">The date from which to calculate metrics.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets build metrics for a project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetProjectResourcesAsync (Guid project, string type = null, string id = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetProjectResourcesAsync(valuetype System.Guid project, string type, string id, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetProjectResourcesAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProjectResourcesAsync : Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.GetProjectResourcesAsync : Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.GetProjectResourcesAsync (project, type, id, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="type"></param>
        <param name="id"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetProjectResourcesAsync (string project, string type = null, string id = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt; GetProjectResourcesAsync(string project, string type, string id, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetProjectResourcesAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProjectResourcesAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;&#xA;override this.GetProjectResourcesAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;" Usage="buildHttpClientBase.GetProjectResourcesAsync (project, type, id, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionResourceReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="type"></param>
        <param name="id"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPullRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt; GetPullRequestAsync (Guid project, string providerName, string pullRequestId, string repositoryId = null, Nullable&lt;Guid&gt; serviceEndpointId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt; GetPullRequestAsync(valuetype System.Guid project, string providerName, string pullRequestId, string repositoryId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetPullRequestAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPullRequestAsync : Guid * string * string * string * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt;&#xA;override this.GetPullRequestAsync : Guid * string * string * string * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt;" Usage="buildHttpClientBase.GetPullRequestAsync (project, providerName, pullRequestId, repositoryId, serviceEndpointId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="pullRequestId" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="pullRequestId">Vendor-specific id of the pull request.</param>
        <param name="repositoryId">Vendor-specific identifier or the name of the repository that contains the pull request.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a pull request object from source provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPullRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt; GetPullRequestAsync (string project, string providerName, string pullRequestId, string repositoryId = null, Nullable&lt;Guid&gt; serviceEndpointId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt; GetPullRequestAsync(string project, string providerName, string pullRequestId, string repositoryId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetPullRequestAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPullRequestAsync : string * string * string * string * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt;&#xA;override this.GetPullRequestAsync : string * string * string * string * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt;" Usage="buildHttpClientBase.GetPullRequestAsync (project, providerName, pullRequestId, repositoryId, serviceEndpointId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.PullRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="pullRequestId" Type="System.String" />
        <Parameter Name="repositoryId" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="pullRequestId">Vendor-specific id of the pull request.</param>
        <param name="repositoryId">Vendor-specific identifier or the name of the repository that contains the pull request.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a pull request object from source provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResourceUsage&gt; GetResourceUsageAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildResourceUsage&gt; GetResourceUsageAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetResourceUsageAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResourceUsage&gt;&#xA;override this.GetResourceUsageAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResourceUsage&gt;" Usage="buildHttpClientBase.GetResourceUsageAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets information about build resources in the system.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusBadgeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetStatusBadgeAsync (Guid project, string definition, string branchName = null, string stageName = null, string jobName = null, string configuration = null, string label = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStatusBadgeAsync(valuetype System.Guid project, string definition, string branchName, string stageName, string jobName, string configuration, string label, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetStatusBadgeAsync(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetStatusBadgeAsync : Guid * string * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetStatusBadgeAsync : Guid * string * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="buildHttpClientBase.GetStatusBadgeAsync (project, definition, branchName, stageName, jobName, configuration, label, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definition" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="stageName" Type="System.String" />
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="configuration" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definition">Either the definition name with optional leading folder path, or the definition id.</param>
        <param name="branchName">Only consider the most recent build for this branch.</param>
        <param name="stageName">Use this stage within the pipeline to render the status.</param>
        <param name="jobName">Use this job within a stage of the pipeline to render the status.</param>
        <param name="configuration">Use this job configuration to render the status</param>
        <param name="label">Replaces the default text on the left side of the badge.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] <p>Gets the build status for a definition, optionally scoped to a specific branch, stage, job, and configuration.</p><p>If there are more than one, then it is required to pass in a <paramref name="stageName" /> value when specifying a <paramref name="jobName" />, and the same rule then applies for both if passing a <paramref name="configuration" /> parameter.</p></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusBadgeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetStatusBadgeAsync (string project, string definition, string branchName = null, string stageName = null, string jobName = null, string configuration = null, string label = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStatusBadgeAsync(string project, string definition, string branchName, string stageName, string jobName, string configuration, string label, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetStatusBadgeAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetStatusBadgeAsync : string * string * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetStatusBadgeAsync : string * string * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="buildHttpClientBase.GetStatusBadgeAsync (project, definition, branchName, stageName, jobName, configuration, label, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definition" Type="System.String" />
        <Parameter Name="branchName" Type="System.String" />
        <Parameter Name="stageName" Type="System.String" />
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="configuration" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definition">Either the definition name with optional leading folder path, or the definition id.</param>
        <param name="branchName">Only consider the most recent build for this branch.</param>
        <param name="stageName">Use this stage within the pipeline to render the status.</param>
        <param name="jobName">Use this job within a stage of the pipeline to render the status.</param>
        <param name="configuration">Use this job configuration to render the status</param>
        <param name="label">Replaces the default text on the left side of the badge.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] <p>Gets the build status for a definition, optionally scoped to a specific branch, stage, job, and configuration.</p><p>If there are more than one, then it is required to pass in a <paramref name="stageName" /> value when specifying a <paramref name="jobName" />, and the same rule then applies for both if passing a <paramref name="configuration" /> parameter.</p></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetTagsAsync (Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetTagsAsync(valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTagsAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagsAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetTagsAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetTagsAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of all build and definition tags in the project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; GetTagsAsync (string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; GetTagsAsync(string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTagsAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTagsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.GetTagsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.GetTagsAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of all build and definition tags in the project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; GetTemplateAsync (Guid project, string templateId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; GetTemplateAsync(valuetype System.Guid project, string templateId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTemplateAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&#xA;override this.GetTemplateAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;" Usage="buildHttpClientBase.GetTemplateAsync (project, templateId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="templateId">The ID of the requested template.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific build definition template.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; GetTemplateAsync (string project, string templateId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; GetTemplateAsync(string project, string templateId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTemplateAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplateAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&#xA;override this.GetTemplateAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;" Usage="buildHttpClientBase.GetTemplateAsync (project, templateId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="templateId">The ID of the requested template.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a specific build definition template.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt; GetTemplatesAsync (Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt; GetTemplatesAsync(valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTemplatesAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplatesAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt;&#xA;override this.GetTemplatesAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt;" Usage="buildHttpClientBase.GetTemplatesAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all definition templates.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt; GetTemplatesAsync (string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt; GetTemplatesAsync(string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTemplatesAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTemplatesAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt;&#xA;override this.GetTemplatesAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt;" Usage="buildHttpClientBase.GetTemplatesAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all definition templates.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTicketedArtifactContentZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetTicketedArtifactContentZipAsync (int buildId, Guid projectId, string artifactName, string downloadTicket, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetTicketedArtifactContentZipAsync(int32 buildId, valuetype System.Guid projectId, string artifactName, string downloadTicket, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTicketedArtifactContentZipAsync(System.Int32,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTicketedArtifactContentZipAsync : int * Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetTicketedArtifactContentZipAsync : int * Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetTicketedArtifactContentZipAsync (buildId, projectId, artifactName, downloadTicket, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="artifactName" Type="System.String" />
        <Parameter Name="downloadTicket" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId">The ID of the build.</param>
        <param name="projectId">The project ID.</param>
        <param name="artifactName">The name of the artifact.</param>
        <param name="downloadTicket">A valid ticket that gives permission to download artifacts</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a Zip file of the artifact with the given name for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTicketedLogsContentZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetTicketedLogsContentZipAsync (int buildId, Guid projectId, string downloadTicket, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetTicketedLogsContentZipAsync(int32 buildId, valuetype System.Guid projectId, string downloadTicket, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetTicketedLogsContentZipAsync(System.Int32,System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTicketedLogsContentZipAsync : int * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetTicketedLogsContentZipAsync : int * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="buildHttpClientBase.GetTicketedLogsContentZipAsync (buildId, projectId, downloadTicket, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="projectId" Type="System.Guid" />
        <Parameter Name="downloadTicket" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buildId">The ID of the build.</param>
        <param name="projectId">The project ID.</param>
        <param name="downloadTicket">A valid ticket that gives permission to download the logs.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a Zip file of the logs for a given build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkItemsBetweenBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetWorkItemsBetweenBuildsAsync (Guid project, int fromBuildId, int toBuildId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetWorkItemsBetweenBuildsAsync(valuetype System.Guid project, int32 fromBuildId, int32 toBuildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetWorkItemsBetweenBuildsAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkItemsBetweenBuildsAsync : Guid * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;&#xA;override this.GetWorkItemsBetweenBuildsAsync : Guid * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;" Usage="buildHttpClientBase.GetWorkItemsBetweenBuildsAsync (project, fromBuildId, toBuildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="fromBuildId" Type="System.Int32" />
        <Parameter Name="toBuildId" Type="System.Int32" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="fromBuildId">The ID of the first build.</param>
        <param name="toBuildId">The ID of the last build.</param>
        <param name="top">The maximum number of work items to return.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all the work items between two builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkItemsBetweenBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetWorkItemsBetweenBuildsAsync (string project, int fromBuildId, int toBuildId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt; GetWorkItemsBetweenBuildsAsync(string project, int32 fromBuildId, int32 toBuildId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.GetWorkItemsBetweenBuildsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkItemsBetweenBuildsAsync : string * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;&#xA;override this.GetWorkItemsBetweenBuildsAsync : string * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;" Usage="buildHttpClientBase.GetWorkItemsBetweenBuildsAsync (project, fromBuildId, toBuildId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.WebApi.ResourceRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="fromBuildId" Type="System.Int32" />
        <Parameter Name="toBuildId" Type="System.Int32" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="fromBuildId">The ID of the first build.</param>
        <param name="toBuildId">The ID of the last build.</param>
        <param name="top">The maximum number of work items to return.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets all the work items between two builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBranchesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; ListBranchesAsync (Guid project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; ListBranchesAsync(valuetype System.Guid project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListBranchesAsync(System.Guid,System.String,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListBranchesAsync : Guid * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.ListBranchesAsync : Guid * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.ListBranchesAsync (project, providerName, serviceEndpointId, repository, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of branches for the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBranchesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; ListBranchesAsync (string project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; ListBranchesAsync(string project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListBranchesAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListBranchesAsync : string * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.ListBranchesAsync : string * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="buildHttpClientBase.ListBranchesAsync (project, providerName, serviceEndpointId, repository, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of branches for the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRepositoriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt; ListRepositoriesAsync (Guid project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; resultSet = null, Nullable&lt;bool&gt; pageResults = null, string continuationToken = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt; ListRepositoriesAsync(valuetype System.Guid project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; resultSet, valuetype System.Nullable`1&lt;bool&gt; pageResults, string continuationToken, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListRepositoriesAsync(System.Guid,System.String,System.Nullable{System.Guid},System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.ResultSet},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListRepositoriesAsync : Guid * string * Nullable&lt;Guid&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt;&#xA;override this.ListRepositoriesAsync : Guid * string * Nullable&lt;Guid&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt;" Usage="buildHttpClientBase.ListRepositoriesAsync (project, providerName, serviceEndpointId, repository, resultSet, pageResults, continuationToken, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="resultSet" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt;" />
        <Parameter Name="pageResults" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of a single repository to get.</param>
        <param name="resultSet">'top' for the repositories most relevant for the endpoint. If not set, all repositories are returned. Ignored if 'repository' is set.</param>
        <param name="pageResults">If set to true, this will limit the set of results and will return a continuation token to continue the query.</param>
        <param name="continuationToken">When paging results, this is a continuation token, returned by a previous call to this method, that can be used to return the next set of repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of source code repositories.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRepositoriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt; ListRepositoriesAsync (string project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; resultSet = null, Nullable&lt;bool&gt; pageResults = null, string continuationToken = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt; ListRepositoriesAsync(string project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; resultSet, valuetype System.Nullable`1&lt;bool&gt; pageResults, string continuationToken, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListRepositoriesAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.Nullable{Microsoft.TeamFoundation.Build.WebApi.ResultSet},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListRepositoriesAsync : string * string * Nullable&lt;Guid&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt;&#xA;override this.ListRepositoriesAsync : string * string * Nullable&lt;Guid&gt; * string * Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt; * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt;" Usage="buildHttpClientBase.ListRepositoriesAsync (project, providerName, serviceEndpointId, repository, resultSet, pageResults, continuationToken, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.SourceRepositories&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="resultSet" Type="System.Nullable&lt;Microsoft.TeamFoundation.Build.WebApi.ResultSet&gt;" />
        <Parameter Name="pageResults" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of a single repository to get.</param>
        <param name="resultSet">'top' for the repositories most relevant for the endpoint. If not set, all repositories are returned. Ignored if 'repository' is set.</param>
        <param name="pageResults">If set to true, this will limit the set of results and will return a continuation token to continue the query.</param>
        <param name="continuationToken">When paging results, this is a continuation token, returned by a previous call to this method, that can be used to return the next set of repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of source code repositories.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListSourceProvidersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt; ListSourceProvidersAsync (Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt; ListSourceProvidersAsync(valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListSourceProvidersAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListSourceProvidersAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt;&#xA;override this.ListSourceProvidersAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt;" Usage="buildHttpClientBase.ListSourceProvidersAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of source providers and their capabilities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListSourceProvidersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt; ListSourceProvidersAsync (string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt; ListSourceProvidersAsync(string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListSourceProvidersAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListSourceProvidersAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt;&#xA;override this.ListSourceProvidersAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt;" Usage="buildHttpClientBase.ListSourceProvidersAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.SourceProviderAttributes&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of source providers and their capabilities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListWebhooksAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt; ListWebhooksAsync (Guid project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt; ListWebhooksAsync(valuetype System.Guid project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListWebhooksAsync(System.Guid,System.String,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListWebhooksAsync : Guid * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt;&#xA;override this.ListWebhooksAsync : Guid * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt;" Usage="buildHttpClientBase.ListWebhooksAsync (project, providerName, serviceEndpointId, repository, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of webhooks installed in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListWebhooksAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt; ListWebhooksAsync (string project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt; ListWebhooksAsync(string project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ListWebhooksAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListWebhooksAsync : string * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt;&#xA;override this.ListWebhooksAsync : string * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt;" Usage="buildHttpClientBase.ListWebhooksAsync (project, providerName, serviceEndpointId, repository, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.RepositoryWebhook&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Gets a list of webhooks installed in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, Nullable&lt;bool&gt; ignoreWarnings = null, string checkInTicket = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, valuetype System.Nullable`1&lt;bool&gt; ignoreWarnings, string checkInTicket, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.QueueBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.QueueBuildAsync (build, ignoreWarnings, checkInTicket, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="ignoreWarnings" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="checkInTicket" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build"></param>
        <param name="ignoreWarnings"></param>
        <param name="checkInTicket"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Queues a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, Guid project, Nullable&lt;bool&gt; ignoreWarnings = null, string checkInTicket = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, valuetype System.Guid project, valuetype System.Nullable`1&lt;bool&gt; ignoreWarnings, string checkInTicket, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.QueueBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.Guid,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Guid * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Guid * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.QueueBuildAsync (build, project, ignoreWarnings, checkInTicket, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="ignoreWarnings" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="checkInTicket" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build"></param>
        <param name="project">Project ID</param>
        <param name="ignoreWarnings"></param>
        <param name="checkInTicket"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Queues a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, string project, Nullable&lt;bool&gt; ignoreWarnings = null, string checkInTicket = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, string project, valuetype System.Nullable`1&lt;bool&gt; ignoreWarnings, string checkInTicket, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.QueueBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * string * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * string * Nullable&lt;bool&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.QueueBuildAsync (build, project, ignoreWarnings, checkInTicket, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="ignoreWarnings" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="checkInTicket" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build"></param>
        <param name="project">Project ID or project name</param>
        <param name="ignoreWarnings"></param>
        <param name="checkInTicket"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Queues a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, Guid project, Nullable&lt;bool&gt; ignoreWarnings = null, string checkInTicket = null, Nullable&lt;int&gt; sourceBuildId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, valuetype System.Guid project, valuetype System.Nullable`1&lt;bool&gt; ignoreWarnings, string checkInTicket, valuetype System.Nullable`1&lt;int32&gt; sourceBuildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.QueueBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.Guid,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Guid * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.QueueBuildAsync (build, project, ignoreWarnings, checkInTicket, sourceBuildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="ignoreWarnings" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="checkInTicket" Type="System.String" />
        <Parameter Name="sourceBuildId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build"></param>
        <param name="project">Project ID</param>
        <param name="ignoreWarnings"></param>
        <param name="checkInTicket"></param>
        <param name="sourceBuildId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Queues a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, string project, Nullable&lt;bool&gt; ignoreWarnings = null, string checkInTicket = null, Nullable&lt;int&gt; sourceBuildId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; QueueBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, string project, valuetype System.Nullable`1&lt;bool&gt; ignoreWarnings, string checkInTicket, valuetype System.Nullable`1&lt;int32&gt; sourceBuildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.QueueBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.QueueBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * string * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.QueueBuildAsync (build, project, ignoreWarnings, checkInTicket, sourceBuildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="ignoreWarnings" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="checkInTicket" Type="System.String" />
        <Parameter Name="sourceBuildId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build"></param>
        <param name="project">Project ID or project name</param>
        <param name="ignoreWarnings"></param>
        <param name="checkInTicket"></param>
        <param name="sourceBuildId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Queues a build
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCounterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResetCounterAsync (int definitionId, int counterId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResetCounterAsync(int32 definitionId, int32 counterId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ResetCounterAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ResetCounterAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ResetCounterAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.ResetCounterAsync (definitionId, counterId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definitionId">The ID of the definition.</param>
        <param name="counterId">The ID of the counter.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Resets the counter variable Value back to the Seed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCounterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResetCounterAsync (Guid project, int definitionId, int counterId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResetCounterAsync(valuetype System.Guid project, int32 definitionId, int32 counterId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ResetCounterAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ResetCounterAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ResetCounterAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.ResetCounterAsync (project, definitionId, counterId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="counterId">The ID of the counter.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Resets the counter variable Value back to the Seed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCounterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ResetCounterAsync (string project, int definitionId, int counterId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ResetCounterAsync(string project, int32 definitionId, int32 counterId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.ResetCounterAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ResetCounterAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ResetCounterAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.ResetCounterAsync (project, definitionId, counterId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="counterId">The ID of the counter.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Resets the counter variable Value back to the Seed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; RestoreDefinitionAsync (Guid project, int definitionId, bool deleted, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; RestoreDefinitionAsync(valuetype System.Guid project, int32 definitionId, bool deleted, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.RestoreDefinitionAsync(System.Guid,System.Int32,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RestoreDefinitionAsync : Guid * int * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.RestoreDefinitionAsync : Guid * int * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.RestoreDefinitionAsync (project, definitionId, deleted, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="deleted" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The identifier of the definition to restore.</param>
        <param name="deleted">When false, restores a deleted definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Restores a deleted definition
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; RestoreDefinitionAsync (string project, int definitionId, bool deleted, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; RestoreDefinitionAsync(string project, int32 definitionId, bool deleted, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.RestoreDefinitionAsync(System.String,System.Int32,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RestoreDefinitionAsync : string * int * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.RestoreDefinitionAsync : string * int * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.RestoreDefinitionAsync (project, definitionId, deleted, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="deleted" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The identifier of the definition to restore.</param>
        <param name="deleted">When false, restores a deleted definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Restores a deleted definition
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreWebhooksAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RestoreWebhooksAsync (System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; triggerTypes, Guid project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RestoreWebhooksAsync(class System.Collections.Generic.List`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; triggerTypes, valuetype System.Guid project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.RestoreWebhooksAsync(System.Collections.Generic.List{Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType},System.Guid,System.String,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RestoreWebhooksAsync : System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; * Guid * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RestoreWebhooksAsync : System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; * Guid * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.RestoreWebhooksAsync (triggerTypes, project, providerName, serviceEndpointId, repository, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerTypes" Type="System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="triggerTypes">The types of triggers to restore webhooks for.</param>
        <param name="project">Project ID</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Recreates the webhooks for the specified triggers in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreWebhooksAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RestoreWebhooksAsync (System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; triggerTypes, string project, string providerName, Nullable&lt;Guid&gt; serviceEndpointId = null, string repository = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RestoreWebhooksAsync(class System.Collections.Generic.List`1&lt;valuetype Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; triggerTypes, string project, string providerName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; serviceEndpointId, string repository, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.RestoreWebhooksAsync(System.Collections.Generic.List{Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType},System.String,System.String,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RestoreWebhooksAsync : System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; * string * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RestoreWebhooksAsync : System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt; * string * string * Nullable&lt;Guid&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.RestoreWebhooksAsync (triggerTypes, project, providerName, serviceEndpointId, repository, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerTypes" Type="System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="serviceEndpointId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="triggerTypes">The types of triggers to restore webhooks for.</param>
        <param name="project">Project ID or project name</param>
        <param name="providerName">The name of the source provider.</param>
        <param name="serviceEndpointId">If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.</param>
        <param name="repository">If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Recreates the webhooks for the specified triggers in the given source code repository.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; SaveTemplateAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate template, Guid project, string templateId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; SaveTemplateAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate template, valuetype System.Guid project, string templateId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.SaveTemplateAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate,System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SaveTemplateAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&#xA;override this.SaveTemplateAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;" Usage="buildHttpClientBase.SaveTemplateAsync (template, project, templateId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="template">The new version of the template.</param>
        <param name="project">Project ID</param>
        <param name="templateId">The ID of the template.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates an existing build definition template.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; SaveTemplateAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate template, string project, string templateId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt; SaveTemplateAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate template, string project, string templateId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.SaveTemplateAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SaveTemplateAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;&#xA;override this.SaveTemplateAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;" Usage="buildHttpClientBase.SaveTemplateAsync (template, project, templateId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinitionTemplate" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="template">The new version of the template.</param>
        <param name="project">Project ID or project name</param>
        <param name="templateId">The ID of the template.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates an existing build definition template.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; UpdateBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; UpdateBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.UpdateBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.UpdateBuildAsync (build, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build">The build.</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Updates a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; UpdateBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; UpdateBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.UpdateBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.UpdateBuildAsync (build, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build">The build.</param>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Updates a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; UpdateBuildAsync (Microsoft.TeamFoundation.Build.WebApi.Build build, string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; UpdateBuildAsync(class Microsoft.TeamFoundation.Build.WebApi.Build build, string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildAsync(Microsoft.TeamFoundation.Build.WebApi.Build,System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&#xA;override this.UpdateBuildAsync : Microsoft.TeamFoundation.Build.WebApi.Build * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" Usage="buildHttpClientBase.UpdateBuildAsync (build, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="build" Type="Microsoft.TeamFoundation.Build.WebApi.Build" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="build">The build.</param>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Updates a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateBuildPropertiesAsync (Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, Guid project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateBuildPropertiesAsync(class Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, valuetype System.Guid project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.UpdateBuildPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.UpdateBuildPropertiesAsync (document, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="document">A json-patch document describing the properties to update.</param>
        <param name="project">Project ID</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates properties for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateBuildPropertiesAsync (Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, string project, int buildId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateBuildPropertiesAsync(class Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, string project, int32 buildId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.UpdateBuildPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.UpdateBuildPropertiesAsync (document, project, buildId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="buildId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="document">A json-patch document describing the properties to update.</param>
        <param name="project">Project ID or project name</param>
        <param name="buildId">The ID of the build.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates properties for a build.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; UpdateBuildsAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; builds, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; UpdateBuildsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; builds, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.Build},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildsAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;&#xA;override this.UpdateBuildsAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;" Usage="buildHttpClientBase.UpdateBuildsAsync (builds, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builds" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="builds">The builds to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Updates multiple builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; UpdateBuildsAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; builds, Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; UpdateBuildsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; builds, valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.Build},System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildsAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;&#xA;override this.UpdateBuildsAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;" Usage="buildHttpClientBase.UpdateBuildsAsync (builds, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builds" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="builds">The builds to update.</param>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates multiple builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; UpdateBuildsAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; builds, string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt; UpdateBuildsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Build&gt; builds, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.WebApi.Build},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildsAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;&#xA;override this.UpdateBuildsAsync : seq&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;" Usage="buildHttpClientBase.UpdateBuildsAsync (builds, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builds" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.Build.WebApi.Build&gt;" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="builds">The builds to update.</param>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates multiple builds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; UpdateBuildSettingsAsync (Microsoft.TeamFoundation.Build.WebApi.BuildSettings settings, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; UpdateBuildSettingsAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildSettings settings, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildSettingsAsync(Microsoft.TeamFoundation.Build.WebApi.BuildSettings,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildSettingsAsync : Microsoft.TeamFoundation.Build.WebApi.BuildSettings * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;&#xA;override this.UpdateBuildSettingsAsync : Microsoft.TeamFoundation.Build.WebApi.BuildSettings * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;" Usage="buildHttpClientBase.UpdateBuildSettingsAsync (settings, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.TeamFoundation.Build.WebApi.BuildSettings" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settings">The new settings.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates the build settings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; UpdateBuildSettingsAsync (Microsoft.TeamFoundation.Build.WebApi.BuildSettings settings, Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; UpdateBuildSettingsAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildSettings settings, valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildSettingsAsync(Microsoft.TeamFoundation.Build.WebApi.BuildSettings,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildSettingsAsync : Microsoft.TeamFoundation.Build.WebApi.BuildSettings * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;&#xA;override this.UpdateBuildSettingsAsync : Microsoft.TeamFoundation.Build.WebApi.BuildSettings * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;" Usage="buildHttpClientBase.UpdateBuildSettingsAsync (settings, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.TeamFoundation.Build.WebApi.BuildSettings" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settings">The new settings.</param>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates the build settings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBuildSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; UpdateBuildSettingsAsync (Microsoft.TeamFoundation.Build.WebApi.BuildSettings settings, string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt; UpdateBuildSettingsAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildSettings settings, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateBuildSettingsAsync(Microsoft.TeamFoundation.Build.WebApi.BuildSettings,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateBuildSettingsAsync : Microsoft.TeamFoundation.Build.WebApi.BuildSettings * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;&#xA;override this.UpdateBuildSettingsAsync : Microsoft.TeamFoundation.Build.WebApi.BuildSettings * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;" Usage="buildHttpClientBase.UpdateBuildSettingsAsync (settings, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.TeamFoundation.Build.WebApi.BuildSettings" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settings">The new settings.</param>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates the build settings.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCounterSeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UpdateCounterSeedAsync (int definitionId, int counterId, long newSeed, bool resetValue, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UpdateCounterSeedAsync(int32 definitionId, int32 counterId, int64 newSeed, bool resetValue, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateCounterSeedAsync(System.Int32,System.Int32,System.Int64,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCounterSeedAsync : int * int * int64 * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UpdateCounterSeedAsync : int * int * int64 * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.UpdateCounterSeedAsync (definitionId, counterId, newSeed, resetValue, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="newSeed" Type="System.Int64" />
        <Parameter Name="resetValue" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definitionId">The ID of the definition.</param>
        <param name="counterId">The ID of the counter.</param>
        <param name="newSeed">The new Seed value.</param>
        <param name="resetValue">Flag indicating if Value should also be reset.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Changes the counter variable Seed, and optionally resets the Value to this new Seed. Note that if Seed is being set above Value, then Value will be updated regardless.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCounterSeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UpdateCounterSeedAsync (Guid project, int definitionId, int counterId, long newSeed, bool resetValue, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UpdateCounterSeedAsync(valuetype System.Guid project, int32 definitionId, int32 counterId, int64 newSeed, bool resetValue, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateCounterSeedAsync(System.Guid,System.Int32,System.Int32,System.Int64,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCounterSeedAsync : Guid * int * int * int64 * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UpdateCounterSeedAsync : Guid * int * int * int64 * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.UpdateCounterSeedAsync (project, definitionId, counterId, newSeed, resetValue, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="newSeed" Type="System.Int64" />
        <Parameter Name="resetValue" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="counterId">The ID of the counter.</param>
        <param name="newSeed">The new Seed value.</param>
        <param name="resetValue">Flag indicating if Value should also be reset.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Changes the counter variable Seed, and optionally resets the Value to this new Seed. Note that if Seed is being set above Value, then Value will be updated regardless.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCounterSeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UpdateCounterSeedAsync (string project, int definitionId, int counterId, long newSeed, bool resetValue, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UpdateCounterSeedAsync(string project, int32 definitionId, int32 counterId, int64 newSeed, bool resetValue, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateCounterSeedAsync(System.String,System.Int32,System.Int32,System.Int64,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCounterSeedAsync : string * int * int * int64 * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UpdateCounterSeedAsync : string * int * int * int64 * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="buildHttpClientBase.UpdateCounterSeedAsync (project, definitionId, counterId, newSeed, resetValue, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="newSeed" Type="System.Int64" />
        <Parameter Name="resetValue" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="counterId">The ID of the counter.</param>
        <param name="newSeed">The new Seed value.</param>
        <param name="resetValue">Flag indicating if Value should also be reset.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Changes the counter variable Seed, and optionally resets the Value to this new Seed. Note that if Seed is being set above Value, then Value will be updated regardless.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; UpdateDefinitionAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, int definitionId, Nullable&lt;int&gt; secretsSourceDefinitionId = null, Nullable&lt;int&gt; secretsSourceDefinitionRevision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; UpdateDefinitionAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; secretsSourceDefinitionId, valuetype System.Nullable`1&lt;int32&gt; secretsSourceDefinitionRevision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateDefinitionAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinition,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.UpdateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.UpdateDefinitionAsync (definition, definitionId, secretsSourceDefinitionId, secretsSourceDefinitionRevision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinition" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="secretsSourceDefinitionId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="secretsSourceDefinitionRevision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definition">The new version of the defintion.</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="secretsSourceDefinitionId"></param>
        <param name="secretsSourceDefinitionRevision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            Updates an existing definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; UpdateDefinitionAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, Guid project, int definitionId, Nullable&lt;int&gt; secretsSourceDefinitionId = null, Nullable&lt;int&gt; secretsSourceDefinitionRevision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; UpdateDefinitionAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, valuetype System.Guid project, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; secretsSourceDefinitionId, valuetype System.Nullable`1&lt;int32&gt; secretsSourceDefinitionRevision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateDefinitionAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinition,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * Guid * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.UpdateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * Guid * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.UpdateDefinitionAsync (definition, project, definitionId, secretsSourceDefinitionId, secretsSourceDefinitionRevision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinition" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="secretsSourceDefinitionId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="secretsSourceDefinitionRevision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definition">The new version of the defintion.</param>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="secretsSourceDefinitionId"></param>
        <param name="secretsSourceDefinitionRevision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates an existing definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; UpdateDefinitionAsync (Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, string project, int definitionId, Nullable&lt;int&gt; secretsSourceDefinitionId = null, Nullable&lt;int&gt; secretsSourceDefinitionRevision = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt; UpdateDefinitionAsync(class Microsoft.TeamFoundation.Build.WebApi.BuildDefinition definition, string project, int32 definitionId, valuetype System.Nullable`1&lt;int32&gt; secretsSourceDefinitionId, valuetype System.Nullable`1&lt;int32&gt; secretsSourceDefinitionRevision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateDefinitionAsync(Microsoft.TeamFoundation.Build.WebApi.BuildDefinition,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * string * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;&#xA;override this.UpdateDefinitionAsync : Microsoft.TeamFoundation.Build.WebApi.BuildDefinition * string * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;" Usage="buildHttpClientBase.UpdateDefinitionAsync (definition, project, definitionId, secretsSourceDefinitionId, secretsSourceDefinitionRevision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.BuildDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.Build.WebApi.BuildDefinition" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="secretsSourceDefinitionId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="secretsSourceDefinitionRevision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="definition">The new version of the defintion.</param>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="secretsSourceDefinitionId"></param>
        <param name="secretsSourceDefinitionRevision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates an existing definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefinitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateDefinitionPropertiesAsync (Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, Guid project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateDefinitionPropertiesAsync(class Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, valuetype System.Guid project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateDefinitionPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDefinitionPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.UpdateDefinitionPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.UpdateDefinitionPropertiesAsync (document, project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="document">A json-patch document describing the properties to update.</param>
        <param name="project">Project ID</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates properties for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefinitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateDefinitionPropertiesAsync (Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, string project, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt; UpdateDefinitionPropertiesAsync(class Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument document, string project, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateDefinitionPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDefinitionPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;&#xA;override this.UpdateDefinitionPropertiesAsync : Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument * string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;" Usage="buildHttpClientBase.UpdateDefinitionPropertiesAsync (document, project, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.PropertiesCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="document">A json-patch document describing the properties to update.</param>
        <param name="project">Project ID or project name</param>
        <param name="definitionId">The ID of the definition.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates properties for a definition.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt; UpdateFolderAsync (Microsoft.TeamFoundation.Build.WebApi.Folder folder, Guid project, string path, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Folder&gt; UpdateFolderAsync(class Microsoft.TeamFoundation.Build.WebApi.Folder folder, valuetype System.Guid project, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateFolderAsync(Microsoft.TeamFoundation.Build.WebApi.Folder,System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&#xA;override this.UpdateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;" Usage="buildHttpClientBase.UpdateFolderAsync (folder, project, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.TeamFoundation.Build.WebApi.Folder" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="folder">The new version of the folder.</param>
        <param name="project">Project ID</param>
        <param name="path">The full path to the folder.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates an existing folder at given  existing path
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt; UpdateFolderAsync (Microsoft.TeamFoundation.Build.WebApi.Folder folder, string project, string path, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.Build.WebApi.Folder&gt; UpdateFolderAsync(class Microsoft.TeamFoundation.Build.WebApi.Folder folder, string project, string path, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.Build.WebApi.BuildHttpClientBase.UpdateFolderAsync(Microsoft.TeamFoundation.Build.WebApi.Folder,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;&#xA;override this.UpdateFolderAsync : Microsoft.TeamFoundation.Build.WebApi.Folder * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;" Usage="buildHttpClientBase.UpdateFolderAsync (folder, project, path, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.Build2.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.Build.WebApi.Folder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.TeamFoundation.Build.WebApi.Folder" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="folder">The new version of the folder.</param>
        <param name="project">Project ID or project name</param>
        <param name="path">The full path to the folder.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Updates an existing folder at given  existing path
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>