<Type Name="PipelineContextBuilder" FullName="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder">
  <TypeSignature Language="C#" Value="public class PipelineContextBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipelineContextBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PipelineContextBuilder" />
  <TypeSignature Language="F#" Value="type PipelineContextBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
    <AssemblyVersion>17.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineContextBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineContextBuilder (Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore counterStore = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore resourceStore = null, System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt; stepProviders = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore taskStore = null, Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions expressionOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore counterStore, class Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore resourceStore, class System.Collections.Generic.IList`1&lt;class Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt; stepProviders, class Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore taskStore, class Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions expressionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.#ctor(Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore,Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore,System.Collections.Generic.IList{Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider},Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore,Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional counterStore As ICounterStore = null, Optional resourceStore As IResourceStore = null, Optional stepProviders As IList(Of IStepProvider) = null, Optional taskStore As ITaskStore = null, Optional expressionOptions As EvaluationOptions = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder : Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore * Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore * System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt; * Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore * Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions -&gt; Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder" Usage="new Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder (counterStore, resourceStore, stepProviders, taskStore, expressionOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="counterStore" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore" />
        <Parameter Name="resourceStore" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore" />
        <Parameter Name="stepProviders" Type="System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt;" />
        <Parameter Name="taskStore" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore" />
        <Parameter Name="expressionOptions" Type="Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions" />
      </Parameters>
      <Docs>
        <param name="counterStore">To be added.</param>
        <param name="resourceStore">To be added.</param>
        <param name="stepProviders">To be added.</param>
        <param name="taskStore">To be added.</param>
        <param name="expressionOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterStore">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore CounterStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore CounterStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.CounterStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterStore As ICounterStore" />
      <MemberSignature Language="F#" Value="member this.CounterStore : Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.CounterStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Pipelines.ICounterStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the counter store configured for the builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuildContext">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineBuildContext CreateBuildContext (Microsoft.TeamFoundation.DistributedTask.Pipelines.BuildOptions options, Microsoft.TeamFoundation.DistributedTask.Pipelines.IPackageStore packageStore = null, bool includeSecrets = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineBuildContext CreateBuildContext(class Microsoft.TeamFoundation.DistributedTask.Pipelines.BuildOptions options, class Microsoft.TeamFoundation.DistributedTask.Pipelines.IPackageStore packageStore, bool includeSecrets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.CreateBuildContext(Microsoft.TeamFoundation.DistributedTask.Pipelines.BuildOptions,Microsoft.TeamFoundation.DistributedTask.Pipelines.IPackageStore,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuildContext (options As BuildOptions, Optional packageStore As IPackageStore = null, Optional includeSecrets As Boolean = false) As PipelineBuildContext" />
      <MemberSignature Language="F#" Value="member this.CreateBuildContext : Microsoft.TeamFoundation.DistributedTask.Pipelines.BuildOptions * Microsoft.TeamFoundation.DistributedTask.Pipelines.IPackageStore * bool -&gt; Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineBuildContext" Usage="pipelineContextBuilder.CreateBuildContext (options, packageStore, includeSecrets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineBuildContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.BuildOptions" />
        <Parameter Name="packageStore" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.IPackageStore" />
        <Parameter Name="includeSecrets" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="packageStore">To be added.</param>
        <param name="includeSecrets">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePhaseExecutionContext">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseExecutionContext CreatePhaseExecutionContext (Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance stage, Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance phase, System.Collections.Generic.IDictionary&lt;string,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance&gt; dependencies = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState state = Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState.InProgress, bool includeSecrets = false, Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator idGenerator = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter trace = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions executionOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseExecutionContext CreatePhaseExecutionContext(class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance stage, class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance phase, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance&gt; dependencies, valuetype Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState state, bool includeSecrets, class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator idGenerator, class Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter trace, class Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions executionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.CreatePhaseExecutionContext(Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance,System.Collections.Generic.IDictionary{System.String,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance},Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState,System.Boolean,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator,Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter,Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions)" />
      <MemberSignature Language="F#" Value="member this.CreatePhaseExecutionContext : Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance * Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance * System.Collections.Generic.IDictionary&lt;string, Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance&gt; * Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState * bool * Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator * Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter * Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions -&gt; Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseExecutionContext" Usage="pipelineContextBuilder.CreatePhaseExecutionContext (stage, phase, dependencies, state, includeSecrets, idGenerator, trace, executionOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance" />
        <Parameter Name="phase" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.PhaseInstance&gt;" />
        <Parameter Name="state" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState" />
        <Parameter Name="includeSecrets" Type="System.Boolean" />
        <Parameter Name="idGenerator" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator" />
        <Parameter Name="trace" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter" />
        <Parameter Name="executionOptions" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions" />
      </Parameters>
      <Docs>
        <param name="stage">To be added.</param>
        <param name="phase">To be added.</param>
        <param name="dependencies">To be added.</param>
        <param name="state">To be added.</param>
        <param name="includeSecrets">To be added.</param>
        <param name="idGenerator">To be added.</param>
        <param name="trace">To be added.</param>
        <param name="executionOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStageExecutionContext">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageExecutionContext CreateStageExecutionContext (Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance stage, System.Collections.Generic.IDictionary&lt;string,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance&gt; dependencies = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState state = Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState.InProgress, bool includeSecrets = false, Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator idGenerator = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter trace = null, Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions executionOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageExecutionContext CreateStageExecutionContext(class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance stage, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance&gt; dependencies, valuetype Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState state, bool includeSecrets, class Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator idGenerator, class Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter trace, class Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions executionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.CreateStageExecutionContext(Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance,System.Collections.Generic.IDictionary{System.String,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance},Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState,System.Boolean,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator,Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter,Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions)" />
      <MemberSignature Language="F#" Value="member this.CreateStageExecutionContext : Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance * System.Collections.Generic.IDictionary&lt;string, Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance&gt; * Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState * bool * Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator * Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter * Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions -&gt; Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageExecutionContext" Usage="pipelineContextBuilder.CreateStageExecutionContext (stage, dependencies, state, includeSecrets, idGenerator, trace, executionOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance" />
        <Parameter Name="dependencies" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.StageInstance&gt;" />
        <Parameter Name="state" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineState" />
        <Parameter Name="includeSecrets" Type="System.Boolean" />
        <Parameter Name="idGenerator" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.Runtime.IPipelineIdGenerator" />
        <Parameter Name="trace" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.IPipelineTraceWriter" />
        <Parameter Name="executionOptions" Type="Microsoft.TeamFoundation.DistributedTask.Pipelines.ExecutionOptions" />
      </Parameters>
      <Docs>
        <param name="stage">To be added.</param>
        <param name="dependencies">To be added.</param>
        <param name="state">To be added.</param>
        <param name="includeSecrets">To be added.</param>
        <param name="idGenerator">To be added.</param>
        <param name="trace">To be added.</param>
        <param name="executionOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVersion">
      <MemberSignature Language="C#" Value="public int EnvironmentVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EnvironmentVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.EnvironmentVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVersion As Integer" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVersion : int with get, set" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.EnvironmentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the environment version, controlling behaviors related to variable groups and step injection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionOptions">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions ExpressionOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions ExpressionOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.ExpressionOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionOptions As EvaluationOptions" />
      <MemberSignature Language="F#" Value="member this.ExpressionOptions : Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.ExpressionOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Expressions.EvaluationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the expression evaluation options configured for the builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceStore">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore ResourceStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore ResourceStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.ResourceStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceStore As IResourceStore" />
      <MemberSignature Language="F#" Value="member this.ResourceStore : Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.ResourceStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Pipelines.IResourceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the resource store configured for the builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepProviders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt; StepProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt; StepProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.StepProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepProviders As IList(Of IStepProvider)" />
      <MemberSignature Language="F#" Value="member this.StepProviders : System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt;" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.StepProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IStepProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.TeamFoundation.DistributedTask.WebApi.VariableValue&gt; SystemVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableValue&gt; SystemVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.SystemVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemVariables As IDictionary(Of String, VariableValue)" />
      <MemberSignature Language="F#" Value="member this.SystemVariables : System.Collections.Generic.IDictionary&lt;string, Microsoft.TeamFoundation.DistributedTask.WebApi.VariableValue&gt;" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.SystemVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.VariableValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the system variables included in the pipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskStore">
      <MemberSignature Language="C#" Value="public Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore TaskStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore TaskStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.TaskStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskStore As ITaskStore" />
      <MemberSignature Language="F#" Value="member this.TaskStore : Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.TaskStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.TeamFoundation.DistributedTask.Pipelines.ITaskStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the task store configured for the builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IVariable&gt; UserVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.TeamFoundation.DistributedTask.Pipelines.IVariable&gt; UserVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.UserVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserVariables As IList(Of IVariable)" />
      <MemberSignature Language="F#" Value="member this.UserVariables : System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IVariable&gt;" Usage="Microsoft.TeamFoundation.DistributedTask.Pipelines.PipelineContextBuilder.UserVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.Pipelines.IVariable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of variable sets included in the pipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>