<Type Name="ExtensionManagementHttpClient" FullName="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient">
  <TypeSignature Language="C#" Value="public class ExtensionManagementHttpClient : Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExtensionManagementHttpClient extends Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ExtensionManagementHttpClient&#xA;Inherits VssHttpClientBase" />
  <TypeSignature Language="F#" Value="type ExtensionManagementHttpClient = class&#xA;    inherit VssHttpClientBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
    <AssemblyVersion>17.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ClientCircuitBreakerSettings(6, 80)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ResourceArea("6C2B0933-3600-42AE-BF8B-93D4F7E83594")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionManagementHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient" Usage="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionManagementHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient" Usage="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionManagementHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient" Usage="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionManagementHttpClient (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient" Usage="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionManagementHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient" Usage="new Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt; CreateDocumentByNameAsync (Newtonsoft.Json.Linq.JObject doc, string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Newtonsoft.Json.Linq.JObject&gt; CreateDocumentByNameAsync(class Newtonsoft.Json.Linq.JObject doc, string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.CreateDocumentByNameAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.CreateDocumentByNameAsync : Newtonsoft.Json.Linq.JObject * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;" Usage="extensionManagementHttpClient.CreateDocumentByNameAsync (doc, publisherName, extensionName, scopeType, scopeValue, collectionName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doc" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.String" />
        <Parameter Name="scopeValue" Type="System.String" />
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="doc"></param>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="scopeType"></param>
        <param name="scopeValue"></param>
        <param name="collectionName"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteDocumentByNameAsync (string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, string documentId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteDocumentByNameAsync(string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, string documentId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.DeleteDocumentByNameAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.DeleteDocumentByNameAsync : string * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="extensionManagementHttpClient.DeleteDocumentByNameAsync (publisherName, extensionName, scopeType, scopeValue, collectionName, documentId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.String" />
        <Parameter Name="scopeValue" Type="System.String" />
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="documentId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="scopeType"></param>
        <param name="scopeValue"></param>
        <param name="collectionName"></param>
        <param name="documentId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteRequestAsync (string publisherName, string extensionName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteRequestAsync(string publisherName, string extensionName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.DeleteRequestAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.DeleteRequestAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="extensionManagementHttpClient.DeleteRequestAsync (publisherName, extensionName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAcquisitionOptionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt; GetAcquisitionOptionsAsync (string itemId, Nullable&lt;bool&gt; testCommerce = null, Nullable&lt;bool&gt; isFreeOrTrialInstall = null, Nullable&lt;bool&gt; isAccountOwner = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt; GetAcquisitionOptionsAsync(string itemId, valuetype System.Nullable`1&lt;bool&gt; testCommerce, valuetype System.Nullable`1&lt;bool&gt; isFreeOrTrialInstall, valuetype System.Nullable`1&lt;bool&gt; isAccountOwner, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetAcquisitionOptionsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetAcquisitionOptionsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt;" Usage="extensionManagementHttpClient.GetAcquisitionOptionsAsync (itemId, testCommerce, isFreeOrTrialInstall, isAccountOwner, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-latest">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemId" Type="System.String" />
        <Parameter Name="testCommerce" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isFreeOrTrialInstall" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAccountOwner" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemId"></param>
        <param name="testCommerce"></param>
        <param name="isFreeOrTrialInstall"></param>
        <param name="isAccountOwner"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAcquisitionOptionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt; GetAcquisitionOptionsAsync (string itemId, Nullable&lt;bool&gt; testCommerce = null, Nullable&lt;bool&gt; isFreeOrTrialInstall = null, Nullable&lt;bool&gt; isAccountOwner = null, Nullable&lt;bool&gt; isLinked = null, Nullable&lt;bool&gt; isConnectedServer = null, Nullable&lt;bool&gt; isBuyOperationValid = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt; GetAcquisitionOptionsAsync(string itemId, valuetype System.Nullable`1&lt;bool&gt; testCommerce, valuetype System.Nullable`1&lt;bool&gt; isFreeOrTrialInstall, valuetype System.Nullable`1&lt;bool&gt; isAccountOwner, valuetype System.Nullable`1&lt;bool&gt; isLinked, valuetype System.Nullable`1&lt;bool&gt; isConnectedServer, valuetype System.Nullable`1&lt;bool&gt; isBuyOperationValid, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetAcquisitionOptionsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetAcquisitionOptionsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt;" Usage="extensionManagementHttpClient.GetAcquisitionOptionsAsync (itemId, testCommerce, isFreeOrTrialInstall, isAccountOwner, isLinked, isConnectedServer, isBuyOperationValid, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOptions&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemId" Type="System.String" />
        <Parameter Name="testCommerce" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isFreeOrTrialInstall" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isAccountOwner" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isLinked" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isConnectedServer" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isBuyOperationValid" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemId"></param>
        <param name="testCommerce"></param>
        <param name="isFreeOrTrialInstall"></param>
        <param name="isAccountOwner"></param>
        <param name="isLinked"></param>
        <param name="isConnectedServer"></param>
        <param name="isBuyOperationValid"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt; GetDocumentByNameAsync (string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, string documentId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Newtonsoft.Json.Linq.JObject&gt; GetDocumentByNameAsync(string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, string documentId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetDocumentByNameAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetDocumentByNameAsync : string * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;" Usage="extensionManagementHttpClient.GetDocumentByNameAsync (publisherName, extensionName, scopeType, scopeValue, collectionName, documentId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.String" />
        <Parameter Name="scopeValue" Type="System.String" />
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="documentId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="scopeType"></param>
        <param name="scopeValue"></param>
        <param name="collectionName"></param>
        <param name="documentId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentsByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Newtonsoft.Json.Linq.JObject&gt;&gt; GetDocumentsByNameAsync (string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Newtonsoft.Json.Linq.JObject&gt;&gt; GetDocumentsByNameAsync(string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetDocumentsByNameAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetDocumentsByNameAsync : string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Newtonsoft.Json.Linq.JObject&gt;&gt;" Usage="extensionManagementHttpClient.GetDocumentsByNameAsync (publisherName, extensionName, scopeType, scopeValue, collectionName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Newtonsoft.Json.Linq.JObject&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.String" />
        <Parameter Name="scopeValue" Type="System.String" />
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="scopeType"></param>
        <param name="scopeValue"></param>
        <param name="collectionName"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstalledExtensionByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt; GetInstalledExtensionByNameAsync (string publisherName, string extensionName, System.Collections.Generic.IEnumerable&lt;string&gt; assetTypes = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt; GetInstalledExtensionByNameAsync(string publisherName, string extensionName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; assetTypes, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetInstalledExtensionByNameAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetInstalledExtensionByNameAsync : string * string * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;" Usage="extensionManagementHttpClient.GetInstalledExtensionByNameAsync (publisherName, extensionName, assetTypes, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="assetTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName">Name of the publisher. Example: "fabrikam".</param>
        <param name="extensionName">Name of the extension. Example: "ops-tools".</param>
        <param name="assetTypes"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get an installed extension by its publisher and extension name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstalledExtensionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt; GetInstalledExtensionsAsync (Nullable&lt;bool&gt; includeDisabledExtensions = null, Nullable&lt;bool&gt; includeErrors = null, System.Collections.Generic.IEnumerable&lt;string&gt; assetTypes = null, Nullable&lt;bool&gt; includeInstallationIssues = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt; GetInstalledExtensionsAsync(valuetype System.Nullable`1&lt;bool&gt; includeDisabledExtensions, valuetype System.Nullable`1&lt;bool&gt; includeErrors, class System.Collections.Generic.IEnumerable`1&lt;string&gt; assetTypes, valuetype System.Nullable`1&lt;bool&gt; includeInstallationIssues, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetInstalledExtensionsAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetInstalledExtensionsAsync : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt;" Usage="extensionManagementHttpClient.GetInstalledExtensionsAsync (includeDisabledExtensions, includeErrors, assetTypes, includeInstallationIssues, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeDisabledExtensions" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeErrors" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="assetTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeInstallationIssues" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includeDisabledExtensions">If true (the default), include disabled extensions in the results.</param>
        <param name="includeErrors">If true, include installed extensions with errors.</param>
        <param name="assetTypes"></param>
        <param name="includeInstallationIssues"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] List the installed extensions in the account / project collection.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPoliciesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Gallery.WebApi.UserExtensionPolicy&gt; GetPoliciesAsync (string userId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.Gallery.WebApi.UserExtensionPolicy&gt; GetPoliciesAsync(string userId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetPoliciesAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetPoliciesAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Gallery.WebApi.UserExtensionPolicy&gt;" Usage="extensionManagementHttpClient.GetPoliciesAsync (userId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.Gallery.WebApi.UserExtensionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt;&gt; GetRequestsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt;&gt; GetRequestsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetRequestsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetRequestsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt;&gt;" Usage="extensionManagementHttpClient.GetRequestsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionState&gt;&gt; GetStatesAsync (Nullable&lt;bool&gt; includeDisabled = null, Nullable&lt;bool&gt; includeErrors = null, Nullable&lt;bool&gt; includeInstallationIssues = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionState&gt;&gt; GetStatesAsync(valuetype System.Nullable`1&lt;bool&gt; includeDisabled, valuetype System.Nullable`1&lt;bool&gt; includeErrors, valuetype System.Nullable`1&lt;bool&gt; includeInstallationIssues, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetStatesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetStatesAsync : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionState&gt;&gt;" Usage="extensionManagementHttpClient.GetStatesAsync (includeDisabled, includeErrors, includeInstallationIssues, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionState&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeDisabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeErrors" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeInstallationIssues" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includeDisabled">If true (the default), include disabled extensions in the results.</param>
        <param name="includeErrors">If true, include installed extensions in an error state in the results.</param>
        <param name="includeInstallationIssues"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] List state and version information for all installed extensions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetTokenAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetTokenAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetTokenAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetTokenAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="extensionManagementHttpClient.GetTokenAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallExtensionByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt; InstallExtensionByNameAsync (string publisherName, string extensionName, string version = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt; InstallExtensionByNameAsync(string publisherName, string extensionName, string version, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.InstallExtensionByNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.InstallExtensionByNameAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;" Usage="extensionManagementHttpClient.InstallExtensionByNameAsync (publisherName, extensionName, version, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName">Name of the publisher. Example: "fabrikam".</param>
        <param name="extensionName">Name of the extension. Example: "ops-tools".</param>
        <param name="version"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Install the specified extension into the account / project collection.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCollectionsByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollection&gt;&gt; QueryCollectionsByNameAsync (Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollectionQuery collectionQuery, string publisherName, string extensionName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollection&gt;&gt; QueryCollectionsByNameAsync(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollectionQuery collectionQuery, string publisherName, string extensionName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.QueryCollectionsByNameAsync(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollectionQuery,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.QueryCollectionsByNameAsync : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollectionQuery * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollection&gt;&gt;" Usage="extensionManagementHttpClient.QueryCollectionsByNameAsync (collectionQuery, publisherName, extensionName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionQuery" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionDataCollectionQuery" />
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collectionQuery"></param>
        <param name="publisherName">Name of the publisher. Example: "fabrikam".</param>
        <param name="extensionName">Name of the extension. Example: "ops-tools".</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Query for one or more data collections for the specified extension.  Note: the token used for authorization must have been issued on behalf of the specified extension.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryExtensionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt; QueryExtensionsAsync (Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionQuery query, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt; QueryExtensionsAsync(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionQuery query, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.QueryExtensionsAsync(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionQuery,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.QueryExtensionsAsync : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionQuery * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt;" Usage="extensionManagementHttpClient.QueryExtensionsAsync (query, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionQuery" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAuthorizationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionAuthorization&gt; RegisterAuthorizationAsync (string publisherName, string extensionName, Guid registrationId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionAuthorization&gt; RegisterAuthorizationAsync(string publisherName, string extensionName, valuetype System.Guid registrationId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.RegisterAuthorizationAsync(System.String,System.String,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.RegisterAuthorizationAsync : string * string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionAuthorization&gt;" Usage="extensionManagementHttpClient.RegisterAuthorizationAsync (publisherName, extensionName, registrationId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionAuthorization&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="registrationId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="registrationId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAcquisitionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest&gt; RequestAcquisitionAsync (Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest acquisitionRequest, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest&gt; RequestAcquisitionAsync(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest acquisitionRequest, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.RequestAcquisitionAsync(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.RequestAcquisitionAsync : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest&gt;" Usage="extensionManagementHttpClient.RequestAcquisitionAsync (acquisitionRequest, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acquisitionRequest" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="acquisitionRequest"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestExtensionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt; RequestExtensionAsync (string publisherName, string extensionName, string requestMessage, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt; RequestExtensionAsync(string publisherName, string extensionName, string requestMessage, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.RequestExtensionAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.RequestExtensionAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt;" Usage="extensionManagementHttpClient.RequestExtensionAsync (publisherName, extensionName, requestMessage, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.RequestedExtension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="requestMessage" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="requestMessage"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAllRequestsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ResolveAllRequestsAsync (string rejectMessage, string publisherName, string extensionName, Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState state, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ResolveAllRequestsAsync(string rejectMessage, string publisherName, string extensionName, valuetype Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState state, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.ResolveAllRequestsAsync(System.String,System.String,System.String,Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.ResolveAllRequestsAsync : string * string * string * Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="extensionManagementHttpClient.ResolveAllRequestsAsync (rejectMessage, publisherName, extensionName, state, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rejectMessage" Type="System.String" />
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="state" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rejectMessage"></param>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="state"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ResolveRequestAsync (string rejectMessage, string publisherName, string extensionName, string requesterId, Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState state, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ResolveRequestAsync(string rejectMessage, string publisherName, string extensionName, string requesterId, valuetype Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState state, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.ResolveRequestAsync(System.String,System.String,System.String,System.String,Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.ResolveRequestAsync : string * string * string * string * Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="extensionManagementHttpClient.ResolveRequestAsync (rejectMessage, publisherName, extensionName, requesterId, state, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rejectMessage" Type="System.String" />
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="requesterId" Type="System.String" />
        <Parameter Name="state" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rejectMessage"></param>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="requesterId"></param>
        <param name="state"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt; SetDocumentByNameAsync (Newtonsoft.Json.Linq.JObject doc, string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Newtonsoft.Json.Linq.JObject&gt; SetDocumentByNameAsync(class Newtonsoft.Json.Linq.JObject doc, string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.SetDocumentByNameAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.SetDocumentByNameAsync : Newtonsoft.Json.Linq.JObject * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;" Usage="extensionManagementHttpClient.SetDocumentByNameAsync (doc, publisherName, extensionName, scopeType, scopeValue, collectionName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doc" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.String" />
        <Parameter Name="scopeValue" Type="System.String" />
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="doc"></param>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="scopeType"></param>
        <param name="scopeValue"></param>
        <param name="collectionName"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallExtensionByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UninstallExtensionByNameAsync (string publisherName, string extensionName, string reason = null, string reasonCode = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UninstallExtensionByNameAsync(string publisherName, string extensionName, string reason, string reasonCode, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UninstallExtensionByNameAsync(System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.UninstallExtensionByNameAsync : string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="extensionManagementHttpClient.UninstallExtensionByNameAsync (publisherName, extensionName, reason, reasonCode, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="reasonCode" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publisherName">Name of the publisher. Example: "fabrikam".</param>
        <param name="extensionName">Name of the extension. Example: "ops-tools".</param>
        <param name="reason"></param>
        <param name="reasonCode"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Uninstall the specified extension from the account / project collection.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDocumentByNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt; UpdateDocumentByNameAsync (Newtonsoft.Json.Linq.JObject doc, string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Newtonsoft.Json.Linq.JObject&gt; UpdateDocumentByNameAsync(class Newtonsoft.Json.Linq.JObject doc, string publisherName, string extensionName, string scopeType, string scopeValue, string collectionName, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UpdateDocumentByNameAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.UpdateDocumentByNameAsync : Newtonsoft.Json.Linq.JObject * string * string * string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;" Usage="extensionManagementHttpClient.UpdateDocumentByNameAsync (doc, publisherName, extensionName, scopeType, scopeValue, collectionName, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Newtonsoft.Json.Linq.JObject&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doc" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="publisherName" Type="System.String" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="scopeType" Type="System.String" />
        <Parameter Name="scopeValue" Type="System.String" />
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="doc"></param>
        <param name="publisherName"></param>
        <param name="extensionName"></param>
        <param name="scopeType"></param>
        <param name="scopeValue"></param>
        <param name="collectionName"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstalledExtensionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt; UpdateInstalledExtensionAsync (Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension extension, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt; UpdateInstalledExtensionAsync(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension extension, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UpdateInstalledExtensionAsync(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.UpdateInstalledExtensionAsync : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;" Usage="extensionManagementHttpClient.UpdateInstalledExtensionAsync (extension, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtension" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="extension"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update an installed extension. Typically this API is used to enable or disable an extension.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>