<Type Name="ContributionMethods" FullName="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods">
  <TypeSignature Language="C#" Value="public static class ContributionMethods" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContributionMethods extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods" />
  <TypeSignature Language="VB.NET" Value="Public Module ContributionMethods" />
  <TypeSignature Language="F#" Value="type ContributionMethods = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
    <AssemblyVersion>17.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Methods to help work with Contributions
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetProperty&lt;T&gt; (this Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string propertyName, T defaultValue = null, bool ignoreInvalidTypeError = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetProperty&lt;T&gt;(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string propertyName, !!T defaultValue, bool ignoreInvalidTypeError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.GetProperty``1(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution,System.String,``0,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member GetProperty : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution * string * 'T * bool -&gt; 'T" Usage="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.GetProperty (contribution, propertyName, defaultValue, ignoreInvalidTypeError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contribution" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="defaultValue" Type="T" />
        <Parameter Name="ignoreInvalidTypeError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of property value</typeparam>
        <param name="contribution">Contribution to retrieve the property from</param>
        <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
        <param name="defaultValue">Default value to return if the property is not found/valid</param>
        <param name="ignoreInvalidTypeError">Unless true, throw if the property exists but cannot be parsed as the given type</param>
        <summary>
            Get a property value for the given contribution
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyRawValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyRawValue (this Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyRawValue(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.GetPropertyRawValue(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution,System.String)" />
      <MemberSignature Language="F#" Value="static member GetPropertyRawValue : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution * string -&gt; obj" Usage="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.GetPropertyRawValue (contribution, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contribution" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contribution"></param>
        <param name="propertyName"></param>
        <summary>
            Gets the value of a property in its raw form - with values converted from JObject/JToken into strings, numbers, arrays, dictionaries.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferenceLinks">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualStudio.Services.WebApi.ReferenceLinks GetReferenceLinks (Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualStudio.Services.WebApi.ReferenceLinks GetReferenceLinks(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.GetReferenceLinks(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution,System.String)" />
      <MemberSignature Language="F#" Value="static member GetReferenceLinks : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution * string -&gt; Microsoft.VisualStudio.Services.WebApi.ReferenceLinks" Usage="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.GetReferenceLinks (contribution, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualStudio.Services.WebApi.ReferenceLinks</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contribution" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contribution"></param>
        <param name="propertyName"></param>
        <summary>
            Convert the specified contribution property to a ReferenceLinks object
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOfType">
      <MemberSignature Language="C#" Value="public static bool IsOfType (this Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string contributionTypeId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOfType(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string contributionTypeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.IsOfType(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution,System.String)" />
      <MemberSignature Language="F#" Value="static member IsOfType : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution * string -&gt; bool" Usage="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.IsOfType (contribution, contributionTypeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contribution" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution" RefType="this" />
        <Parameter Name="contributionTypeId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contribution">Contribution to check</param>
        <param name="contributionTypeId">The full id of the contribution type to check for</param>
        <summary>
            Is the contribution's type the specified contribution type
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTargeting">
      <MemberSignature Language="C#" Value="public static bool IsTargeting (this Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string contributionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTargeting(class Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution contribution, string contributionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.IsTargeting(Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution,System.String)" />
      <MemberSignature Language="F#" Value="static member IsTargeting : Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution * string -&gt; bool" Usage="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionMethods.IsTargeting (contribution, contributionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Services.ExtensionManagement.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contribution" Type="Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.Contribution" RefType="this" />
        <Parameter Name="contributionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contribution">Contribution to check</param>
        <param name="contributionId">To be added.</param>
        <summary>
            Is the contribution targeting the specified contribution id
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>