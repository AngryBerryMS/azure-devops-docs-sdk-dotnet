<Type Name="TfvcHttpClientBase" FullName="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase">
  <TypeSignature Language="C#" Value="public abstract class TfvcHttpClientBase : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TfvcHttpClientBase extends Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TfvcHttpClientBase&#xA;Inherits TfvcCompatHttpClientBase" />
  <TypeSignature Language="F#" Value="type TfvcHttpClientBase = class&#xA;    inherit TfvcCompatHttpClientBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.VisualStudio.Services.WebApi.ResourceArea("8AA40520-446D-40E6-89F6-9C9F9CE44C48")]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.VisualStudio.Services.WebApi.ResourceArea("8AA40520-446D-40E6-89F6-9C9F9CE44C48")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TfvcHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase" Usage="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TfvcHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase" Usage="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TfvcHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase" Usage="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TfvcHttpClientBase (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase" Usage="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TfvcHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase" Usage="new Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt; CreateChangesetAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset changeset, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt; CreateChangesetAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset changeset, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChangesetAsync (changeset As TfvcChangeset, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcChangesetRef)" />
      <MemberSignature Language="F#" Value="abstract member CreateChangesetAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&#xA;override this.CreateChangesetAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;" Usage="tfvcHttpClientBase.CreateChangesetAsync (changeset, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeset" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changeset" />
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a new changeset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt; CreateChangesetAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset changeset, Guid project, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt; CreateChangesetAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset changeset, valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChangesetAsync (changeset As TfvcChangeset, project As Guid, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcChangesetRef)" />
      <MemberSignature Language="F#" Value="abstract member CreateChangesetAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&#xA;override this.CreateChangesetAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;" Usage="tfvcHttpClientBase.CreateChangesetAsync (changeset, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeset" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changeset" />
        <param name="project">Project ID</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a new changeset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChangesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt; CreateChangesetAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset changeset, string project, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt; CreateChangesetAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset changeset, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChangesetAsync (changeset As TfvcChangeset, project As String, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcChangesetRef)" />
      <MemberSignature Language="F#" Value="abstract member CreateChangesetAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&#xA;override this.CreateChangesetAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;" Usage="tfvcHttpClientBase.CreateChangesetAsync (changeset, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeset" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changeset" />
        <param name="project">Project ID or project name</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a new changeset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedChangesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetBatchedChangesetsAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData changesetsRequestData, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetBatchedChangesetsAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData changesetsRequestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBatchedChangesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBatchedChangesetsAsync (changesetsRequestData As TfvcChangesetsRequestData, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcChangesetRef))" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedChangesetsAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;&#xA;override this.GetBatchedChangesetsAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;" Usage="tfvcHttpClientBase.GetBatchedChangesetsAsync (changesetsRequestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changesetsRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changesetsRequestData">List of changeset IDs.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Returns changesets for a given list of changeset Ids.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt; GetBranchAsync (string path, bool? includeParent = default, bool? includeChildren = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt; GetBranchAsync(string path, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; includeChildren, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchAsync (path As String, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional includeChildren As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcBranch)" />
      <MemberSignature Language="F#" Value="abstract member GetBranchAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&#xA;override this.GetBranchAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;" Usage="tfvcHttpClientBase.GetBranchAsync (path, includeParent, includeChildren, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeChildren" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
        <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
        <param name="includeChildren">Return child branches, if there are any. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single branch hierarchy at the given path with parents or children as specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt; GetBranchAsync (Guid project, string path, bool? includeParent = default, bool? includeChildren = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt; GetBranchAsync(valuetype System.Guid project, string path, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; includeChildren, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchAsync (project As Guid, path As String, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional includeChildren As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcBranch)" />
      <MemberSignature Language="F#" Value="abstract member GetBranchAsync : Guid * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&#xA;override this.GetBranchAsync : Guid * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;" Usage="tfvcHttpClientBase.GetBranchAsync (project, path, includeParent, includeChildren, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeChildren" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
        <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
        <param name="includeChildren">Return child branches, if there are any. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single branch hierarchy at the given path with parents or children as specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt; GetBranchAsync (string project, string path, bool? includeParent = default, bool? includeChildren = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt; GetBranchAsync(string project, string path, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; includeChildren, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchAsync (project As String, path As String, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional includeChildren As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcBranch)" />
      <MemberSignature Language="F#" Value="abstract member GetBranchAsync : string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&#xA;override this.GetBranchAsync : string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;" Usage="tfvcHttpClientBase.GetBranchAsync (project, path, includeParent, includeChildren, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeChildren" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
        <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
        <param name="includeChildren">Return child branches, if there are any. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single branch hierarchy at the given path with parents or children as specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt; GetBranchesAsync (bool? includeParent = default, bool? includeChildren = default, bool? includeDeleted = default, bool? includeLinks = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt; GetBranchesAsync(valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; includeChildren, valuetype System.Nullable`1&lt;bool&gt; includeDeleted, valuetype System.Nullable`1&lt;bool&gt; includeLinks, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchesAsync (Optional includeParent As Nullable(Of Boolean) = Nothing, Optional includeChildren As Nullable(Of Boolean) = Nothing, Optional includeDeleted As Nullable(Of Boolean) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcBranch))" />
      <MemberSignature Language="F#" Value="abstract member GetBranchesAsync : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;&#xA;override this.GetBranchesAsync : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;" Usage="tfvcHttpClientBase.GetBranchesAsync (includeParent, includeChildren, includeDeleted, includeLinks, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeChildren" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
        <param name="includeChildren">Return the child branches for each root branch. Default: False</param>
        <param name="includeDeleted">Return deleted branches. Default: False</param>
        <param name="includeLinks">Return links. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a collection of branch roots -- first-level children, branches with no parents.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt; GetBranchesAsync (Guid project, bool? includeParent = default, bool? includeChildren = default, bool? includeDeleted = default, bool? includeLinks = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt; GetBranchesAsync(valuetype System.Guid project, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; includeChildren, valuetype System.Nullable`1&lt;bool&gt; includeDeleted, valuetype System.Nullable`1&lt;bool&gt; includeLinks, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchesAsync (project As Guid, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional includeChildren As Nullable(Of Boolean) = Nothing, Optional includeDeleted As Nullable(Of Boolean) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcBranch))" />
      <MemberSignature Language="F#" Value="abstract member GetBranchesAsync : Guid * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;&#xA;override this.GetBranchesAsync : Guid * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;" Usage="tfvcHttpClientBase.GetBranchesAsync (project, includeParent, includeChildren, includeDeleted, includeLinks, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeChildren" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
        <param name="includeChildren">Return the child branches for each root branch. Default: False</param>
        <param name="includeDeleted">Return deleted branches. Default: False</param>
        <param name="includeLinks">Return links. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a collection of branch roots -- first-level children, branches with no parents.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt; GetBranchesAsync (string project, bool? includeParent = default, bool? includeChildren = default, bool? includeDeleted = default, bool? includeLinks = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt; GetBranchesAsync(string project, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; includeChildren, valuetype System.Nullable`1&lt;bool&gt; includeDeleted, valuetype System.Nullable`1&lt;bool&gt; includeLinks, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchesAsync (project As String, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional includeChildren As Nullable(Of Boolean) = Nothing, Optional includeDeleted As Nullable(Of Boolean) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcBranch))" />
      <MemberSignature Language="F#" Value="abstract member GetBranchesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;&#xA;override this.GetBranchesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;" Usage="tfvcHttpClientBase.GetBranchesAsync (project, includeParent, includeChildren, includeDeleted, includeLinks, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeChildren" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
        <param name="includeChildren">Return the child branches for each root branch. Default: False</param>
        <param name="includeDeleted">Return deleted branches. Default: False</param>
        <param name="includeLinks">Return links. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a collection of branch roots -- first-level children, branches with no parents.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchRefsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt; GetBranchRefsAsync (string scopePath, bool? includeDeleted = default, bool? includeLinks = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt; GetBranchRefsAsync(string scopePath, valuetype System.Nullable`1&lt;bool&gt; includeDeleted, valuetype System.Nullable`1&lt;bool&gt; includeLinks, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchRefsAsync (scopePath As String, Optional includeDeleted As Nullable(Of Boolean) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcBranchRef))" />
      <MemberSignature Language="F#" Value="abstract member GetBranchRefsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;&#xA;override this.GetBranchRefsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;" Usage="tfvcHttpClientBase.GetBranchRefsAsync (scopePath, includeDeleted, includeLinks, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="includeDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopePath">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
        <param name="includeDeleted">Return deleted branches. Default: False</param>
        <param name="includeLinks">Return links. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get branch hierarchies below the specified scopePath
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchRefsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt; GetBranchRefsAsync (Guid project, string scopePath, bool? includeDeleted = default, bool? includeLinks = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt; GetBranchRefsAsync(valuetype System.Guid project, string scopePath, valuetype System.Nullable`1&lt;bool&gt; includeDeleted, valuetype System.Nullable`1&lt;bool&gt; includeLinks, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchRefsAsync (project As Guid, scopePath As String, Optional includeDeleted As Nullable(Of Boolean) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcBranchRef))" />
      <MemberSignature Language="F#" Value="abstract member GetBranchRefsAsync : Guid * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;&#xA;override this.GetBranchRefsAsync : Guid * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;" Usage="tfvcHttpClientBase.GetBranchRefsAsync (project, scopePath, includeDeleted, includeLinks, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="includeDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="scopePath">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
        <param name="includeDeleted">Return deleted branches. Default: False</param>
        <param name="includeLinks">Return links. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get branch hierarchies below the specified scopePath
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBranchRefsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt; GetBranchRefsAsync (string project, string scopePath, bool? includeDeleted = default, bool? includeLinks = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt; GetBranchRefsAsync(string project, string scopePath, valuetype System.Nullable`1&lt;bool&gt; includeDeleted, valuetype System.Nullable`1&lt;bool&gt; includeLinks, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBranchRefsAsync (project As String, scopePath As String, Optional includeDeleted As Nullable(Of Boolean) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcBranchRef))" />
      <MemberSignature Language="F#" Value="abstract member GetBranchRefsAsync : string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;&#xA;override this.GetBranchRefsAsync : string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;" Usage="tfvcHttpClientBase.GetBranchRefsAsync (project, scopePath, includeDeleted, includeLinks, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="includeDeleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="scopePath">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
        <param name="includeDeleted">Return deleted branches. Default: False</param>
        <param name="includeLinks">Return links. Default: False</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get branch hierarchies below the specified scopePath
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt; GetChangesetAsync (int id, int? maxChangeCount = default, bool? includeDetails = default, bool? includeWorkItems = default, int? maxCommentLength = default, bool? includeSourceRename = default, int? skip = default, int? top = default, string orderby = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt; GetChangesetAsync(int32 id, valuetype System.Nullable`1&lt;int32&gt; maxChangeCount, valuetype System.Nullable`1&lt;bool&gt; includeDetails, valuetype System.Nullable`1&lt;bool&gt; includeWorkItems, valuetype System.Nullable`1&lt;int32&gt; maxCommentLength, valuetype System.Nullable`1&lt;bool&gt; includeSourceRename, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetAsync (id As Integer, Optional maxChangeCount As Nullable(Of Integer) = Nothing, Optional includeDetails As Nullable(Of Boolean) = Nothing, Optional includeWorkItems As Nullable(Of Boolean) = Nothing, Optional maxCommentLength As Nullable(Of Integer) = Nothing, Optional includeSourceRename As Nullable(Of Boolean) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional searchCriteria As TfvcChangesetSearchCriteria = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcChangeset)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetAsync : int * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;&#xA;override this.GetChangesetAsync : int * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;" Usage="tfvcHttpClientBase.GetChangesetAsync (id, maxChangeCount, includeDetails, includeWorkItems, maxCommentLength, includeSourceRename, skip, top, orderby, searchCriteria, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="maxChangeCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeDetails" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeWorkItems" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="maxCommentLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeSourceRename" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="searchCriteria" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">Changeset Id to retrieve.</param>
        <param name="maxChangeCount">Number of changes to return (maximum 100 changes) Default: 0</param>
        <param name="includeDetails">Include policy details and check-in notes in the response. Default: false</param>
        <param name="includeWorkItems">Include workitems. Default: false</param>
        <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
        <param name="includeSourceRename">Include renames.  Default: false</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
        <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve a Tfvc Changeset
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt; GetChangesetAsync (Guid project, int id, int? maxChangeCount = default, bool? includeDetails = default, bool? includeWorkItems = default, int? maxCommentLength = default, bool? includeSourceRename = default, int? skip = default, int? top = default, string orderby = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt; GetChangesetAsync(valuetype System.Guid project, int32 id, valuetype System.Nullable`1&lt;int32&gt; maxChangeCount, valuetype System.Nullable`1&lt;bool&gt; includeDetails, valuetype System.Nullable`1&lt;bool&gt; includeWorkItems, valuetype System.Nullable`1&lt;int32&gt; maxCommentLength, valuetype System.Nullable`1&lt;bool&gt; includeSourceRename, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetAsync (project As Guid, id As Integer, Optional maxChangeCount As Nullable(Of Integer) = Nothing, Optional includeDetails As Nullable(Of Boolean) = Nothing, Optional includeWorkItems As Nullable(Of Boolean) = Nothing, Optional maxCommentLength As Nullable(Of Integer) = Nothing, Optional includeSourceRename As Nullable(Of Boolean) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional searchCriteria As TfvcChangesetSearchCriteria = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcChangeset)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetAsync : Guid * int * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;&#xA;override this.GetChangesetAsync : Guid * int * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;" Usage="tfvcHttpClientBase.GetChangesetAsync (project, id, maxChangeCount, includeDetails, includeWorkItems, maxCommentLength, includeSourceRename, skip, top, orderby, searchCriteria, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="maxChangeCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeDetails" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeWorkItems" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="maxCommentLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeSourceRename" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="searchCriteria" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="id">Changeset Id to retrieve.</param>
        <param name="maxChangeCount">Number of changes to return (maximum 100 changes) Default: 0</param>
        <param name="includeDetails">Include policy details and check-in notes in the response. Default: false</param>
        <param name="includeWorkItems">Include workitems. Default: false</param>
        <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
        <param name="includeSourceRename">Include renames.  Default: false</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
        <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve a Tfvc Changeset
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt; GetChangesetAsync (string project, int id, int? maxChangeCount = default, bool? includeDetails = default, bool? includeWorkItems = default, int? maxCommentLength = default, bool? includeSourceRename = default, int? skip = default, int? top = default, string orderby = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt; GetChangesetAsync(string project, int32 id, valuetype System.Nullable`1&lt;int32&gt; maxChangeCount, valuetype System.Nullable`1&lt;bool&gt; includeDetails, valuetype System.Nullable`1&lt;bool&gt; includeWorkItems, valuetype System.Nullable`1&lt;int32&gt; maxCommentLength, valuetype System.Nullable`1&lt;bool&gt; includeSourceRename, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetAsync (project As String, id As Integer, Optional maxChangeCount As Nullable(Of Integer) = Nothing, Optional includeDetails As Nullable(Of Boolean) = Nothing, Optional includeWorkItems As Nullable(Of Boolean) = Nothing, Optional maxCommentLength As Nullable(Of Integer) = Nothing, Optional includeSourceRename As Nullable(Of Boolean) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional searchCriteria As TfvcChangesetSearchCriteria = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcChangeset)" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetAsync : string * int * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;&#xA;override this.GetChangesetAsync : string * int * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;" Usage="tfvcHttpClientBase.GetChangesetAsync (project, id, maxChangeCount, includeDetails, includeWorkItems, maxCommentLength, includeSourceRename, skip, top, orderby, searchCriteria, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="maxChangeCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeDetails" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeWorkItems" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="maxCommentLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeSourceRename" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="searchCriteria" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="id">Changeset Id to retrieve.</param>
        <param name="maxChangeCount">Number of changes to return (maximum 100 changes) Default: 0</param>
        <param name="includeDetails">Include policy details and check-in notes in the response. Default: false</param>
        <param name="includeWorkItems">Include workitems. Default: false</param>
        <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
        <param name="includeSourceRename">Include renames.  Default: false</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
        <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve a Tfvc Changeset
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetChangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt; GetChangesetChangesAsync (int? id = default, int? skip = default, int? top = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt; GetChangesetChangesAsync(valuetype System.Nullable`1&lt;int32&gt; id, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetChangesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetChangesAsync (Optional id As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcChange))" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetChangesAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt;&#xA;override this.GetChangesetChangesAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt;" Usage="tfvcHttpClientBase.GetChangesetChangesAsync (id, skip, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">ID of the changeset. Default: null</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve Tfvc changes for a given changeset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetChangesetsAsync (int? maxCommentLength = default, int? skip = default, int? top = default, string orderby = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetChangesetsAsync(valuetype System.Nullable`1&lt;int32&gt; maxCommentLength, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetsAsync (Optional maxCommentLength As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional searchCriteria As TfvcChangesetSearchCriteria = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcChangesetRef))" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetsAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;&#xA;override this.GetChangesetsAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;" Usage="tfvcHttpClientBase.GetChangesetsAsync (maxCommentLength, skip, top, orderby, searchCriteria, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxCommentLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="searchCriteria" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
        <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve Tfvc Changesets
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetChangesetsAsync (Guid project, int? maxCommentLength = default, int? skip = default, int? top = default, string orderby = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetChangesetsAsync(valuetype System.Guid project, valuetype System.Nullable`1&lt;int32&gt; maxCommentLength, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetsAsync (project As Guid, Optional maxCommentLength As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional searchCriteria As TfvcChangesetSearchCriteria = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcChangesetRef))" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetsAsync : Guid * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;&#xA;override this.GetChangesetsAsync : Guid * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;" Usage="tfvcHttpClientBase.GetChangesetsAsync (project, maxCommentLength, skip, top, orderby, searchCriteria, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="maxCommentLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="searchCriteria" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
        <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve Tfvc Changesets
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetChangesetsAsync (string project, int? maxCommentLength = default, int? skip = default, int? top = default, string orderby = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt; GetChangesetsAsync(string project, valuetype System.Nullable`1&lt;int32&gt; maxCommentLength, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria searchCriteria, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetsAsync (project As String, Optional maxCommentLength As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional searchCriteria As TfvcChangesetSearchCriteria = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcChangesetRef))" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;&#xA;override this.GetChangesetsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;" Usage="tfvcHttpClientBase.GetChangesetsAsync (project, maxCommentLength, skip, top, orderby, searchCriteria, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="maxCommentLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="searchCriteria" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
        <param name="skip">Number of results to skip. Default: null</param>
        <param name="top">The maximum number of results to return. Default: null</param>
        <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
        <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieve Tfvc Changesets
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangesetWorkItemsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt; GetChangesetWorkItemsAsync (int? id = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt; GetChangesetWorkItemsAsync(valuetype System.Nullable`1&lt;int32&gt; id, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetWorkItemsAsync(System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChangesetWorkItemsAsync (Optional id As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of AssociatedWorkItem))" />
      <MemberSignature Language="F#" Value="abstract member GetChangesetWorkItemsAsync : Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt;&#xA;override this.GetChangesetWorkItemsAsync : Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt;" Usage="tfvcHttpClientBase.GetChangesetWorkItemsAsync (id, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">ID of the changeset. Default: null</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Retrieves the work items associated with a particular changeset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt; GetItemAsync (string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt; GetItemAsync(string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemAsync (path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcItem)" />
      <MemberSignature Language="F#" Value="override this.GetItemAsync : string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;" Usage="tfvcHttpClientBase.GetItemAsync (path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt; GetItemAsync (Guid project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt; GetItemAsync(valuetype System.Guid project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemAsync (project As Guid, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcItem)" />
      <MemberSignature Language="F#" Value="override this.GetItemAsync : Guid * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;" Usage="tfvcHttpClientBase.GetItemAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt; GetItemAsync (string project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt; GetItemAsync(string project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemAsync (project As String, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcItem)" />
      <MemberSignature Language="F#" Value="override this.GetItemAsync : string * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;" Usage="tfvcHttpClientBase.GetItemAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemContentAsync (string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemContentAsync(string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemContentAsync (path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemContentAsync : string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemContentAsync (path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemContentAsync (Guid project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemContentAsync(valuetype System.Guid project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemContentAsync (project As Guid, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemContentAsync : Guid * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemContentAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemContentAsync (string project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemContentAsync(string project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemContentAsync (project As String, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemContentAsync : string * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemContentAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetItemsAsync (string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, bool? includeLinks = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetItemsAsync(string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, valuetype System.Nullable`1&lt;bool&gt; includeLinks, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsAsync (Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcItem))" />
      <MemberSignature Language="F#" Value="abstract member GetItemsAsync : string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Nullable&lt;bool&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&#xA;override this.GetItemsAsync : string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Nullable&lt;bool&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;" Usage="tfvcHttpClientBase.GetItemsAsync (scopePath, recursionLevel, includeLinks, versionDescriptor, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="includeLinks">True to include links.</param>
        <param name="versionDescriptor" />
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of Tfvc items
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetItemsAsync (Guid project, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, bool? includeLinks = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetItemsAsync(valuetype System.Guid project, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, valuetype System.Nullable`1&lt;bool&gt; includeLinks, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsAsync (project As Guid, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcItem))" />
      <MemberSignature Language="F#" Value="abstract member GetItemsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Nullable&lt;bool&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&#xA;override this.GetItemsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Nullable&lt;bool&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;" Usage="tfvcHttpClientBase.GetItemsAsync (project, scopePath, recursionLevel, includeLinks, versionDescriptor, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="includeLinks">True to include links.</param>
        <param name="versionDescriptor" />
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of Tfvc items
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetItemsAsync (string project, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, bool? includeLinks = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetItemsAsync(string project, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, valuetype System.Nullable`1&lt;bool&gt; includeLinks, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsAsync (project As String, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional includeLinks As Nullable(Of Boolean) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcItem))" />
      <MemberSignature Language="F#" Value="abstract member GetItemsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Nullable&lt;bool&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&#xA;override this.GetItemsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Nullable&lt;bool&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;" Usage="tfvcHttpClientBase.GetItemsAsync (project, scopePath, recursionLevel, includeLinks, versionDescriptor, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="includeLinks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="includeLinks">True to include links.</param>
        <param name="versionDescriptor" />
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of Tfvc items
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsBatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt; GetItemsBatchAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt; GetItemsBatchAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsBatchAsync (itemRequestData As TfvcItemRequestData, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of List(Of TfvcItem)))" />
      <MemberSignature Language="F#" Value="abstract member GetItemsBatchAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;&#xA;override this.GetItemsBatchAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;" Usage="tfvcHttpClientBase.GetItemsBatchAsync (itemRequestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemRequestData" />
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsBatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt; GetItemsBatchAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, Guid project, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt; GetItemsBatchAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsBatchAsync (itemRequestData As TfvcItemRequestData, project As Guid, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of List(Of TfvcItem)))" />
      <MemberSignature Language="F#" Value="abstract member GetItemsBatchAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;&#xA;override this.GetItemsBatchAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;" Usage="tfvcHttpClientBase.GetItemsBatchAsync (itemRequestData, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemRequestData" />
        <param name="project">Project ID</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsBatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt; GetItemsBatchAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, string project, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt; GetItemsBatchAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsBatchAsync (itemRequestData As TfvcItemRequestData, project As String, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of List(Of TfvcItem)))" />
      <MemberSignature Language="F#" Value="abstract member GetItemsBatchAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;&#xA;override this.GetItemsBatchAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;" Usage="tfvcHttpClientBase.GetItemsBatchAsync (itemRequestData, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemRequestData" />
        <param name="project">Project ID or project name</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsBatchZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemsBatchZipAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemsBatchZipAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsBatchZipAsync (itemRequestData As TfvcItemRequestData, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetItemsBatchZipAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetItemsBatchZipAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemsBatchZipAsync (itemRequestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemRequestData" />
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsBatchZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemsBatchZipAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, Guid project, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemsBatchZipAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsBatchZipAsync (itemRequestData As TfvcItemRequestData, project As Guid, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetItemsBatchZipAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetItemsBatchZipAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemsBatchZipAsync (itemRequestData, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData" />
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemRequestData" />
        <param name="project">Project ID</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsBatchZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemsBatchZipAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, string project, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemsBatchZipAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData itemRequestData, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemsBatchZipAsync (itemRequestData As TfvcItemRequestData, project As String, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetItemsBatchZipAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetItemsBatchZipAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemsBatchZipAsync (itemRequestData, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemRequestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="itemRequestData" />
        <param name="project">Project ID or project name</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemTextAsync (string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemTextAsync(string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemTextAsync (path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemTextAsync : string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemTextAsync (path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemTextAsync (Guid project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemTextAsync(valuetype System.Guid project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemTextAsync (project As Guid, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemTextAsync : Guid * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemTextAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemTextAsync (string project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemTextAsync(string project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemTextAsync (project As String, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemTextAsync : string * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemTextAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemZipAsync (string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemZipAsync(string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemZipAsync (path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemZipAsync : string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemZipAsync (path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemZipAsync (Guid project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemZipAsync(valuetype System.Guid project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemZipAsync (project As Guid, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemZipAsync : Guid * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemZipAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetItemZipAsync (string project, string path, string fileName = default, bool? download = default, string scopePath = default, Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType? recursionLevel = default, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor = default, bool? includeContent = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetItemZipAsync(string project, string path, string fileName, valuetype System.Nullable`1&lt;bool&gt; download, string scopePath, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; recursionLevel, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor versionDescriptor, valuetype System.Nullable`1&lt;bool&gt; includeContent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemZipAsync (project As String, path As String, Optional fileName As String = Nothing, Optional download As Nullable(Of Boolean) = Nothing, Optional scopePath As String = Nothing, Optional recursionLevel As Nullable(Of VersionControlRecursionType) = Nothing, Optional versionDescriptor As TfvcVersionDescriptor = Nothing, Optional includeContent As Nullable(Of Boolean) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="override this.GetItemZipAsync : string * string * string * Nullable&lt;bool&gt; * string * Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt; * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="tfvcHttpClientBase.GetItemZipAsync (project, path, fileName, download, scopePath, recursionLevel, versionDescriptor, includeContent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scopePath" Type="System.String" />
        <Parameter Name="recursionLevel" Type="System.Nullable&lt;Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType&gt;" />
        <Parameter Name="versionDescriptor" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor" />
        <Parameter Name="includeContent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="path">Version control path of an individual item to return.</param>
        <param name="fileName">file name of item returned.</param>
        <param name="download">If true, create a downloadable attachment.</param>
        <param name="scopePath">Version control path of a folder to return multiple items.</param>
        <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
        <param name="versionDescriptor">Version descriptor.  Default is null.</param>
        <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt; GetLabelAsync (string labelId, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt; GetLabelAsync(string labelId, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelAsync (labelId As String, requestData As TfvcLabelRequestData, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcLabel)" />
      <MemberSignature Language="F#" Value="abstract member GetLabelAsync : string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;&#xA;override this.GetLabelAsync : string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;" Usage="tfvcHttpClientBase.GetLabelAsync (labelId, requestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelId" Type="System.String" />
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="labelId">Unique identifier of label</param>
        <param name="requestData">maxItemCount</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single deep label.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt; GetLabelAsync (Guid project, string labelId, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt; GetLabelAsync(valuetype System.Guid project, string labelId, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelAsync (project As Guid, labelId As String, requestData As TfvcLabelRequestData, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcLabel)" />
      <MemberSignature Language="F#" Value="abstract member GetLabelAsync : Guid * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;&#xA;override this.GetLabelAsync : Guid * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;" Usage="tfvcHttpClientBase.GetLabelAsync (project, labelId, requestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="labelId" Type="System.String" />
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="labelId">Unique identifier of label</param>
        <param name="requestData">maxItemCount</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single deep label.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt; GetLabelAsync (string project, string labelId, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt; GetLabelAsync(string project, string labelId, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelAsync (project As String, labelId As String, requestData As TfvcLabelRequestData, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcLabel)" />
      <MemberSignature Language="F#" Value="abstract member GetLabelAsync : string * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;&#xA;override this.GetLabelAsync : string * string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;" Usage="tfvcHttpClientBase.GetLabelAsync (project, labelId, requestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="labelId" Type="System.String" />
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="labelId">Unique identifier of label</param>
        <param name="requestData">maxItemCount</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single deep label.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelItemsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetLabelItemsAsync (string labelId, int? top = default, int? skip = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt; GetLabelItemsAsync(string labelId, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelItemsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelItemsAsync (labelId As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcItem))" />
      <MemberSignature Language="F#" Value="abstract member GetLabelItemsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;&#xA;override this.GetLabelItemsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;" Usage="tfvcHttpClientBase.GetLabelItemsAsync (labelId, top, skip, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="labelId" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="labelId">Unique identifier of label</param>
        <param name="top">Max number of items to return</param>
        <param name="skip">Number of items to skip</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get items under a label.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt; GetLabelsAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, int? top = default, int? skip = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt; GetLabelsAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelsAsync (requestData As TfvcLabelRequestData, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcLabelRef))" />
      <MemberSignature Language="F#" Value="abstract member GetLabelsAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;&#xA;override this.GetLabelsAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;" Usage="tfvcHttpClientBase.GetLabelsAsync (requestData, top, skip, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
        <param name="top">Max number of labels to return</param>
        <param name="skip">Number of labels to skip</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a collection of shallow label references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt; GetLabelsAsync (Guid project, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, int? top = default, int? skip = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt; GetLabelsAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelsAsync (project As Guid, requestData As TfvcLabelRequestData, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcLabelRef))" />
      <MemberSignature Language="F#" Value="abstract member GetLabelsAsync : Guid * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;&#xA;override this.GetLabelsAsync : Guid * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;" Usage="tfvcHttpClientBase.GetLabelsAsync (project, requestData, top, skip, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
        <param name="top">Max number of labels to return</param>
        <param name="skip">Number of labels to skip</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a collection of shallow label references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt; GetLabelsAsync (string project, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, int? top = default, int? skip = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt; GetLabelsAsync(string project, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData requestData, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelsAsync (project As String, requestData As TfvcLabelRequestData, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcLabelRef))" />
      <MemberSignature Language="F#" Value="abstract member GetLabelsAsync : string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;&#xA;override this.GetLabelsAsync : string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;" Usage="tfvcHttpClientBase.GetLabelsAsync (project, requestData, top, skip, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
        <param name="top">Max number of labels to return</param>
        <param name="skip">Number of labels to skip</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a collection of shallow label references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShelvesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset&gt; GetShelvesetAsync (string shelvesetId, Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData requestData = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset&gt; GetShelvesetAsync(string shelvesetId, class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData requestData, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShelvesetAsync (shelvesetId As String, Optional requestData As TfvcShelvesetRequestData = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcShelveset)" />
      <MemberSignature Language="F#" Value="abstract member GetShelvesetAsync : string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset&gt;&#xA;override this.GetShelvesetAsync : string * Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset&gt;" Usage="tfvcHttpClientBase.GetShelvesetAsync (shelvesetId, requestData, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shelvesetId" Type="System.String" />
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shelvesetId">Shelveset's unique ID</param>
        <param name="requestData">includeDetails, includeWorkItems, maxChangeCount, and maxCommentLength</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a single deep shelveset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShelvesetChangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt; GetShelvesetChangesAsync (string shelvesetId, int? top = default, int? skip = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt; GetShelvesetChangesAsync(string shelvesetId, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetChangesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShelvesetChangesAsync (shelvesetId As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcChange))" />
      <MemberSignature Language="F#" Value="abstract member GetShelvesetChangesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt;&#xA;override this.GetShelvesetChangesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt;" Usage="tfvcHttpClientBase.GetShelvesetChangesAsync (shelvesetId, top, skip, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shelvesetId" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shelvesetId">Shelveset's unique ID</param>
        <param name="top">Max number of changes to return</param>
        <param name="skip">Number of changes to skip</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get changes included in a shelveset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShelvesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef&gt;&gt; GetShelvesetsAsync (Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData requestData = default, int? top = default, int? skip = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef&gt;&gt; GetShelvesetsAsync(class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData requestData, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShelvesetsAsync (Optional requestData As TfvcShelvesetRequestData = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TfvcShelvesetRef))" />
      <MemberSignature Language="F#" Value="abstract member GetShelvesetsAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef&gt;&gt;&#xA;override this.GetShelvesetsAsync : Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData * Nullable&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef&gt;&gt;" Usage="tfvcHttpClientBase.GetShelvesetsAsync (requestData, top, skip, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestData" Type="Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestData">name, owner, and maxCommentLength</param>
        <param name="top">Max number of shelvesets to return</param>
        <param name="skip">Number of shelvesets to skip</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Return a collection of shallow shelveset references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShelvesetWorkItemsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt; GetShelvesetWorkItemsAsync (string shelvesetId, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt; GetShelvesetWorkItemsAsync(string shelvesetId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetWorkItemsAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShelvesetWorkItemsAsync (shelvesetId As String, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of List(Of AssociatedWorkItem))" />
      <MemberSignature Language="F#" Value="abstract member GetShelvesetWorkItemsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt;&#xA;override this.GetShelvesetWorkItemsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt;" Usage="tfvcHttpClientBase.GetShelvesetWorkItemsAsync (shelvesetId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shelvesetId" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shelvesetId">Shelveset's unique ID</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get work items associated with a shelveset.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTfvcStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt; GetTfvcStatisticsAsync (string scopePath = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt; GetTfvcStatisticsAsync(string scopePath, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetTfvcStatisticsAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTfvcStatisticsAsync (Optional scopePath As String = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetTfvcStatisticsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;&#xA;override this.GetTfvcStatisticsAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;" Usage="tfvcHttpClientBase.GetTfvcStatisticsAsync (scopePath, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopePath" Type="System.String" Index="0" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="userState" Type="System.Object" Index="1" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-devops-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="scopePath">'$/' for collection, '$/project' for specific project</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Provides File Count and Uncompressed Bytes for a Collection/Project at a particular scope for TFVC.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTfvcStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt; GetTfvcStatisticsAsync (Guid project, string scopePath = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt; GetTfvcStatisticsAsync(valuetype System.Guid project, string scopePath, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetTfvcStatisticsAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTfvcStatisticsAsync (project As Guid, Optional scopePath As String = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetTfvcStatisticsAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;&#xA;override this.GetTfvcStatisticsAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;" Usage="tfvcHttpClientBase.GetTfvcStatisticsAsync (project, scopePath, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" Index="0" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="scopePath" Type="System.String" Index="1" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="userState" Type="System.Object" Index="2" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-devops-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="scopePath">'$/' for collection, '$/project' for specific project</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Provides File Count and Uncompressed Bytes for a Collection/Project at a particular scope for TFVC.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTfvcStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt; GetTfvcStatisticsAsync (string project, string scopePath = default, object userState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt; GetTfvcStatisticsAsync(string project, string scopePath, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetTfvcStatisticsAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTfvcStatisticsAsync (project As String, Optional scopePath As String = Nothing, Optional userState As Object = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TfvcStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetTfvcStatisticsAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;&#xA;override this.GetTfvcStatisticsAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;" Usage="tfvcHttpClientBase.GetTfvcStatisticsAsync (project, scopePath, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.SourceControl.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" Index="0" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="scopePath" Type="System.String" Index="1" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="userState" Type="System.Object" Index="2" FrameworkAlternate="azure-devops-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-devops-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="scopePath">'$/' for collection, '$/project' for specific project</param>
        <param name="userState" />
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Provides File Count and Uncompressed Bytes for a Collection/Project at a particular scope for TFVC.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
