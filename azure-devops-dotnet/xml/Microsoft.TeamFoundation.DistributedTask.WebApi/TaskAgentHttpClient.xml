<Type Name="TaskAgentHttpClient" FullName="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient">
  <TypeSignature Language="C#" Value="public class TaskAgentHttpClient : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskAgentHttpClient extends Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskAgentHttpClient&#xA;Inherits TaskAgentHttpClientBase" />
  <TypeSignature Language="F#" Value="type TaskAgentHttpClient = class&#xA;    inherit TaskAgentHttpClientBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
    <AssemblyVersion>17.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ResourceArea("A85B8835-C1A1-4AAC-AE97-1C3D0BA72DBD")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClient (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClient (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishAgentRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; FinishAgentRequestAsync (int poolId, long requestId, Guid lockToken, DateTime finishTime, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult result, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; FinishAgentRequestAsync(int32 poolId, int64 requestId, valuetype System.Guid lockToken, valuetype System.DateTime finishTime, valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult result, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.FinishAgentRequestAsync(System.Int32,System.Int64,System.Guid,System.DateTime,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FinishAgentRequestAsync : int * int64 * Guid * DateTime * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClient.FinishAgentRequestAsync (poolId, requestId, lockToken, finishTime, result, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="lockToken" Type="System.Guid" />
        <Parameter Name="finishTime" Type="System.DateTime" />
        <Parameter Name="result" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="requestId">To be added.</param>
        <param name="lockToken">To be added.</param>
        <param name="finishTime">To be added.</param>
        <param name="result">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt; GetAgentsAsync (int poolId, string agentName = null, Nullable&lt;bool&gt; includeCapabilities = null, Nullable&lt;bool&gt; includeAssignedRequest = null, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = null, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt; demands = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt; GetAgentsAsync(int32 poolId, string agentName, valuetype System.Nullable`1&lt;bool&gt; includeCapabilities, valuetype System.Nullable`1&lt;bool&gt; includeAssignedRequest, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt; demands, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetAgentsAsync(System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.Demand},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetAgentsAsync : int * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt;" Usage="taskAgentHttpClient.GetAgentsAsync (poolId, agentName, includeCapabilities, includeAssignedRequest, propertyFilters, demands, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentName" Type="System.String" />
        <Parameter Name="includeCapabilities" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeAssignedRequest" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="demands" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="agentName">To be added.</param>
        <param name="includeCapabilities">To be added.</param>
        <param name="includeAssignedRequest">To be added.</param>
        <param name="propertyFilters">To be added.</param>
        <param name="demands">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContinuationToken">
      <MemberSignature Language="C#" Value="protected string GetContinuationToken (System.Net.Http.HttpResponseMessage responseMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContinuationToken(class System.Net.Http.HttpResponseMessage responseMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetContinuationToken(System.Net.Http.HttpResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContinuationToken (responseMessage As HttpResponseMessage) As String" />
      <MemberSignature Language="F#" Value="member this.GetContinuationToken : System.Net.Http.HttpResponseMessage -&gt; string" Usage="taskAgentHttpClient.GetContinuationToken responseMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseMessage" Type="System.Net.Http.HttpResponseMessage" />
      </Parameters>
      <Docs>
        <param name="responseMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupsMetricsAsync2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync2 (Guid project, string deploymentGroupName = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync2(valuetype System.Guid project, string deploymentGroupName, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetDeploymentGroupsMetricsAsync2(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupsMetricsAsync2 : Guid * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;&#xA;override this.GetDeploymentGroupsMetricsAsync2 : Guid * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;" Usage="taskAgentHttpClient.GetDeploymentGroupsMetricsAsync2 (project, deploymentGroupName, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupName" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupName"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupsMetricsAsync2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync2 (string project, string deploymentGroupName = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync2(string project, string deploymentGroupName, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetDeploymentGroupsMetricsAsync2(System.String,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupsMetricsAsync2 : string * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;&#xA;override this.GetDeploymentGroupsMetricsAsync2 : string * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;" Usage="taskAgentHttpClient.GetDeploymentGroupsMetricsAsync2 (project, deploymentGroupName, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupName" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupName"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsyncWithContinuationToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsyncWithContinuationToken : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsyncWithContinuationToken : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="tags"></param>
        <param name="name"></param>
        <param name="partialNameMatch"></param>
        <param name="expand"></param>
        <param name="agentStatus"></param>
        <param name="agentJobResult"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsyncWithContinuationToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsyncWithContinuationToken : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsyncWithContinuationToken : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="tags"></param>
        <param name="name"></param>
        <param name="partialNameMatch"></param>
        <param name="expand"></param>
        <param name="agentStatus"></param>
        <param name="agentJobResult"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsyncWithContinuationToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null, Nullable&lt;bool&gt; enabled = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Nullable`1&lt;bool&gt; enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken,System.Nullable{System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsyncWithContinuationToken : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsyncWithContinuationToken : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, userState, cancellationToken, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="tags"></param>
        <param name="name"></param>
        <param name="partialNameMatch"></param>
        <param name="expand"></param>
        <param name="agentStatus"></param>
        <param name="agentJobResult"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <param name="enabled">To be added.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsyncWithContinuationToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null, Nullable&lt;bool&gt; enabled = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsyncWithContinuationToken(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Nullable`1&lt;bool&gt; enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken,System.Nullable{System.Boolean})" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsyncWithContinuationToken : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsyncWithContinuationToken : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClient.GetDeploymentTargetsAsyncWithContinuationToken (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, userState, cancellationToken, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="tags"></param>
        <param name="name"></param>
        <param name="partialNameMatch"></param>
        <param name="expand"></param>
        <param name="agentStatus"></param>
        <param name="agentJobResult"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <param name="enabled">To be added.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPagedList&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;T&gt;&gt; GetPagedList&lt;T&gt; (System.Net.Http.HttpResponseMessage responseMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.VisualStudio.Services.WebApi.IPagedList`1&lt;!!T&gt;&gt; GetPagedList&lt;T&gt;(class System.Net.Http.HttpResponseMessage responseMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetPagedList``1(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetPagedList : System.Net.Http.HttpResponseMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;'T&gt;&gt;" Usage="taskAgentHttpClient.GetPagedList (responseMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.VisualStudio.Services.WebApi.IPagedList&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="responseMessage" Type="System.Net.Http.HttpResponseMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="responseMessage">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; GetSecureFileAsync (Guid project, Guid secureFileId, Nullable&lt;bool&gt; includeDownloadTicket = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; GetSecureFileAsync(valuetype System.Guid project, valuetype System.Guid secureFileId, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTicket, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetSecureFileAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetSecureFileAsync : Guid * Guid * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClient.GetSecureFileAsync (project, secureFileId, includeDownloadTicket, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="includeDownloadTicket" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="includeDownloadTicket">If includeDownloadTicket is true and the caller has permissions, a download ticket is included in the response.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync (Guid project, string namePattern = null, Nullable&lt;bool&gt; includeDownloadTickets = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync(valuetype System.Guid project, string namePattern, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetSecureFilesAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetSecureFilesAsync : Guid * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClient.GetSecureFilesAsync (project, namePattern, includeDownloadTickets, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="namePattern" Type="System.String" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="namePattern">Name of the secure file to match. Can include wildcards to match multiple files.</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync (string project, string namePattern = null, Nullable&lt;bool&gt; includeDownloadTickets = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync(string project, string namePattern, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetSecureFilesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetSecureFilesAsync : string * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClient.GetSecureFilesAsync (project, namePattern, includeDownloadTickets, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="namePattern" Type="System.String" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="namePattern">Name of the secure file to match. Can include wildcards to match multiple files.</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync (Guid project, System.Collections.Generic.IEnumerable&lt;Guid&gt; secureFileIds, Nullable&lt;bool&gt; includeDownloadTickets = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; secureFileIds, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetSecureFilesByIdsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetSecureFilesByIdsAsync : Guid * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClient.GetSecureFilesByIdsAsync (project, secureFileIds, includeDownloadTickets, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileIds" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileIds">A list of secure file Ids</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync (string project, System.Collections.Generic.IEnumerable&lt;Guid&gt; secureFileIds, Nullable&lt;bool&gt; includeDownloadTickets = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; secureFileIds, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetSecureFilesByIdsAsync(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetSecureFilesByIdsAsync : string * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClient.GetSecureFilesByIdsAsync (project, secureFileIds, includeDownloadTickets, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileIds" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileIds">A list of secure file Ids</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskContentZipAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetTaskContentZipAsync (Guid taskId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskVersion version, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetTaskContentZipAsync(valuetype System.Guid taskId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskVersion version, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.GetTaskContentZipAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskVersion,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetTaskContentZipAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskVersion * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClient.GetTaskContentZipAsync (taskId, version, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Guid" />
        <Parameter Name="version" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskVersion" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId">To be added.</param>
        <param name="version">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueAgentRequestByPoolAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; QueueAgentRequestByPoolAsync (int poolId, System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt; demands, Guid serviceOwner, Guid hostId, Guid scopeIdentifier, string hubName, Guid planId, Guid jobId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; QueueAgentRequestByPoolAsync(int32 poolId, class System.Collections.Generic.IList`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt; demands, valuetype System.Guid serviceOwner, valuetype System.Guid hostId, valuetype System.Guid scopeIdentifier, string hubName, valuetype System.Guid planId, valuetype System.Guid jobId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.QueueAgentRequestByPoolAsync(System.Int32,System.Collections.Generic.IList{Microsoft.TeamFoundation.DistributedTask.WebApi.Demand},System.Guid,System.Guid,System.Guid,System.String,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.QueueAgentRequestByPoolAsync : int * System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt; * Guid * Guid * Guid * string * Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClient.QueueAgentRequestByPoolAsync (poolId, demands, serviceOwner, hostId, scopeIdentifier, hubName, planId, jobId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="demands" Type="System.Collections.Generic.IList&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.Demand&gt;" />
        <Parameter Name="serviceOwner" Type="System.Guid" />
        <Parameter Name="hostId" Type="System.Guid" />
        <Parameter Name="scopeIdentifier" Type="System.Guid" />
        <Parameter Name="hubName" Type="System.String" />
        <Parameter Name="planId" Type="System.Guid" />
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="demands">To be added.</param>
        <param name="serviceOwner">To be added.</param>
        <param name="hostId">To be added.</param>
        <param name="scopeIdentifier">To be added.</param>
        <param name="hubName">To be added.</param>
        <param name="planId">To be added.</param>
        <param name="jobId">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewAgentRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; RenewAgentRequestAsync (int poolId, long requestId, Guid lockToken, Nullable&lt;DateTime&gt; expiresOn = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; RenewAgentRequestAsync(int32 poolId, int64 requestId, valuetype System.Guid lockToken, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; expiresOn, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.RenewAgentRequestAsync(System.Int32,System.Int64,System.Guid,System.Nullable{System.DateTime},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.RenewAgentRequestAsync : int * int64 * Guid * Nullable&lt;DateTime&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClient.RenewAgentRequestAsync (poolId, requestId, lockToken, expiresOn, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="lockToken" Type="System.Guid" />
        <Parameter Name="expiresOn" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="requestId">To be added.</param>
        <param name="lockToken">To be added.</param>
        <param name="expiresOn">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAgentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; ReplaceAgentAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; ReplaceAgentAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.ReplaceAgentAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReplaceAgentAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClient.ReplaceAgentAsync (poolId, agent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agent" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="agent">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;T&gt; SendAsync&lt;T&gt; (System.Net.Http.HttpRequestMessage message, object userState = null, System.Threading.CancellationToken cancellationToken = null, Func&lt;System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt; processResponse = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; SendAsync&lt;T&gt;(class System.Net.Http.HttpRequestMessage message, object userState, valuetype System.Threading.CancellationToken cancellationToken, class System.Func`3&lt;class System.Net.Http.HttpResponseMessage, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; processResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.SendAsync``1(System.Net.Http.HttpRequestMessage,System.Object,System.Threading.CancellationToken,System.Func{System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * obj * System.Threading.CancellationToken * Func&lt;System.Net.Http.HttpResponseMessage, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="taskAgentHttpClient.SendAsync (message, userState, cancellationToken, processResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="processResponse" Type="System.Func&lt;System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="message">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="processResponse">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;T&gt; SendAsync&lt;T&gt; (System.Net.Http.HttpMethod method, Guid locationId, object routeValues = null, Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion version = null, System.Net.Http.HttpContent content = null, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; queryParameters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null, Func&lt;System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt; processResponse = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; SendAsync&lt;T&gt;(class System.Net.Http.HttpMethod method, valuetype System.Guid locationId, object routeValues, class Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion version, class System.Net.Http.HttpContent content, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; queryParameters, object userState, valuetype System.Threading.CancellationToken cancellationToken, class System.Func`3&lt;class System.Net.Http.HttpResponseMessage, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; processResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken,System.Func{System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpMethod * Guid * obj * Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion * System.Net.Http.HttpContent * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; * obj * System.Threading.CancellationToken * Func&lt;System.Net.Http.HttpResponseMessage, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="taskAgentHttpClient.SendAsync (method, locationId, routeValues, version, content, queryParameters, userState, cancellationToken, processResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="method" Type="System.Net.Http.HttpMethod" />
        <Parameter Name="locationId" Type="System.Guid" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="version" Type="Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="queryParameters" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="processResponse" Type="System.Func&lt;System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="method">To be added.</param>
        <param name="locationId">To be added.</param>
        <param name="routeValues">To be added.</param>
        <param name="version">To be added.</param>
        <param name="content">To be added.</param>
        <param name="queryParameters">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="processResponse">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;T&gt; SendAsync&lt;T&gt; (System.Net.Http.HttpMethod method, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; additionalHeaders, Guid locationId, object routeValues = null, Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion version = null, System.Net.Http.HttpContent content = null, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; queryParameters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null, Func&lt;System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt; processResponse = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; SendAsync&lt;T&gt;(class System.Net.Http.HttpMethod method, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; additionalHeaders, valuetype System.Guid locationId, object routeValues, class Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion version, class System.Net.Http.HttpContent content, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; queryParameters, object userState, valuetype System.Threading.CancellationToken cancellationToken, class System.Func`3&lt;class System.Net.Http.HttpResponseMessage, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; processResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken,System.Func{System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpMethod * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; * Guid * obj * Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion * System.Net.Http.HttpContent * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; * obj * System.Threading.CancellationToken * Func&lt;System.Net.Http.HttpResponseMessage, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="taskAgentHttpClient.SendAsync (method, additionalHeaders, locationId, routeValues, version, content, queryParameters, userState, cancellationToken, processResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="method" Type="System.Net.Http.HttpMethod" />
        <Parameter Name="additionalHeaders" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
        <Parameter Name="locationId" Type="System.Guid" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="version" Type="Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="queryParameters" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="processResponse" Type="System.Func&lt;System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="method">To be added.</param>
        <param name="additionalHeaders">To be added.</param>
        <param name="locationId">To be added.</param>
        <param name="routeValues">To be added.</param>
        <param name="version">To be added.</param>
        <param name="content">To be added.</param>
        <param name="queryParameters">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="processResponse">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMessageAsync (int poolId, long requestId, Microsoft.TeamFoundation.DistributedTask.WebApi.AgentJobRequestMessage request, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMessageAsync(int32 poolId, int64 requestId, class Microsoft.TeamFoundation.DistributedTask.WebApi.AgentJobRequestMessage request, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.SendMessageAsync(System.Int32,System.Int64,Microsoft.TeamFoundation.DistributedTask.WebApi.AgentJobRequestMessage,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.SendMessageAsync : int * int64 * Microsoft.TeamFoundation.DistributedTask.WebApi.AgentJobRequestMessage * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClient.SendMessageAsync (poolId, requestId, request, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="request" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.AgentJobRequestMessage" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="requestId">To be added.</param>
        <param name="request">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMessageAsync (int poolId, long requestId, Microsoft.TeamFoundation.DistributedTask.WebApi.JobCancelMessage cancel, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMessageAsync(int32 poolId, int64 requestId, class Microsoft.TeamFoundation.DistributedTask.WebApi.JobCancelMessage cancel, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.SendMessageAsync(System.Int32,System.Int64,Microsoft.TeamFoundation.DistributedTask.WebApi.JobCancelMessage,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.SendMessageAsync : int * int64 * Microsoft.TeamFoundation.DistributedTask.WebApi.JobCancelMessage * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClient.SendMessageAsync (poolId, requestId, cancel, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="cancel" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.JobCancelMessage" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">To be added.</param>
        <param name="requestId">To be added.</param>
        <param name="cancel">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadTaskZipAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; UploadTaskZipAsync (Guid taskId, System.IO.Stream fileStream, bool overwrite = false, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; UploadTaskZipAsync(valuetype System.Guid taskId, class System.IO.Stream fileStream, bool overwrite, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClient.UploadTaskZipAsync(System.Guid,System.IO.Stream,System.Boolean,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.UploadTaskZipAsync : Guid * System.IO.Stream * bool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="taskAgentHttpClient.UploadTaskZipAsync (taskId, fileStream, overwrite, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Guid" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="overwrite">To be added.</param>
        <param name="userState">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>