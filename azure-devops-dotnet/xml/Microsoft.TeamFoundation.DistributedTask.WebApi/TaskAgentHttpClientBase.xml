<Type Name="TaskAgentHttpClientBase" FullName="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase">
  <TypeSignature Language="C#" Value="public abstract class TaskAgentHttpClientBase : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientCompatBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TaskAgentHttpClientBase extends Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientCompatBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TaskAgentHttpClientBase&#xA;Inherits TaskAgentHttpClientCompatBase" />
  <TypeSignature Language="F#" Value="type TaskAgentHttpClientBase = class&#xA;    inherit TaskAgentHttpClientCompatBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
    <AssemblyVersion>17.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientCompatBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualStudio.Services.WebApi.ResourceArea("A85B8835-C1A1-4AAC-AE97-1C3D0BA72DBD")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase (baseUrl, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase (baseUrl, credentials, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase (baseUrl, credentials, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClientBase (Uri baseUrl, System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class System.Net.Http.HttpMessageHandler pipeline, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.#ctor(System.Uri,System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, pipeline As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase : Uri * System.Net.Http.HttpMessageHandler * bool -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase (baseUrl, pipeline, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="pipeline" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="pipeline">To be added.</param>
        <param name="disposeHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskAgentHttpClientBase (Uri baseUrl, Microsoft.VisualStudio.Services.Common.VssCredentials credentials, Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, class Microsoft.VisualStudio.Services.Common.VssCredentials credentials, class Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings settings, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.#ctor(System.Uri,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, credentials As VssCredentials, settings As VssHttpRequestSettings, ParamArray handlers As DelegatingHandler())" />
      <MemberSignature Language="F#" Value="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase : Uri * Microsoft.VisualStudio.Services.Common.VssCredentials * Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings * System.Net.Http.DelegatingHandler[] -&gt; Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase" Usage="new Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase (baseUrl, credentials, settings, handlers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="credentials" Type="Microsoft.VisualStudio.Services.Common.VssCredentials" />
        <Parameter Name="settings" Type="Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute FrameworkAlternate="azure-devops-dotnet">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="credentials">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="handlers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenResult&gt; AcquireAccessTokenAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenRequest authenticationRequest, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenResult&gt; AcquireAccessTokenAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenRequest authenticationRequest, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AcquireAccessTokenAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AcquireAccessTokenAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenResult&gt;&#xA;override this.AcquireAccessTokenAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenResult&gt;" Usage="taskAgentHttpClientBase.AcquireAccessTokenAsync (authenticationRequest, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationRequest" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.AadOauthTokenRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authenticationRequest"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; AddAgentAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; AddAgentAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&#xA;override this.AddAgentAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClientBase.AddAgentAsync (poolId, agent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agent" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agent"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentCloudAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt; AddAgentCloudAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud agentCloud, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt; AddAgentCloudAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud agentCloud, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentCloudAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentCloudAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&#xA;override this.AddAgentCloudAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;" Usage="taskAgentHttpClientBase.AddAgentCloudAsync (agentCloud, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agentCloud" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="agentCloud"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt; AddAgentPoolAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool pool, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt; AddAgentPoolAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool pool, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentPoolAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentPoolAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&#xA;override this.AddAgentPoolAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;" Usage="taskAgentHttpClientBase.AddAgentPoolAsync (pool, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pool" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pool"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentQueueAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentQueueAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.AddAgentQueueAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.AddAgentQueueAsync (queue, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queue"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, Nullable&lt;bool&gt; authorizePipelines = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, valuetype System.Nullable`1&lt;bool&gt; authorizePipelines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentQueueAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentQueueAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.AddAgentQueueAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.AddAgentQueueAsync (queue, authorizePipelines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue" />
        <Parameter Name="authorizePipelines" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queue"></param>
        <param name="authorizePipelines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentQueueAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentQueueAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.AddAgentQueueAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.AddAgentQueueAsync (project, queue, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queue" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queue"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentQueueAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentQueueAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.AddAgentQueueAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.AddAgentQueueAsync (project, queue, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queue" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queue"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, Nullable&lt;bool&gt; authorizePipelines = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, valuetype System.Nullable`1&lt;bool&gt; authorizePipelines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentQueueAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentQueueAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.AddAgentQueueAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.AddAgentQueueAsync (project, queue, authorizePipelines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queue" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue" />
        <Parameter Name="authorizePipelines" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queue"></param>
        <param name="authorizePipelines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, Nullable&lt;bool&gt; authorizePipelines = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; AddAgentQueueAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue queue, valuetype System.Nullable`1&lt;bool&gt; authorizePipelines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddAgentQueueAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddAgentQueueAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.AddAgentQueueAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.AddAgentQueueAsync (project, queue, authorizePipelines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queue" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue" />
        <Parameter Name="authorizePipelines" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queue"></param>
        <param name="authorizePipelines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; AddDeploymentGroupAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter deploymentGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; AddDeploymentGroupAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter deploymentGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentGroupAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&#xA;override this.AddDeploymentGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;" Usage="taskAgentHttpClientBase.AddDeploymentGroupAsync (project, deploymentGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroup">Deployment group to create.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; AddDeploymentGroupAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter deploymentGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; AddDeploymentGroupAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter deploymentGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentGroupAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&#xA;override this.AddDeploymentGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;" Usage="taskAgentHttpClientBase.AddDeploymentGroupAsync (project, deploymentGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupCreateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroup">Deployment group to create.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentMachineAsync (Guid project, int deploymentGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentMachineAsync(valuetype System.Guid project, int32 deploymentGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentMachineAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentMachineAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.AddDeploymentMachineAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.AddDeploymentMachineAsync (project, deploymentGroupId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machine"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentMachineAsync (string project, int deploymentGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentMachineAsync(string project, int32 deploymentGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentMachineAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentMachineAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.AddDeploymentMachineAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.AddDeploymentMachineAsync (project, deploymentGroupId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machine"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; AddDeploymentMachineGroupAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; AddDeploymentMachineGroupAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentMachineGroupAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentMachineGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&#xA;override this.AddDeploymentMachineGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;" Usage="taskAgentHttpClientBase.AddDeploymentMachineGroupAsync (project, machineGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; AddDeploymentMachineGroupAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; AddDeploymentMachineGroupAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentMachineGroupAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentMachineGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&#xA;override this.AddDeploymentMachineGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;" Usage="taskAgentHttpClientBase.AddDeploymentMachineGroupAsync (project, machineGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentTargetAsync (Guid project, int deploymentGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentTargetAsync(valuetype System.Guid project, int32 deploymentGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentTargetAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentTargetAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.AddDeploymentTargetAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.AddDeploymentTargetAsync (project, deploymentGroupId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group to which the deployment target is registered.</param>
        <param name="machine">Deployment target to register.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Register a deployment target to a deployment group. Generally this is called by agent configuration tool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentTargetAsync (string project, int deploymentGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; AddDeploymentTargetAsync(string project, int32 deploymentGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddDeploymentTargetAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddDeploymentTargetAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.AddDeploymentTargetAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.AddDeploymentTargetAsync (project, deploymentGroupId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group to which the deployment target is registered.</param>
        <param name="machine">Deployment target to register.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Register a deployment target to a deployment group. Generally this is called by agent configuration tool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; AddEnvironmentAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter environmentCreateParameter, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; AddEnvironmentAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter environmentCreateParameter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddEnvironmentAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddEnvironmentAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&#xA;override this.AddEnvironmentAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;" Usage="taskAgentHttpClientBase.AddEnvironmentAsync (project, environmentCreateParameter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentCreateParameter" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentCreateParameter">Environment to create.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create an environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; AddEnvironmentAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter environmentCreateParameter, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; AddEnvironmentAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter environmentCreateParameter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddEnvironmentAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddEnvironmentAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&#xA;override this.AddEnvironmentAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;" Usage="taskAgentHttpClientBase.AddEnvironmentAsync (project, environmentCreateParameter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentCreateParameter" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentCreateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentCreateParameter">Environment to create.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create an environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpointExecutionRecordsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; AddServiceEndpointExecutionRecordsAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput input, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; AddServiceEndpointExecutionRecordsAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput input, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddServiceEndpointExecutionRecordsAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddServiceEndpointExecutionRecordsAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;&#xA;override this.AddServiceEndpointExecutionRecordsAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;" Usage="taskAgentHttpClientBase.AddServiceEndpointExecutionRecordsAsync (project, input, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="input" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="input"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpointExecutionRecordsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; AddServiceEndpointExecutionRecordsAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput input, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; AddServiceEndpointExecutionRecordsAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput input, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddServiceEndpointExecutionRecordsAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddServiceEndpointExecutionRecordsAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;&#xA;override this.AddServiceEndpointExecutionRecordsAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;" Usage="taskAgentHttpClientBase.AddServiceEndpointExecutionRecordsAsync (project, input, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="input" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecordsInput" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="input"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; AddServiceGroupAsync (Guid project, int environmentId, Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters createParameters, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; AddServiceGroupAsync(valuetype System.Guid project, int32 environmentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters createParameters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddServiceGroupAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddServiceGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;&#xA;override this.AddServiceGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;" Usage="taskAgentHttpClientBase.AddServiceGroupAsync (project, environmentId, createParameters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="createParameters" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId"></param>
        <param name="createParameters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; AddServiceGroupAsync (string project, int environmentId, Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters createParameters, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; AddServiceGroupAsync(string project, int32 environmentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters createParameters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddServiceGroupAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddServiceGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;&#xA;override this.AddServiceGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;" Usage="taskAgentHttpClientBase.AddServiceGroupAsync (project, environmentId, createParameters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="createParameters" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroupCreateParameters" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId"></param>
        <param name="createParameters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; AddTaskGroupAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; AddTaskGroupAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddTaskGroupAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddTaskGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.AddTaskGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.AddTaskGroupAsync (project, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroup">Task group object to create.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; AddTaskGroupAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; AddTaskGroupAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddTaskGroupAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddTaskGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.AddTaskGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.AddTaskGroupAsync (project, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupCreateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroup">Task group object to create.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Create a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; AddVariableGroupAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; AddVariableGroupAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddVariableGroupAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddVariableGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&#xA;override this.AddVariableGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;" Usage="taskAgentHttpClientBase.AddVariableGroupAsync (project, group, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="group" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="group">Variable group to add.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Add a variable group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; AddVariableGroupAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; AddVariableGroupAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.AddVariableGroupAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AddVariableGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&#xA;override this.AddVariableGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;" Usage="taskAgentHttpClientBase.AddVariableGroupAsync (project, group, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="group" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="group">Variable group to add.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Add a variable group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAadOAuthRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; CreateAadOAuthRequestAsync (string tenantId, string redirectUri, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; promptOption = null, string completeCallbackPayload = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; CreateAadOAuthRequestAsync(string tenantId, string redirectUri, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; promptOption, string completeCallbackPayload, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateAadOAuthRequestAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption},System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAadOAuthRequestAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.CreateAadOAuthRequestAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.CreateAadOAuthRequestAsync (tenantId, redirectUri, promptOption, completeCallbackPayload, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="redirectUri" Type="System.String" />
        <Parameter Name="promptOption" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt;" />
        <Parameter Name="completeCallbackPayload" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantId"></param>
        <param name="redirectUri"></param>
        <param name="promptOption"></param>
        <param name="completeCallbackPayload"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAadOAuthRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; CreateAadOAuthRequestAsync (string tenantId, string redirectUri, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; promptOption = null, string completeCallbackPayload = null, Nullable&lt;bool&gt; completeCallbackByAuthCode = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; CreateAadOAuthRequestAsync(string tenantId, string redirectUri, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; promptOption, string completeCallbackPayload, valuetype System.Nullable`1&lt;bool&gt; completeCallbackByAuthCode, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateAadOAuthRequestAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAadOAuthRequestAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.CreateAadOAuthRequestAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt; * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.CreateAadOAuthRequestAsync (tenantId, redirectUri, promptOption, completeCallbackPayload, completeCallbackByAuthCode, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="redirectUri" Type="System.String" />
        <Parameter Name="promptOption" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AadLoginPromptOption&gt;" />
        <Parameter Name="completeCallbackPayload" Type="System.String" />
        <Parameter Name="completeCallbackByAuthCode" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantId"></param>
        <param name="redirectUri"></param>
        <param name="promptOption"></param>
        <param name="completeCallbackPayload"></param>
        <param name="completeCallbackByAuthCode"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAgentPoolMaintenanceDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt; CreateAgentPoolMaintenanceDefinitionAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition definition, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt; CreateAgentPoolMaintenanceDefinitionAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition definition, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateAgentPoolMaintenanceDefinitionAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAgentPoolMaintenanceDefinitionAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&#xA;override this.CreateAgentPoolMaintenanceDefinitionAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;" Usage="taskAgentHttpClientBase.CreateAgentPoolMaintenanceDefinitionAsync (poolId, definition, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="definition"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAgentSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession&gt; CreateAgentSessionAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession session, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession&gt; CreateAgentSessionAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession session, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateAgentSessionAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAgentSessionAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession&gt;&#xA;override this.CreateAgentSessionAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession&gt;" Usage="taskAgentHttpClientBase.CreateAgentSessionAsync (poolId, session, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="session" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentSession" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="session"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOAuthConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; CreateOAuthConfigurationAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams configurationParams, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; CreateOAuthConfigurationAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams configurationParams, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateOAuthConfigurationAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateOAuthConfigurationAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&#xA;override this.CreateOAuthConfigurationAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;" Usage="taskAgentHttpClientBase.CreateOAuthConfigurationAsync (configurationParams, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationParams" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationParams"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; CreateServiceEndpointAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; CreateServiceEndpointAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateServiceEndpointAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceEndpointAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&#xA;override this.CreateServiceEndpointAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" Usage="taskAgentHttpClientBase.CreateServiceEndpointAsync (project, endpoint, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpoint" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpoint"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; CreateServiceEndpointAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; CreateServiceEndpointAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateServiceEndpointAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceEndpointAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&#xA;override this.CreateServiceEndpointAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" Usage="taskAgentHttpClientBase.CreateServiceEndpointAsync (project, endpoint, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpoint" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpoint"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTeamProjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateTeamProjectAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateTeamProjectAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateTeamProjectAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateTeamProjectAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateTeamProjectAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.CreateTeamProjectAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTeamProjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateTeamProjectAsync (Guid project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateTeamProjectAsync(valuetype System.Guid project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateTeamProjectAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateTeamProjectAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateTeamProjectAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.CreateTeamProjectAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTeamProjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateTeamProjectAsync (string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateTeamProjectAsync(string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.CreateTeamProjectAsync(System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateTeamProjectAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateTeamProjectAsync : string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.CreateTeamProjectAsync (project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentAsync (int poolId, int agentId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentAsync(int32 poolId, int32 agentId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentAsync (poolId, agentId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentCloudAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt; DeleteAgentCloudAsync (int agentCloudId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt; DeleteAgentCloudAsync(int32 agentCloudId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentCloudAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentCloudAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&#xA;override this.DeleteAgentCloudAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;" Usage="taskAgentHttpClientBase.DeleteAgentCloudAsync (agentCloudId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agentCloudId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="agentCloudId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentPoolAsync (int poolId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentPoolAsync(int32 poolId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentPoolAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentPoolAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentPoolAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentPoolAsync (poolId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentPoolMaintenanceDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentPoolMaintenanceDefinitionAsync (int poolId, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentPoolMaintenanceDefinitionAsync(int32 poolId, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentPoolMaintenanceDefinitionAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentPoolMaintenanceDefinitionAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentPoolMaintenanceDefinitionAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentPoolMaintenanceDefinitionAsync (poolId, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentPoolMaintenanceJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentPoolMaintenanceJobAsync (int poolId, int jobId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentPoolMaintenanceJobAsync(int32 poolId, int32 jobId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentPoolMaintenanceJobAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentPoolMaintenanceJobAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentPoolMaintenanceJobAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentPoolMaintenanceJobAsync (poolId, jobId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="jobId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentQueueAsync (int queueId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentQueueAsync(int32 queueId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentQueueAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentQueueAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentQueueAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentQueueAsync (queueId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentQueueAsync (Guid project, int queueId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentQueueAsync(valuetype System.Guid project, int32 queueId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentQueueAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentQueueAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentQueueAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentQueueAsync (project, queueId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queueId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentQueueAsync (string project, int queueId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentQueueAsync(string project, int32 queueId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentQueueAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentQueueAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentQueueAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentQueueAsync (project, queueId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queueId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentRequestAsync (int poolId, long requestId, Guid lockToken, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult&gt; result = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentRequestAsync(int32 poolId, int64 requestId, valuetype System.Guid lockToken, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult&gt; result, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentRequestAsync(System.Int32,System.Int64,System.Guid,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentRequestAsync : int * int64 * Guid * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentRequestAsync : int * int64 * Guid * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentRequestAsync (poolId, requestId, lockToken, result, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="lockToken" Type="System.Guid" />
        <Parameter Name="result" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="requestId"></param>
        <param name="lockToken"></param>
        <param name="result"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAgentSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAgentSessionAsync (int poolId, Guid sessionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAgentSessionAsync(int32 poolId, valuetype System.Guid sessionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteAgentSessionAsync(System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAgentSessionAsync : int * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAgentSessionAsync : int * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteAgentSessionAsync (poolId, sessionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="sessionId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="sessionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentGroupAsync (Guid project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentGroupAsync(valuetype System.Guid project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentGroupAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentGroupAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group to be deleted.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentGroupAsync (string project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentGroupAsync(string project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentGroupAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentGroupAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group to be deleted.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentMachineAsync (Guid project, int deploymentGroupId, int machineId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentMachineAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 machineId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentMachineAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentMachineAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentMachineAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentMachineAsync (project, deploymentGroupId, machineId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentMachineAsync (string project, int deploymentGroupId, int machineId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentMachineAsync(string project, int32 deploymentGroupId, int32 machineId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentMachineAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentMachineAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentMachineAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentMachineAsync (project, deploymentGroupId, machineId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentMachineGroupAsync (Guid project, int machineGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentMachineGroupAsync(valuetype System.Guid project, int32 machineGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentMachineGroupAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentMachineGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentMachineGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentMachineGroupAsync (project, machineGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentMachineGroupAsync (string project, int machineGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentMachineGroupAsync(string project, int32 machineGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentMachineGroupAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentMachineGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentMachineGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentMachineGroupAsync (project, machineGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentTargetAsync (Guid project, int deploymentGroupId, int targetId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentTargetAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 targetId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentTargetAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentTargetAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentTargetAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentTargetAsync (project, deploymentGroupId, targetId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment target is deleted.</param>
        <param name="targetId">ID of the deployment target to delete.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a deployment target in a deployment group. This deletes the agent from associated deployment pool too.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDeploymentTargetAsync (string project, int deploymentGroupId, int targetId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDeploymentTargetAsync(string project, int32 deploymentGroupId, int32 targetId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteDeploymentTargetAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDeploymentTargetAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDeploymentTargetAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteDeploymentTargetAsync (project, deploymentGroupId, targetId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment target is deleted.</param>
        <param name="targetId">ID of the deployment target to delete.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a deployment target in a deployment group. This deletes the agent from associated deployment pool too.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteEnvironmentAsync (Guid project, int environmentId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteEnvironmentAsync(valuetype System.Guid project, int32 environmentId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteEnvironmentAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteEnvironmentAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteEnvironmentAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteEnvironmentAsync (project, environmentId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId">ID of the environment.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete the specified environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteEnvironmentAsync (string project, int environmentId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteEnvironmentAsync(string project, int32 environmentId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteEnvironmentAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteEnvironmentAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteEnvironmentAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteEnvironmentAsync (project, environmentId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId">ID of the environment.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete the specified environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteMessageAsync (int poolId, long messageId, Guid sessionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessageAsync(int32 poolId, int64 messageId, valuetype System.Guid sessionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteMessageAsync(System.Int32,System.Int64,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessageAsync : int * int64 * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteMessageAsync : int * int64 * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteMessageAsync (poolId, messageId, sessionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="messageId" Type="System.Int64" />
        <Parameter Name="sessionId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="messageId"></param>
        <param name="sessionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteOAuthConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; DeleteOAuthConfigurationAsync (int configurationId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; DeleteOAuthConfigurationAsync(int32 configurationId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteOAuthConfigurationAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteOAuthConfigurationAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&#xA;override this.DeleteOAuthConfigurationAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;" Usage="taskAgentHttpClientBase.DeleteOAuthConfigurationAsync (configurationId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteSecureFileAsync (Guid project, Guid secureFileId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteSecureFileAsync(valuetype System.Guid project, valuetype System.Guid secureFileId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteSecureFileAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSecureFileAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteSecureFileAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteSecureFileAsync (project, secureFileId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteSecureFileAsync (string project, Guid secureFileId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteSecureFileAsync(string project, valuetype System.Guid secureFileId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteSecureFileAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSecureFileAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteSecureFileAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteSecureFileAsync (project, secureFileId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteServiceEndpointAsync (Guid project, Guid endpointId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteServiceEndpointAsync(valuetype System.Guid project, valuetype System.Guid endpointId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteServiceEndpointAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteServiceEndpointAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteServiceEndpointAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteServiceEndpointAsync (project, endpointId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpointId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteServiceEndpointAsync (string project, Guid endpointId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteServiceEndpointAsync(string project, valuetype System.Guid endpointId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteServiceEndpointAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteServiceEndpointAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteServiceEndpointAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteServiceEndpointAsync (project, endpointId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpointId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteServiceGroupAsync (Guid project, int environmentId, int serviceGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteServiceGroupAsync(valuetype System.Guid project, int32 environmentId, int32 serviceGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteServiceGroupAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteServiceGroupAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteServiceGroupAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteServiceGroupAsync (project, environmentId, serviceGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="serviceGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId"></param>
        <param name="serviceGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteServiceGroupAsync (string project, int environmentId, int serviceGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteServiceGroupAsync(string project, int32 environmentId, int32 serviceGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteServiceGroupAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteServiceGroupAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteServiceGroupAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteServiceGroupAsync (project, environmentId, serviceGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="serviceGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId"></param>
        <param name="serviceGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTaskDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTaskDefinitionAsync (Guid taskId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTaskDefinitionAsync(valuetype System.Guid taskId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteTaskDefinitionAsync(System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTaskDefinitionAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteTaskDefinitionAsync : Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteTaskDefinitionAsync (taskId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTaskGroupAsync (Guid project, Guid taskGroupId, string comment = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTaskGroupAsync(valuetype System.Guid project, valuetype System.Guid taskGroupId, string comment, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteTaskGroupAsync(System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.DeleteTaskGroupAsync : Guid * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteTaskGroupAsync (project, taskGroupId, comment, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="comment" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId">Id of the task group to be deleted.</param>
        <param name="comment">Comments to delete.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTaskGroupAsync (string project, Guid taskGroupId, string comment = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTaskGroupAsync(string project, valuetype System.Guid taskGroupId, string comment, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteTaskGroupAsync(System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.DeleteTaskGroupAsync : string * Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteTaskGroupAsync (project, taskGroupId, comment, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="comment" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId">Id of the task group to be deleted.</param>
        <param name="comment">Comments to delete.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteVariableGroupAsync (Guid project, int groupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteVariableGroupAsync(valuetype System.Guid project, int32 groupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteVariableGroupAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteVariableGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteVariableGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteVariableGroupAsync (project, groupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="groupId">Id of the variable group.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a variable group
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteVariableGroupAsync (string project, int groupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteVariableGroupAsync(string project, int32 groupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DeleteVariableGroupAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteVariableGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteVariableGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.DeleteVariableGroupAsync (project, groupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="groupId">Id of the variable group.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Delete a variable group
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; DownloadSecureFileAsync (Guid project, Guid secureFileId, string ticket, Nullable&lt;bool&gt; download = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; DownloadSecureFileAsync(valuetype System.Guid project, valuetype System.Guid secureFileId, string ticket, valuetype System.Nullable`1&lt;bool&gt; download, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DownloadSecureFileAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DownloadSecureFileAsync : Guid * Guid * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.DownloadSecureFileAsync : Guid * Guid * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.DownloadSecureFileAsync (project, secureFileId, ticket, download, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="ticket" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="ticket">A valid download ticket</param>
        <param name="download">If download is true, the file is sent as attachement in the response body. If download is false, the response body contains the file stream.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Download a secure file by Id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; DownloadSecureFileAsync (string project, Guid secureFileId, string ticket, Nullable&lt;bool&gt; download = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; DownloadSecureFileAsync(string project, valuetype System.Guid secureFileId, string ticket, valuetype System.Nullable`1&lt;bool&gt; download, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.DownloadSecureFileAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DownloadSecureFileAsync : string * Guid * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.DownloadSecureFileAsync : string * Guid * string * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.DownloadSecureFileAsync (project, secureFileId, ticket, download, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="ticket" Type="System.String" />
        <Parameter Name="download" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="ticket">A valid download ticket</param>
        <param name="download">If download is true, the file is sent as attachement in the response body. If download is false, the response body contains the file stream.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Download a secure file by Id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteServiceEndpointRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt; ExecuteServiceEndpointRequestAsync (Guid project, string endpointId, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest serviceEndpointRequest, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt; ExecuteServiceEndpointRequestAsync(valuetype System.Guid project, string endpointId, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest serviceEndpointRequest, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ExecuteServiceEndpointRequestAsync(System.Guid,System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteServiceEndpointRequestAsync : Guid * string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt;&#xA;override this.ExecuteServiceEndpointRequestAsync : Guid * string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt;" Usage="taskAgentHttpClientBase.ExecuteServiceEndpointRequestAsync (project, endpointId, serviceEndpointRequest, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="serviceEndpointRequest" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpointId"></param>
        <param name="serviceEndpointRequest"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteServiceEndpointRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt; ExecuteServiceEndpointRequestAsync (string project, string endpointId, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest serviceEndpointRequest, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt; ExecuteServiceEndpointRequestAsync(string project, string endpointId, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest serviceEndpointRequest, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ExecuteServiceEndpointRequestAsync(System.String,System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteServiceEndpointRequestAsync : string * string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt;&#xA;override this.ExecuteServiceEndpointRequestAsync : string * string * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt;" Usage="taskAgentHttpClientBase.ExecuteServiceEndpointRequestAsync (project, endpointId, serviceEndpointRequest, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequestResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="serviceEndpointRequest" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpointId"></param>
        <param name="serviceEndpointRequest"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDeploymentGroupAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GenerateDeploymentGroupAccessTokenAsync (Guid project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GenerateDeploymentGroupAccessTokenAsync(valuetype System.Guid project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GenerateDeploymentGroupAccessTokenAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GenerateDeploymentGroupAccessTokenAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GenerateDeploymentGroupAccessTokenAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.GenerateDeploymentGroupAccessTokenAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment targets are managed.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] GET a PAT token for managing (configuring, removing, tagging) deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDeploymentGroupAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GenerateDeploymentGroupAccessTokenAsync (string project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GenerateDeploymentGroupAccessTokenAsync(string project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GenerateDeploymentGroupAccessTokenAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GenerateDeploymentGroupAccessTokenAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GenerateDeploymentGroupAccessTokenAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.GenerateDeploymentGroupAccessTokenAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment targets are managed.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] GET a PAT token for managing (configuring, removing, tagging) deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDeploymentMachineGroupAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GenerateDeploymentMachineGroupAccessTokenAsync (Guid project, int machineGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GenerateDeploymentMachineGroupAccessTokenAsync(valuetype System.Guid project, int32 machineGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GenerateDeploymentMachineGroupAccessTokenAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GenerateDeploymentMachineGroupAccessTokenAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GenerateDeploymentMachineGroupAccessTokenAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.GenerateDeploymentMachineGroupAccessTokenAsync (project, machineGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDeploymentMachineGroupAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GenerateDeploymentMachineGroupAccessTokenAsync (string project, int machineGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GenerateDeploymentMachineGroupAccessTokenAsync(string project, int32 machineGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GenerateDeploymentMachineGroupAccessTokenAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GenerateDeploymentMachineGroupAccessTokenAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GenerateDeploymentMachineGroupAccessTokenAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.GenerateDeploymentMachineGroupAccessTokenAsync (project, machineGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDeploymentPoolAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GenerateDeploymentPoolAccessTokenAsync (int poolId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GenerateDeploymentPoolAccessTokenAsync(int32 poolId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GenerateDeploymentPoolAccessTokenAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GenerateDeploymentPoolAccessTokenAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GenerateDeploymentPoolAccessTokenAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.GenerateDeploymentPoolAccessTokenAsync (poolId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId">ID of the deployment pool in which deployment agents are managed.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] GET a PAT token for managing (configuring, removing, tagging) deployment agents in a deployment pool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; GetAgentAsync (int poolId, int agentId, Nullable&lt;bool&gt; includeCapabilities = null, Nullable&lt;bool&gt; includeAssignedRequest = null, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; GetAgentAsync(int32 poolId, int32 agentId, valuetype System.Nullable`1&lt;bool&gt; includeCapabilities, valuetype System.Nullable`1&lt;bool&gt; includeAssignedRequest, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentAsync(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentAsync : int * int * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&#xA;override this.GetAgentAsync : int * int * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClientBase.GetAgentAsync (poolId, agentId, includeCapabilities, includeAssignedRequest, propertyFilters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="includeCapabilities" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeAssignedRequest" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="includeCapabilities"></param>
        <param name="includeAssignedRequest"></param>
        <param name="propertyFilters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentCloudAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt; GetAgentCloudAsync (int agentCloudId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt; GetAgentCloudAsync(int32 agentCloudId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentCloudAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentCloudAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&#xA;override this.GetAgentCloudAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;" Usage="taskAgentHttpClientBase.GetAgentCloudAsync (agentCloudId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agentCloudId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="agentCloudId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentCloudRequestsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudRequest&gt;&gt; GetAgentCloudRequestsAsync (int agentCloudId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudRequest&gt;&gt; GetAgentCloudRequestsAsync(int32 agentCloudId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentCloudRequestsAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentCloudRequestsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudRequest&gt;&gt;&#xA;override this.GetAgentCloudRequestsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentCloudRequestsAsync (agentCloudId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agentCloudId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="agentCloudId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentCloudsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&gt; GetAgentCloudsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&gt; GetAgentCloudsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentCloudsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentCloudsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&gt;&#xA;override this.GetAgentCloudsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentCloudsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloud&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentCloudTypesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudType&gt;&gt; GetAgentCloudTypesAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudType&gt;&gt; GetAgentCloudTypesAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentCloudTypesAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentCloudTypesAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudType&gt;&gt;&#xA;override this.GetAgentCloudTypesAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudType&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentCloudTypesAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentCloudType&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent cloud types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt; GetAgentPoolAsync (int poolId, System.Collections.Generic.IEnumerable&lt;string&gt; properties = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt; GetAgentPoolAsync(int32 poolId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; properties, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolAsync(System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolAsync : int * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&#xA;override this.GetAgentPoolAsync : int * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolAsync (poolId, properties, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="properties"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolMaintenanceDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt; GetAgentPoolMaintenanceDefinitionAsync (int poolId, int definitionId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt; GetAgentPoolMaintenanceDefinitionAsync(int32 poolId, int32 definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolMaintenanceDefinitionAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolMaintenanceDefinitionAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&#xA;override this.GetAgentPoolMaintenanceDefinitionAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolMaintenanceDefinitionAsync (poolId, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolMaintenanceDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&gt; GetAgentPoolMaintenanceDefinitionsAsync (int poolId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&gt; GetAgentPoolMaintenanceDefinitionsAsync(int32 poolId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolMaintenanceDefinitionsAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolMaintenanceDefinitionsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&gt;&#xA;override this.GetAgentPoolMaintenanceDefinitionsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolMaintenanceDefinitionsAsync (poolId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolMaintenanceJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt; GetAgentPoolMaintenanceJobAsync (int poolId, int jobId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt; GetAgentPoolMaintenanceJobAsync(int32 poolId, int32 jobId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolMaintenanceJobAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolMaintenanceJobAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&#xA;override this.GetAgentPoolMaintenanceJobAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolMaintenanceJobAsync (poolId, jobId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="jobId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolMaintenanceJobLogsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetAgentPoolMaintenanceJobLogsAsync (int poolId, int jobId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetAgentPoolMaintenanceJobLogsAsync(int32 poolId, int32 jobId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolMaintenanceJobLogsAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolMaintenanceJobLogsAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetAgentPoolMaintenanceJobLogsAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolMaintenanceJobLogsAsync (poolId, jobId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="jobId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolMaintenanceJobsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&gt; GetAgentPoolMaintenanceJobsAsync (int poolId, Nullable&lt;int&gt; definitionId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&gt; GetAgentPoolMaintenanceJobsAsync(int32 poolId, valuetype System.Nullable`1&lt;int32&gt; definitionId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolMaintenanceJobsAsync(System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolMaintenanceJobsAsync : int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&gt;&#xA;override this.GetAgentPoolMaintenanceJobsAsync : int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolMaintenanceJobsAsync (poolId, definitionId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="definitionId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="definitionId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetAgentPoolMetadataAsync (int poolId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetAgentPoolMetadataAsync(int32 poolId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolMetadataAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolMetadataAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetAgentPoolMetadataAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolMetadataAsync (poolId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&gt; GetAgentPoolsAsync (string poolName = null, System.Collections.Generic.IEnumerable&lt;string&gt; properties = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType&gt; poolType = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&gt; GetAgentPoolsAsync(string poolName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; properties, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType&gt; poolType, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentPoolsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolsAsync : string * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&gt;&#xA;override this.GetAgentPoolsAsync : string * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentPoolsAsync (poolName, properties, poolType, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="poolType" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolName"></param>
        <param name="properties"></param>
        <param name="poolType"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; GetAgentQueueAsync (int queueId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; GetAgentQueueAsync(int32 queueId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueueAsync(System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueueAsync : int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.GetAgentQueueAsync : int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.GetAgentQueueAsync (queueId, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; GetAgentQueueAsync (Guid project, int queueId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; GetAgentQueueAsync(valuetype System.Guid project, int32 queueId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueueAsync(System.Guid,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueueAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.GetAgentQueueAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.GetAgentQueueAsync (project, queueId, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queueId"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; GetAgentQueueAsync (string project, int queueId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt; GetAgentQueueAsync(string project, int32 queueId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueueAsync(System.String,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueueAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&#xA;override this.GetAgentQueueAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;" Usage="taskAgentHttpClientBase.GetAgentQueueAsync (project, queueId, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queueId"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesAsync (string queueName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesAsync(string queueName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesAsync(System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesAsync : string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesAsync : string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesAsync (queueName, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueName"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesAsync (Guid project, string queueName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesAsync(valuetype System.Guid project, string queueName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesAsync (project, queueName, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queueName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queueName"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesAsync (string project, string queueName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesAsync(string project, string queueName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesAsync (project, queueName, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queueName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queueName"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByIdsAsync (System.Collections.Generic.IEnumerable&lt;int&gt; queueIds, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByIdsAsync(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; queueIds, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesByIdsAsync(System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesByIdsAsync : seq&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesByIdsAsync : seq&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesByIdsAsync (queueIds, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueIds"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByIdsAsync (Guid project, System.Collections.Generic.IEnumerable&lt;int&gt; queueIds, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByIdsAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; queueIds, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesByIdsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesByIdsAsync : Guid * seq&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesByIdsAsync : Guid * seq&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesByIdsAsync (project, queueIds, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queueIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queueIds"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByIdsAsync (string project, System.Collections.Generic.IEnumerable&lt;int&gt; queueIds, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByIdsAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; queueIds, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesByIdsAsync(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesByIdsAsync : string * seq&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesByIdsAsync : string * seq&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesByIdsAsync (project, queueIds, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queueIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queueIds"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByNamesAsync (System.Collections.Generic.IEnumerable&lt;string&gt; queueNames, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByNamesAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; queueNames, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesByNamesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesByNamesAsync : seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesByNamesAsync : seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesByNamesAsync (queueNames, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueNames"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByNamesAsync (Guid project, System.Collections.Generic.IEnumerable&lt;string&gt; queueNames, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByNamesAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;string&gt; queueNames, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesByNamesAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesByNamesAsync : Guid * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesByNamesAsync : Guid * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesByNamesAsync (project, queueNames, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="queueNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="queueNames"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentQueuesByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByNamesAsync (string project, System.Collections.Generic.IEnumerable&lt;string&gt; queueNames, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt; GetAgentQueuesByNamesAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;string&gt; queueNames, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentQueuesByNamesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentQueuesByNamesAsync : string * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;&#xA;override this.GetAgentQueuesByNamesAsync : string * seq&lt;string&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentQueuesByNamesAsync (project, queueNames, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="queueNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentQueueActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="queueNames"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; GetAgentRequestAsync (int poolId, long requestId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; GetAgentRequestAsync(int32 poolId, int64 requestId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestAsync(System.Int32,System.Int64,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestAsync : int * int64 * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&#xA;override this.GetAgentRequestAsync : int * int64 * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestAsync (poolId, requestId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="requestId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForAgentAsync (int poolId, int agentId, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForAgentAsync(int32 poolId, int32 agentId, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForAgentAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForAgentAsync : int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForAgentAsync : int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForAgentAsync (poolId, agentId, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="completedRequestCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForAgentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForAgentsAsync (int poolId, System.Collections.Generic.IEnumerable&lt;int&gt; agentIds = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForAgentsAsync(int32 poolId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; agentIds, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForAgentsAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForAgentsAsync : int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForAgentsAsync : int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForAgentsAsync (poolId, agentIds, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentIds"></param>
        <param name="completedRequestCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachineAsync (Guid project, int deploymentGroupId, int machineId, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachineAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 machineId, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentMachineAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentMachineAsync : Guid * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentMachineAsync : Guid * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentMachineAsync (project, deploymentGroupId, machineId, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="completedRequestCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachineAsync (string project, int deploymentGroupId, int machineId, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachineAsync(string project, int32 deploymentGroupId, int32 machineId, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentMachineAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentMachineAsync : string * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentMachineAsync : string * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentMachineAsync (project, deploymentGroupId, machineId, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="completedRequestCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachinesAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;int&gt; machineIds = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachinesAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; machineIds, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentMachinesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentMachinesAsync : Guid * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentMachinesAsync : Guid * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentMachinesAsync (project, deploymentGroupId, machineIds, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machineIds"></param>
        <param name="completedRequestCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachinesAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;int&gt; machineIds = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentMachinesAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; machineIds, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentMachinesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentMachinesAsync : string * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentMachinesAsync : string * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentMachinesAsync (project, deploymentGroupId, machineIds, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machineIds"></param>
        <param name="completedRequestCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetAsync (Guid project, int deploymentGroupId, int targetId, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 targetId, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentTargetAsync : Guid * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentTargetAsync : Guid * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetAsync (project, deploymentGroupId, targetId, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group to which the target belongs.</param>
        <param name="targetId">ID of the deployment target.</param>
        <param name="completedRequestCount">Maximum number of completed requests to return. Default is **50**</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent requests for a deployment target.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetAsync (string project, int deploymentGroupId, int targetId, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetAsync(string project, int32 deploymentGroupId, int32 targetId, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentTargetAsync : string * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentTargetAsync : string * int * int * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetAsync (project, deploymentGroupId, targetId, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group to which the target belongs.</param>
        <param name="targetId">ID of the deployment target.</param>
        <param name="completedRequestCount">Maximum number of completed requests to return. Default is **50**</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent requests for a deployment target.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;int&gt; targetIds = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; targetIds, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentTargetsAsync : Guid * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentTargetsAsync : Guid * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync (project, deploymentGroupId, targetIds, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group to which the targets belong.</param>
        <param name="targetIds">Comma separated list of IDs of the deployment targets.</param>
        <param name="completedRequestCount">Maximum number of completed requests to return for each target. Default is **50**</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent requests for a list deployment targets.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;int&gt; targetIds = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; targetIds, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentTargetsAsync : string * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentTargetsAsync : string * int * seq&lt;int&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync (project, deploymentGroupId, targetIds, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group to which the targets belong.</param>
        <param name="targetIds">Comma separated list of IDs of the deployment targets.</param>
        <param name="completedRequestCount">Maximum number of completed requests to return for each target. Default is **50**</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent requests for a list deployment targets.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;int&gt; targetIds = null, Nullable&lt;int&gt; ownerId = null, Nullable&lt;DateTime&gt; completedOn = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; targetIds, valuetype System.Nullable`1&lt;int32&gt; ownerId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; completedOn, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentTargetsAsync : Guid * int * seq&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentTargetsAsync : Guid * int * seq&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync (project, deploymentGroupId, targetIds, ownerId, completedOn, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="ownerId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="completedOn" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group to which the targets belong.</param>
        <param name="targetIds">Comma separated list of IDs of the deployment targets.</param>
        <param name="ownerId">Id of owner of agent job request.</param>
        <param name="completedOn">Datetime to return request after this time.</param>
        <param name="completedRequestCount">Maximum number of completed requests to return for each target. Default is **50**</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent requests for a list deployment targets.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;int&gt; targetIds = null, Nullable&lt;int&gt; ownerId = null, Nullable&lt;DateTime&gt; completedOn = null, Nullable&lt;int&gt; completedRequestCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForDeploymentTargetsAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; targetIds, valuetype System.Nullable`1&lt;int32&gt; ownerId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; completedOn, valuetype System.Nullable`1&lt;int32&gt; completedRequestCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForDeploymentTargetsAsync : string * int * seq&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForDeploymentTargetsAsync : string * int * seq&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForDeploymentTargetsAsync (project, deploymentGroupId, targetIds, ownerId, completedOn, completedRequestCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="ownerId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="completedOn" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="completedRequestCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group to which the targets belong.</param>
        <param name="targetIds">Comma separated list of IDs of the deployment targets.</param>
        <param name="ownerId">Id of owner of agent job request.</param>
        <param name="completedOn">Datetime to return request after this time.</param>
        <param name="completedRequestCount">Maximum number of completed requests to return for each target. Default is **50**</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get agent requests for a list deployment targets.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRequestsForPlanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForPlanAsync (int poolId, Guid planId, Nullable&lt;Guid&gt; jobId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt; GetAgentRequestsForPlanAsync(int32 poolId, valuetype System.Guid planId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; jobId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentRequestsForPlanAsync(System.Int32,System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRequestsForPlanAsync : int * Guid * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;&#xA;override this.GetAgentRequestsForPlanAsync : int * Guid * Nullable&lt;Guid&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentRequestsForPlanAsync (poolId, planId, jobId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="planId" Type="System.Guid" />
        <Parameter Name="jobId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="planId"></param>
        <param name="jobId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt; GetAgentsAsync (int poolId, string agentName = null, Nullable&lt;bool&gt; includeCapabilities = null, Nullable&lt;bool&gt; includeAssignedRequest = null, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = null, System.Collections.Generic.IEnumerable&lt;string&gt; demands = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt; GetAgentsAsync(int32 poolId, string agentName, valuetype System.Nullable`1&lt;bool&gt; includeCapabilities, valuetype System.Nullable`1&lt;bool&gt; includeAssignedRequest, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; demands, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAgentsAsync(System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentsAsync : int * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt;&#xA;override this.GetAgentsAsync : int * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt;" Usage="taskAgentHttpClientBase.GetAgentsAsync (poolId, agentName, includeCapabilities, includeAssignedRequest, propertyFilters, demands, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentName" Type="System.String" />
        <Parameter Name="includeCapabilities" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeAssignedRequest" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="demands" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentName"></param>
        <param name="includeCapabilities"></param>
        <param name="includeAssignedRequest"></param>
        <param name="propertyFilters"></param>
        <param name="demands"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureManagementGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureManagementGroupQueryResult&gt; GetAzureManagementGroupsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.AzureManagementGroupQueryResult&gt; GetAzureManagementGroupsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAzureManagementGroupsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureManagementGroupsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureManagementGroupQueryResult&gt;&#xA;override this.GetAzureManagementGroupsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureManagementGroupQueryResult&gt;" Usage="taskAgentHttpClientBase.GetAzureManagementGroupsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureManagementGroupQueryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Returns list of azure subscriptions
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureSubscriptionQueryResult&gt; GetAzureSubscriptionsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.AzureSubscriptionQueryResult&gt; GetAzureSubscriptionsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetAzureSubscriptionsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureSubscriptionsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureSubscriptionQueryResult&gt;&#xA;override this.GetAzureSubscriptionsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureSubscriptionQueryResult&gt;" Usage="taskAgentHttpClientBase.GetAzureSubscriptionsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.AzureSubscriptionQueryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Returns list of azure subscriptions
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; GetDeploymentGroupAsync (Guid project, int deploymentGroupId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; GetDeploymentGroupAsync(valuetype System.Guid project, int32 deploymentGroupId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentGroupAsync(System.Guid,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&#xA;override this.GetDeploymentGroupAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;" Usage="taskAgentHttpClientBase.GetDeploymentGroupAsync (project, deploymentGroupId, actionFilter, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="actionFilter">Get the deployment group only if this action can be performed on it.</param>
        <param name="expand">Include these additional details in the returned object.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a deployment group by its ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; GetDeploymentGroupAsync (string project, int deploymentGroupId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; GetDeploymentGroupAsync(string project, int32 deploymentGroupId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentGroupAsync(System.String,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&#xA;override this.GetDeploymentGroupAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;" Usage="taskAgentHttpClientBase.GetDeploymentGroupAsync (project, deploymentGroupId, actionFilter, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="actionFilter">Get the deployment group only if this action can be performed on it.</param>
        <param name="expand">Include these additional details in the returned object.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a deployment group by its ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt; GetDeploymentGroupsAsync (Guid project, string name = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand = null, string continuationToken = null, Nullable&lt;int&gt; top = null, System.Collections.Generic.IEnumerable&lt;int&gt; ids = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt; GetDeploymentGroupsAsync(valuetype System.Guid project, string name, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; ids, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentGroupsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands},System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * string * Nullable&lt;int&gt; * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt;&#xA;override this.GetDeploymentGroupsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * string * Nullable&lt;int&gt; * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentGroupsAsync (project, name, actionFilter, expand, continuationToken, top, ids, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="name">Name of the deployment group.</param>
        <param name="actionFilter">Get only deployment groups on which this action can be performed.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="continuationToken">Get deployment groups with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment groups to return. Default is **1000**.</param>
        <param name="ids">Comma separated list of IDs of the deployment groups.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment groups by name or IDs.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt; GetDeploymentGroupsAsync (string project, string name = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand = null, string continuationToken = null, Nullable&lt;int&gt; top = null, System.Collections.Generic.IEnumerable&lt;int&gt; ids = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt; GetDeploymentGroupsAsync(string project, string name, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; actionFilter, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; expand, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; ids, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentGroupsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands},System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * string * Nullable&lt;int&gt; * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt;&#xA;override this.GetDeploymentGroupsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt; * string * Nullable&lt;int&gt; * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentGroupsAsync (project, name, actionFilter, expand, continuationToken, top, ids, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupActionFilter&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupExpands&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="name">Name of the deployment group.</param>
        <param name="actionFilter">Get only deployment groups on which this action can be performed.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="continuationToken">Get deployment groups with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment groups to return. Default is **1000**.</param>
        <param name="ids">Comma separated list of IDs of the deployment groups.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment groups by name or IDs.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupsMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync (Guid project, string deploymentGroupName = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync(valuetype System.Guid project, string deploymentGroupName, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentGroupsMetricsAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupsMetricsAsync : Guid * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;&#xA;override this.GetDeploymentGroupsMetricsAsync : Guid * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentGroupsMetricsAsync (project, deploymentGroupName, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupName" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupName">Name of the deployment group.</param>
        <param name="continuationToken">Get metrics for deployment groups with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment group metrics to return. Default is **50**.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment group metrics.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentGroupsMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync (string project, string deploymentGroupName = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt; GetDeploymentGroupsMetricsAsync(string project, string deploymentGroupName, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentGroupsMetricsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentGroupsMetricsAsync : string * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;&#xA;override this.GetDeploymentGroupsMetricsAsync : string * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentGroupsMetricsAsync (project, deploymentGroupName, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupMetrics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupName" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupName">Name of the deployment group.</param>
        <param name="continuationToken">Get metrics for deployment groups with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment group metrics to return. Default is **50**.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment group metrics.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentMachineAsync (Guid project, int deploymentGroupId, int machineId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentMachineAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 machineId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineAsync(System.Guid,System.Int32,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineAsync : Guid * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.GetDeploymentMachineAsync : Guid * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineAsync (project, deploymentGroupId, machineId, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="expand"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentMachineAsync (string project, int deploymentGroupId, int machineId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentMachineAsync(string project, int32 deploymentGroupId, int32 machineId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineAsync(System.String,System.Int32,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineAsync : string * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.GetDeploymentMachineAsync : string * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineAsync (project, deploymentGroupId, machineId, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="expand"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; GetDeploymentMachineGroupAsync (Guid project, int machineGroupId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; GetDeploymentMachineGroupAsync(valuetype System.Guid project, int32 machineGroupId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineGroupAsync(System.Guid,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineGroupAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&#xA;override this.GetDeploymentMachineGroupAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineGroupAsync (project, machineGroupId, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupId"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; GetDeploymentMachineGroupAsync (string project, int machineGroupId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; GetDeploymentMachineGroupAsync(string project, int32 machineGroupId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineGroupAsync(System.String,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineGroupAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&#xA;override this.GetDeploymentMachineGroupAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineGroupAsync (project, machineGroupId, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupId"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineGroupMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachineGroupMachinesAsync (Guid project, int machineGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tagFilters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachineGroupMachinesAsync(valuetype System.Guid project, int32 machineGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tagFilters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineGroupMachinesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineGroupMachinesAsync : Guid * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentMachineGroupMachinesAsync : Guid * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineGroupMachinesAsync (project, machineGroupId, tagFilters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="tagFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupId"></param>
        <param name="tagFilters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineGroupMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachineGroupMachinesAsync (string project, int machineGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tagFilters = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachineGroupMachinesAsync(string project, int32 machineGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tagFilters, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineGroupMachinesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineGroupMachinesAsync : string * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentMachineGroupMachinesAsync : string * int * seq&lt;string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineGroupMachinesAsync (project, machineGroupId, tagFilters, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="tagFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupId"></param>
        <param name="tagFilters"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt; GetDeploymentMachineGroupsAsync (Guid project, string machineGroupName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt; GetDeploymentMachineGroupsAsync(valuetype System.Guid project, string machineGroupName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineGroupsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineGroupsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt;&#xA;override this.GetDeploymentMachineGroupsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineGroupsAsync (project, machineGroupName, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupName"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachineGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt; GetDeploymentMachineGroupsAsync (string project, string machineGroupName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt; GetDeploymentMachineGroupsAsync(string project, string machineGroupName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachineGroupsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachineGroupsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt;&#xA;override this.GetDeploymentMachineGroupsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachineGroupsAsync (project, machineGroupName, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.MachineGroupActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupName"></param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachinesAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachinesAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachinesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachinesAsync : Guid * int * seq&lt;string&gt; * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentMachinesAsync : Guid * int * seq&lt;string&gt; * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachinesAsync (project, deploymentGroupId, tags, name, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="tags"></param>
        <param name="name"></param>
        <param name="expand"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachinesAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentMachinesAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentMachinesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentMachinesAsync : string * int * seq&lt;string&gt; * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentMachinesAsync : string * int * seq&lt;string&gt; * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentMachinesAsync (project, deploymentGroupId, tags, name, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="tags"></param>
        <param name="name"></param>
        <param name="expand"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentPoolsSummaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummary&gt;&gt; GetDeploymentPoolsSummaryAsync (string poolName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummaryExpands&gt; expands = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummary&gt;&gt; GetDeploymentPoolsSummaryAsync(string poolName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummaryExpands&gt; expands, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentPoolsSummaryAsync(System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummaryExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentPoolsSummaryAsync : string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummaryExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummary&gt;&gt;&#xA;override this.GetDeploymentPoolsSummaryAsync : string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummaryExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummary&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentPoolsSummaryAsync (poolName, expands, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolName" Type="System.String" />
        <Parameter Name="expands" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentPoolSummaryExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolName">Name of the deployment pool.</param>
        <param name="expands">Include these additional details in the returned objects.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment pool summaries.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentTargetAsync (Guid project, int deploymentGroupId, int targetId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentTargetAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 targetId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentTargetAsync(System.Guid,System.Int32,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetAsync : Guid * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.GetDeploymentTargetAsync : Guid * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.GetDeploymentTargetAsync (project, deploymentGroupId, targetId, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group to which deployment target belongs.</param>
        <param name="targetId">ID of the deployment target to return.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a deployment target by its ID in a deployment group
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentTargetAsync (string project, int deploymentGroupId, int targetId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; GetDeploymentTargetAsync(string project, int32 deploymentGroupId, int32 targetId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentTargetAsync(System.String,System.Int32,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetAsync : string * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.GetDeploymentTargetAsync : string * int * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.GetDeploymentTargetAsync (project, deploymentGroupId, targetId, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group to which deployment target belongs.</param>
        <param name="targetId">ID of the deployment target to return.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a deployment target by its ID in a deployment group
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentTargetsAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsync : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsync : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentTargetsAsync (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="tags">Get only the deployment targets that contain all these comma separted list of tags.</param>
        <param name="name">Name pattern of the deployment targets to return.</param>
        <param name="partialNameMatch">When set to true, treats **name** as pattern. Else treats it as absolute match. Default is **false**.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="agentStatus">Get only deployment targets that have this status.</param>
        <param name="agentJobResult">Get only deployment targets that have this last job result.</param>
        <param name="continuationToken">Get deployment targets with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment targets to return. Default is **1000**.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentTargetsAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsync : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsync : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentTargetsAsync (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="tags">Get only the deployment targets that contain all these comma separted list of tags.</param>
        <param name="name">Name pattern of the deployment targets to return.</param>
        <param name="partialNameMatch">When set to true, treats **name** as pattern. Else treats it as absolute match. Default is **false**.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="agentStatus">Get only deployment targets that have this status.</param>
        <param name="agentJobResult">Get only deployment targets that have this last job result.</param>
        <param name="continuationToken">Get deployment targets with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment targets to return. Default is **1000**.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, Nullable&lt;bool&gt; enabled = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;bool&gt; enabled, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentTargetsAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsync : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsync : Guid * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentTargetsAsync (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, enabled, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="tags">Get only the deployment targets that contain all these comma separted list of tags.</param>
        <param name="name">Name pattern of the deployment targets to return.</param>
        <param name="partialNameMatch">When set to true, treats **name** as pattern. Else treats it as absolute match. Default is **false**.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="agentStatus">Get only deployment targets that have this status.</param>
        <param name="agentJobResult">Get only deployment targets that have this last job result.</param>
        <param name="continuationToken">Get deployment targets with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment targets to return. Default is **1000**.</param>
        <param name="enabled">Get only deployment targets that are enabled or disabled. Default is 'null' which returns all the targets.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;string&gt; tags = null, string name = null, Nullable&lt;bool&gt; partialNameMatch = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult = null, string continuationToken = null, Nullable&lt;int&gt; top = null, Nullable&lt;bool&gt; enabled = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; GetDeploymentTargetsAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tags, string name, valuetype System.Nullable`1&lt;bool&gt; partialNameMatch, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; expand, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; agentStatus, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; agentJobResult, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;bool&gt; enabled, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetDeploymentTargetsAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeploymentTargetsAsync : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.GetDeploymentTargetsAsync : string * int * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt; * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.GetDeploymentTargetsAsync (project, deploymentGroupId, tags, name, partialNameMatch, expand, agentStatus, agentJobResult, continuationToken, top, enabled, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="tags" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="partialNameMatch" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetExpands&gt;" />
        <Parameter Name="agentStatus" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatusFilter&gt;" />
        <Parameter Name="agentJobResult" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobResultFilter&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="tags">Get only the deployment targets that contain all these comma separted list of tags.</param>
        <param name="name">Name pattern of the deployment targets to return.</param>
        <param name="partialNameMatch">When set to true, treats **name** as pattern. Else treats it as absolute match. Default is **false**.</param>
        <param name="expand">Include these additional details in the returned objects.</param>
        <param name="agentStatus">Get only deployment targets that have this status.</param>
        <param name="agentJobResult">Get only deployment targets that have this last job result.</param>
        <param name="continuationToken">Get deployment targets with names greater than this continuationToken lexicographically.</param>
        <param name="top">Maximum number of deployment targets to return. Default is **1000**.</param>
        <param name="enabled">Get only deployment targets that are enabled or disabled. Default is 'null' which returns all the targets.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a list of deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; GetEnvironmentByIdAsync (Guid project, int environmentId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; expands = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; GetEnvironmentByIdAsync(valuetype System.Guid project, int32 environmentId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; expands, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetEnvironmentByIdAsync(System.Guid,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetEnvironmentByIdAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&#xA;override this.GetEnvironmentByIdAsync : Guid * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;" Usage="taskAgentHttpClientBase.GetEnvironmentByIdAsync (project, environmentId, expands, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="expands" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId">ID of the environment.</param>
        <param name="expands">Include these additional details in the returned objects.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get an environment by its ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; GetEnvironmentByIdAsync (string project, int environmentId, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; expands = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; GetEnvironmentByIdAsync(string project, int32 environmentId, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; expands, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetEnvironmentByIdAsync(System.String,System.Int32,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetEnvironmentByIdAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&#xA;override this.GetEnvironmentByIdAsync : string * int * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;" Usage="taskAgentHttpClientBase.GetEnvironmentByIdAsync (project, environmentId, expands, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="expands" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId">ID of the environment.</param>
        <param name="expands">Include these additional details in the returned objects.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get an environment by its ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt; GetEnvironmentsAsync (Guid project, string name = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt; GetEnvironmentsAsync(valuetype System.Guid project, string name, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetEnvironmentsAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetEnvironmentsAsync : Guid * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt;&#xA;override this.GetEnvironmentsAsync : Guid * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt;" Usage="taskAgentHttpClientBase.GetEnvironmentsAsync (project, name, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="name"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get all environments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt; GetEnvironmentsAsync (string project, string name = null, string continuationToken = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt; GetEnvironmentsAsync(string project, string name, string continuationToken, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetEnvironmentsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetEnvironmentsAsync : string * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt;&#xA;override this.GetEnvironmentsAsync : string * string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt;" Usage="taskAgentHttpClientBase.GetEnvironmentsAsync (project, name, continuationToken, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="name"></param>
        <param name="continuationToken"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get all environments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage&gt; GetMessageAsync (int poolId, Guid sessionId, Nullable&lt;long&gt; lastMessageId = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage&gt; GetMessageAsync(int32 poolId, valuetype System.Guid sessionId, valuetype System.Nullable`1&lt;int64&gt; lastMessageId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetMessageAsync(System.Int32,System.Guid,System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetMessageAsync : int * Guid * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage&gt;&#xA;override this.GetMessageAsync : int * Guid * Nullable&lt;int64&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage&gt;" Usage="taskAgentHttpClientBase.GetMessageAsync (poolId, sessionId, lastMessageId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="sessionId" Type="System.Guid" />
        <Parameter Name="lastMessageId" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="sessionId"></param>
        <param name="lastMessageId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOAuthConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; GetOAuthConfigurationAsync (int configurationId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; GetOAuthConfigurationAsync(int32 configurationId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetOAuthConfigurationAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetOAuthConfigurationAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&#xA;override this.GetOAuthConfigurationAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;" Usage="taskAgentHttpClientBase.GetOAuthConfigurationAsync (configurationId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOAuthConfigurationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&gt; GetOAuthConfigurationsAsync (Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&gt; GetOAuthConfigurationsAsync(valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetOAuthConfigurationsAsync(System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetOAuthConfigurationsAsync : Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&gt;&#xA;override this.GetOAuthConfigurationsAsync : Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&gt;" Usage="taskAgentHttpClientBase.GetOAuthConfigurationsAsync (actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt; GetPackageAsync (string packageType, string platform, string version, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt; GetPackageAsync(string packageType, string platform, string version, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetPackageAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPackageAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;&#xA;override this.GetPackageAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;" Usage="taskAgentHttpClientBase.GetPackageAsync (packageType, platform, version, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageType" Type="System.String" />
        <Parameter Name="platform" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="packageType"></param>
        <param name="platform"></param>
        <param name="version"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;&gt; GetPackagesAsync (string packageType, string platform = null, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;&gt; GetPackagesAsync(string packageType, string platform, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetPackagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPackagesAsync : string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;&gt;&#xA;override this.GetPackagesAsync : string * string * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;&gt;" Usage="taskAgentHttpClientBase.GetPackagesAsync (packageType, platform, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.PackageMetadata&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageType" Type="System.String" />
        <Parameter Name="platform" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="packageType"></param>
        <param name="platform"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceLimitsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceLimit&gt;&gt; GetResourceLimitsAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceLimit&gt;&gt; GetResourceLimitsAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetResourceLimitsAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceLimitsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceLimit&gt;&gt;&#xA;override this.GetResourceLimitsAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceLimit&gt;&gt;" Usage="taskAgentHttpClientBase.GetResourceLimitsAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceLimit&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt; GetResourceUsageAsync (string parallelismTag = null, Nullable&lt;bool&gt; poolIsHosted = null, Nullable&lt;bool&gt; includeRunningRequests = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt; GetResourceUsageAsync(string parallelismTag, valuetype System.Nullable`1&lt;bool&gt; poolIsHosted, valuetype System.Nullable`1&lt;bool&gt; includeRunningRequests, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetResourceUsageAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt;&#xA;override this.GetResourceUsageAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt;" Usage="taskAgentHttpClientBase.GetResourceUsageAsync (parallelismTag, poolIsHosted, includeRunningRequests, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismTag" Type="System.String" />
        <Parameter Name="poolIsHosted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeRunningRequests" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parallelismTag"></param>
        <param name="poolIsHosted"></param>
        <param name="includeRunningRequests"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt; GetResourceUsageAsync (string resourceType = null, Nullable&lt;bool&gt; poolIsHosted = null, Nullable&lt;bool&gt; includeRunningPlanGroups = null, Nullable&lt;int&gt; maxPlanGroupsCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt; GetResourceUsageAsync(string resourceType, valuetype System.Nullable`1&lt;bool&gt; poolIsHosted, valuetype System.Nullable`1&lt;bool&gt; includeRunningPlanGroups, valuetype System.Nullable`1&lt;int32&gt; maxPlanGroupsCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetResourceUsageAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt;&#xA;override this.GetResourceUsageAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt;" Usage="taskAgentHttpClientBase.GetResourceUsageAsync (resourceType, poolIsHosted, includeRunningPlanGroups, maxPlanGroupsCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="poolIsHosted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeRunningPlanGroups" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="maxPlanGroupsCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceType"></param>
        <param name="poolIsHosted"></param>
        <param name="includeRunningPlanGroups"></param>
        <param name="maxPlanGroupsCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; GetSecureFileAsync (Guid project, Guid secureFileId, Nullable&lt;bool&gt; includeDownloadTicket = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; GetSecureFileAsync(valuetype System.Guid project, valuetype System.Guid secureFileId, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTicket, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFileAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFileAsync : Guid * Guid * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&#xA;override this.GetSecureFileAsync : Guid * Guid * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClientBase.GetSecureFileAsync (project, secureFileId, includeDownloadTicket, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="includeDownloadTicket" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="includeDownloadTicket">If includeDownloadTicket is true and the caller has permissions, a download ticket is included in the response.</param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; GetSecureFileAsync (string project, Guid secureFileId, Nullable&lt;bool&gt; includeDownloadTicket = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; GetSecureFileAsync(string project, valuetype System.Guid secureFileId, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTicket, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFileAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFileAsync : string * Guid * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&#xA;override this.GetSecureFileAsync : string * Guid * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClientBase.GetSecureFileAsync (project, secureFileId, includeDownloadTicket, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="includeDownloadTicket" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="includeDownloadTicket">If includeDownloadTicket is true and the caller has permissions, a download ticket is included in the response.</param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync (Guid project, string namePattern = null, Nullable&lt;bool&gt; includeDownloadTickets = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync(valuetype System.Guid project, string namePattern, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFilesAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFilesAsync : Guid * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.GetSecureFilesAsync : Guid * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.GetSecureFilesAsync (project, namePattern, includeDownloadTickets, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="namePattern" Type="System.String" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="namePattern">Name of the secure file to match. Can include wildcards to match multiple files.</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="actionFilter">Filter by secure file permissions for View, Manage or Use action. Defaults to View.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync (string project, string namePattern = null, Nullable&lt;bool&gt; includeDownloadTickets = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesAsync(string project, string namePattern, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFilesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFilesAsync : string * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.GetSecureFilesAsync : string * string * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.GetSecureFilesAsync (project, namePattern, includeDownloadTickets, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="namePattern" Type="System.String" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="namePattern">Name of the secure file to match. Can include wildcards to match multiple files.</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="actionFilter">Filter by secure file permissions for View, Manage or Use action. Defaults to View.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync (Guid project, System.Collections.Generic.IEnumerable&lt;Guid&gt; secureFileIds, Nullable&lt;bool&gt; includeDownloadTickets = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; secureFileIds, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFilesByIdsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFilesByIdsAsync : Guid * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.GetSecureFilesByIdsAsync : Guid * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.GetSecureFilesByIdsAsync (project, secureFileIds, includeDownloadTickets, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileIds" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileIds">A list of secure file Ids</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesByIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync (string project, System.Collections.Generic.IEnumerable&lt;Guid&gt; secureFileIds, Nullable&lt;bool&gt; includeDownloadTickets = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByIdsAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; secureFileIds, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFilesByIdsAsync(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFilesByIdsAsync : string * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.GetSecureFilesByIdsAsync : string * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.GetSecureFilesByIdsAsync (project, secureFileIds, includeDownloadTickets, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileIds" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileIds">A list of secure file Ids</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByNamesAsync (Guid project, System.Collections.Generic.IEnumerable&lt;string&gt; secureFileNames, Nullable&lt;bool&gt; includeDownloadTickets = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByNamesAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;string&gt; secureFileNames, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFilesByNamesAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFilesByNamesAsync : Guid * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.GetSecureFilesByNamesAsync : Guid * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.GetSecureFilesByNamesAsync (project, secureFileNames, includeDownloadTickets, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileNames">A list of secure file Ids</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureFilesByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByNamesAsync (string project, System.Collections.Generic.IEnumerable&lt;string&gt; secureFileNames, Nullable&lt;bool&gt; includeDownloadTickets = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; GetSecureFilesByNamesAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;string&gt; secureFileNames, valuetype System.Nullable`1&lt;bool&gt; includeDownloadTickets, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; actionFilter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetSecureFilesByNamesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureFilesByNamesAsync : string * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.GetSecureFilesByNamesAsync : string * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.GetSecureFilesByNamesAsync (project, secureFileNames, includeDownloadTickets, actionFilter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeDownloadTickets" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFileActionFilter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileNames">A list of secure file Ids</param>
        <param name="includeDownloadTickets">If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.</param>
        <param name="actionFilter"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get secure files
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; GetServiceEndpointDetailsAsync (Guid project, Guid endpointId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; GetServiceEndpointDetailsAsync(valuetype System.Guid project, valuetype System.Guid endpointId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointDetailsAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointDetailsAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&#xA;override this.GetServiceEndpointDetailsAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointDetailsAsync (project, endpointId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpointId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; GetServiceEndpointDetailsAsync (string project, Guid endpointId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; GetServiceEndpointDetailsAsync(string project, valuetype System.Guid endpointId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointDetailsAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointDetailsAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&#xA;override this.GetServiceEndpointDetailsAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointDetailsAsync (project, endpointId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpointId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointExecutionRecordsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; GetServiceEndpointExecutionRecordsAsync (Guid project, Guid endpointId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; GetServiceEndpointExecutionRecordsAsync(valuetype System.Guid project, valuetype System.Guid endpointId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointExecutionRecordsAsync(System.Guid,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointExecutionRecordsAsync : Guid * Guid * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;&#xA;override this.GetServiceEndpointExecutionRecordsAsync : Guid * Guid * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointExecutionRecordsAsync (project, endpointId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpointId"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointExecutionRecordsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; GetServiceEndpointExecutionRecordsAsync (string project, Guid endpointId, Nullable&lt;int&gt; top = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt; GetServiceEndpointExecutionRecordsAsync(string project, valuetype System.Guid endpointId, valuetype System.Nullable`1&lt;int32&gt; top, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointExecutionRecordsAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointExecutionRecordsAsync : string * Guid * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;&#xA;override this.GetServiceEndpointExecutionRecordsAsync : string * Guid * Nullable&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointExecutionRecordsAsync (project, endpointId, top, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointExecutionRecord&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpointId"></param>
        <param name="top"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsAsync (Guid project, string type = null, System.Collections.Generic.IEnumerable&lt;string&gt; authSchemes = null, System.Collections.Generic.IEnumerable&lt;Guid&gt; endpointIds = null, Nullable&lt;bool&gt; includeFailed = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsAsync(valuetype System.Guid project, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; authSchemes, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; endpointIds, valuetype System.Nullable`1&lt;bool&gt; includeFailed, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointsAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointsAsync : Guid * string * seq&lt;string&gt; * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;&#xA;override this.GetServiceEndpointsAsync : Guid * string * seq&lt;string&gt; * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointsAsync (project, type, authSchemes, endpointIds, includeFailed, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="authSchemes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="endpointIds" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
        <Parameter Name="includeFailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="type"></param>
        <param name="authSchemes"></param>
        <param name="endpointIds"></param>
        <param name="includeFailed"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsAsync (string project, string type = null, System.Collections.Generic.IEnumerable&lt;string&gt; authSchemes = null, System.Collections.Generic.IEnumerable&lt;Guid&gt; endpointIds = null, Nullable&lt;bool&gt; includeFailed = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsAsync(string project, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; authSchemes, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Guid&gt; endpointIds, valuetype System.Nullable`1&lt;bool&gt; includeFailed, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointsAsync : string * string * seq&lt;string&gt; * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;&#xA;override this.GetServiceEndpointsAsync : string * string * seq&lt;string&gt; * seq&lt;Guid&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointsAsync (project, type, authSchemes, endpointIds, includeFailed, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="authSchemes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="endpointIds" Type="System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" />
        <Parameter Name="includeFailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="type"></param>
        <param name="authSchemes"></param>
        <param name="endpointIds"></param>
        <param name="includeFailed"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointsByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsByNamesAsync (Guid project, System.Collections.Generic.IEnumerable&lt;string&gt; endpointNames, string type = null, System.Collections.Generic.IEnumerable&lt;string&gt; authSchemes = null, Nullable&lt;bool&gt; includeFailed = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsByNamesAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;string&gt; endpointNames, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; authSchemes, valuetype System.Nullable`1&lt;bool&gt; includeFailed, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointsByNamesAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointsByNamesAsync : Guid * seq&lt;string&gt; * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;&#xA;override this.GetServiceEndpointsByNamesAsync : Guid * seq&lt;string&gt; * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointsByNamesAsync (project, endpointNames, type, authSchemes, includeFailed, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpointNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="authSchemes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeFailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpointNames"></param>
        <param name="type"></param>
        <param name="authSchemes"></param>
        <param name="includeFailed"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointsByNamesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsByNamesAsync (string project, System.Collections.Generic.IEnumerable&lt;string&gt; endpointNames, string type = null, System.Collections.Generic.IEnumerable&lt;string&gt; authSchemes = null, Nullable&lt;bool&gt; includeFailed = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; GetServiceEndpointsByNamesAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;string&gt; endpointNames, string type, class System.Collections.Generic.IEnumerable`1&lt;string&gt; authSchemes, valuetype System.Nullable`1&lt;bool&gt; includeFailed, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointsByNamesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointsByNamesAsync : string * seq&lt;string&gt; * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;&#xA;override this.GetServiceEndpointsByNamesAsync : string * seq&lt;string&gt; * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointsByNamesAsync (project, endpointNames, type, authSchemes, includeFailed, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpointNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="authSchemes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeFailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpointNames"></param>
        <param name="type"></param>
        <param name="authSchemes"></param>
        <param name="includeFailed"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointTypesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointType&gt;&gt; GetServiceEndpointTypesAsync (string type = null, string scheme = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointType&gt;&gt; GetServiceEndpointTypesAsync(string type, string scheme, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceEndpointTypesAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointTypesAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointType&gt;&gt;&#xA;override this.GetServiceEndpointTypesAsync : string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointType&gt;&gt;" Usage="taskAgentHttpClientBase.GetServiceEndpointTypesAsync (type, scheme, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpointType&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="type"></param>
        <param name="scheme"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; GetServiceGroupAsync (Guid project, int environmentId, int serviceGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; GetServiceGroupAsync(valuetype System.Guid project, int32 environmentId, int32 serviceGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceGroupAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceGroupAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;&#xA;override this.GetServiceGroupAsync : Guid * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;" Usage="taskAgentHttpClientBase.GetServiceGroupAsync (project, environmentId, serviceGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="serviceGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId"></param>
        <param name="serviceGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; GetServiceGroupAsync (string project, int environmentId, int serviceGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; GetServiceGroupAsync(string project, int32 environmentId, int32 serviceGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetServiceGroupAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceGroupAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;&#xA;override this.GetServiceGroupAsync : string * int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;" Usage="taskAgentHttpClientBase.GetServiceGroupAsync (project, environmentId, serviceGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="serviceGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId"></param>
        <param name="serviceGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskContentZipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetTaskContentZipAsync (Guid taskId, string versionString, System.Collections.Generic.IEnumerable&lt;string&gt; visibility = null, Nullable&lt;bool&gt; scopeLocal = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetTaskContentZipAsync(valuetype System.Guid taskId, string versionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; visibility, valuetype System.Nullable`1&lt;bool&gt; scopeLocal, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskContentZipAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskContentZipAsync : Guid * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetTaskContentZipAsync : Guid * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.GetTaskContentZipAsync (taskId, versionString, visibility, scopeLocal, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Guid" />
        <Parameter Name="versionString" Type="System.String" />
        <Parameter Name="visibility" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="scopeLocal" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId"></param>
        <param name="versionString"></param>
        <param name="visibility"></param>
        <param name="scopeLocal"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt; GetTaskDefinitionAsync (Guid taskId, string versionString, System.Collections.Generic.IEnumerable&lt;string&gt; visibility = null, Nullable&lt;bool&gt; scopeLocal = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt; GetTaskDefinitionAsync(valuetype System.Guid taskId, string versionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; visibility, valuetype System.Nullable`1&lt;bool&gt; scopeLocal, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskDefinitionAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskDefinitionAsync : Guid * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;&#xA;override this.GetTaskDefinitionAsync : Guid * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;" Usage="taskAgentHttpClientBase.GetTaskDefinitionAsync (taskId, versionString, visibility, scopeLocal, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Guid" />
        <Parameter Name="versionString" Type="System.String" />
        <Parameter Name="visibility" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="scopeLocal" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId"></param>
        <param name="versionString"></param>
        <param name="visibility"></param>
        <param name="scopeLocal"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;&gt; GetTaskDefinitionsAsync (Nullable&lt;Guid&gt; taskId = null, System.Collections.Generic.IEnumerable&lt;string&gt; visibility = null, Nullable&lt;bool&gt; scopeLocal = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;&gt; GetTaskDefinitionsAsync(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; visibility, valuetype System.Nullable`1&lt;bool&gt; scopeLocal, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskDefinitionsAsync(System.Nullable{System.Guid},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskDefinitionsAsync : Nullable&lt;Guid&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;&gt;&#xA;override this.GetTaskDefinitionsAsync : Nullable&lt;Guid&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;&gt;" Usage="taskAgentHttpClientBase.GetTaskDefinitionsAsync (taskId, visibility, scopeLocal, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="visibility" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="scopeLocal" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId"></param>
        <param name="visibility"></param>
        <param name="scopeLocal"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; GetTaskGroupAsync (Guid project, Guid taskGroupId, string versionSpec, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; GetTaskGroupAsync(valuetype System.Guid project, valuetype System.Guid taskGroupId, string versionSpec, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupAsync(System.Guid,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskGroupAsync : Guid * Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.GetTaskGroupAsync : Guid * Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupAsync (project, taskGroupId, versionSpec, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="versionSpec" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId">Id of the task group.</param>
        <param name="versionSpec">version specification of the task group. examples: 1, 1.0.</param>
        <param name="expand">The properties that should be expanded. example $expand=Tasks will expand nested task groups.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; GetTaskGroupAsync (string project, Guid taskGroupId, string versionSpec, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; expand = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; GetTaskGroupAsync(string project, valuetype System.Guid taskGroupId, string versionSpec, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; expand, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupAsync(System.String,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskGroupAsync : string * Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.GetTaskGroupAsync : string * Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupAsync (project, taskGroupId, versionSpec, expand, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="versionSpec" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupExpands&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId">Id of the task group.</param>
        <param name="versionSpec">version specification of the task group. examples: 1, 1.0.</param>
        <param name="expand">The properties that should be expanded. example $expand=Tasks will expand nested task groups.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupHistoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt; GetTaskGroupHistoryAsync (Guid project, Guid taskGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt; GetTaskGroupHistoryAsync(valuetype System.Guid project, valuetype System.Guid taskGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupHistoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskGroupHistoryAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt;&#xA;override this.GetTaskGroupHistoryAsync : Guid * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupHistoryAsync (project, taskGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupHistoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt; GetTaskGroupHistoryAsync (string project, Guid taskGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt; GetTaskGroupHistoryAsync(string project, valuetype System.Guid taskGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupHistoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskGroupHistoryAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt;&#xA;override this.GetTaskGroupHistoryAsync : string * Guid * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupHistoryAsync (project, taskGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupRevision&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupRevisionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetTaskGroupRevisionAsync (Guid project, Guid taskGroupId, int revision, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetTaskGroupRevisionAsync(valuetype System.Guid project, valuetype System.Guid taskGroupId, int32 revision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupRevisionAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskGroupRevisionAsync : Guid * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetTaskGroupRevisionAsync : Guid * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupRevisionAsync (project, taskGroupId, revision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="revision" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId"></param>
        <param name="revision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupRevisionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetTaskGroupRevisionAsync (string project, Guid taskGroupId, int revision, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetTaskGroupRevisionAsync(string project, valuetype System.Guid taskGroupId, int32 revision, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupRevisionAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskGroupRevisionAsync : string * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetTaskGroupRevisionAsync : string * Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupRevisionAsync (project, taskGroupId, revision, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="revision" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId"></param>
        <param name="revision"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; GetTaskGroupsAsync (Guid project, Nullable&lt;Guid&gt; taskGroupId = null, Nullable&lt;bool&gt; expanded = null, Nullable&lt;Guid&gt; taskIdFilter = null, Nullable&lt;bool&gt; deleted = null, Nullable&lt;int&gt; top = null, Nullable&lt;DateTime&gt; continuationToken = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt; queryOrder = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; GetTaskGroupsAsync(valuetype System.Guid project, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskGroupId, valuetype System.Nullable`1&lt;bool&gt; expanded, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, valuetype System.Nullable`1&lt;bool&gt; deleted, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; continuationToken, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt; queryOrder, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupsAsync(System.Guid,System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetTaskGroupsAsync : Guid * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupsAsync (project, taskGroupId, expanded, taskIdFilter, deleted, top, continuationToken, queryOrder, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expanded" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="deleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId">Id of the task group.</param>
        <param name="expanded">'true' to recursively expand task groups. Default is 'false'.</param>
        <param name="taskIdFilter">Guid of the taskId to filter.</param>
        <param name="deleted">'true'to include deleted task groups. Default is 'false'.</param>
        <param name="top">Number of task groups to get.</param>
        <param name="continuationToken">Gets the task groups after the continuation token provided.</param>
        <param name="queryOrder">Gets the results in the defined order. Default is 'CreatedOnDescending'.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] List task groups.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; GetTaskGroupsAsync (string project, Nullable&lt;Guid&gt; taskGroupId = null, Nullable&lt;bool&gt; expanded = null, Nullable&lt;Guid&gt; taskIdFilter = null, Nullable&lt;bool&gt; deleted = null, Nullable&lt;int&gt; top = null, Nullable&lt;DateTime&gt; continuationToken = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt; queryOrder = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; GetTaskGroupsAsync(string project, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskGroupId, valuetype System.Nullable`1&lt;bool&gt; expanded, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; taskIdFilter, valuetype System.Nullable`1&lt;bool&gt; deleted, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; continuationToken, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt; queryOrder, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskGroupsAsync(System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetTaskGroupsAsync : string * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetTaskGroupsAsync (project, taskGroupId, expanded, taskIdFilter, deleted, top, continuationToken, queryOrder, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expanded" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="taskIdFilter" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="deleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupQueryOrder&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId">Id of the task group.</param>
        <param name="expanded">'true' to recursively expand task groups. Default is 'false'.</param>
        <param name="taskIdFilter">Guid of the taskId to filter.</param>
        <param name="deleted">'true'to include deleted task groups. Default is 'false'.</param>
        <param name="top">Number of task groups to get.</param>
        <param name="continuationToken">Gets the task groups after the continuation token provided.</param>
        <param name="queryOrder">Gets the results in the defined order. Default is 'CreatedOnDescending'.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] List task groups.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskHubLicenseDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt; GetTaskHubLicenseDetailsAsync (string hubName, Nullable&lt;bool&gt; includeEnterpriseUsersCount = null, Nullable&lt;bool&gt; includeHostedAgentMinutesCount = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt; GetTaskHubLicenseDetailsAsync(string hubName, valuetype System.Nullable`1&lt;bool&gt; includeEnterpriseUsersCount, valuetype System.Nullable`1&lt;bool&gt; includeHostedAgentMinutesCount, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskHubLicenseDetailsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskHubLicenseDetailsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt;&#xA;override this.GetTaskHubLicenseDetailsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt;" Usage="taskAgentHttpClientBase.GetTaskHubLicenseDetailsAsync (hubName, includeEnterpriseUsersCount, includeHostedAgentMinutesCount, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hubName" Type="System.String" />
        <Parameter Name="includeEnterpriseUsersCount" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="includeHostedAgentMinutesCount" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hubName"></param>
        <param name="includeEnterpriseUsersCount"></param>
        <param name="includeHostedAgentMinutesCount"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskIconAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.Http.StreamContent&gt; GetTaskIconAsync (Guid taskId, string versionString, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.StreamContent&gt; GetTaskIconAsync(valuetype System.Guid taskId, string versionString, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetTaskIconAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTaskIconAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.StreamContent&gt;&#xA;override this.GetTaskIconAsync : Guid * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.StreamContent&gt;" Usage="taskAgentHttpClientBase.GetTaskIconAsync (taskId, versionString, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.StreamContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Guid" />
        <Parameter Name="versionString" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskId"></param>
        <param name="versionString"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; GetVariableGroupAsync (Guid project, int groupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; GetVariableGroupAsync(valuetype System.Guid project, int32 groupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVariableGroupAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVariableGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&#xA;override this.GetVariableGroupAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;" Usage="taskAgentHttpClientBase.GetVariableGroupAsync (project, groupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="groupId">Id of the variable group.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a variable group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; GetVariableGroupAsync (string project, int groupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; GetVariableGroupAsync(string project, int32 groupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVariableGroupAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVariableGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&#xA;override this.GetVariableGroupAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;" Usage="taskAgentHttpClientBase.GetVariableGroupAsync (project, groupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="groupId">Id of the variable group.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get a variable group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsAsync (Guid project, string groupName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; actionFilter = null, Nullable&lt;int&gt; top = null, Nullable&lt;int&gt; continuationToken = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; queryOrder = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsAsync(valuetype System.Guid project, string groupName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; actionFilter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; continuationToken, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; queryOrder, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVariableGroupsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVariableGroupsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;&#xA;override this.GetVariableGroupsAsync : Guid * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetVariableGroupsAsync (project, groupName, actionFilter, top, continuationToken, queryOrder, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="groupName">Name of variable group.</param>
        <param name="actionFilter">Action filter for the variable group. It specifies the action which can be performed on the variable groups.</param>
        <param name="top">Number of variable groups to get.</param>
        <param name="continuationToken">Gets the variable groups after the continuation token provided.</param>
        <param name="queryOrder">Gets the results in the defined order. Default is 'IdDescending'.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get variable groups.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsAsync (string project, string groupName = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; actionFilter = null, Nullable&lt;int&gt; top = null, Nullable&lt;int&gt; continuationToken = null, Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; queryOrder = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsAsync(string project, string groupName, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; actionFilter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; continuationToken, valuetype System.Nullable`1&lt;valuetype Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; queryOrder, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVariableGroupsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVariableGroupsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;&#xA;override this.GetVariableGroupsAsync : string * string * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetVariableGroupsAsync (project, groupName, actionFilter, top, continuationToken, queryOrder, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="actionFilter" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupActionFilter&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="queryOrder" Type="System.Nullable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupQueryOrder&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="groupName">Name of variable group.</param>
        <param name="actionFilter">Action filter for the variable group. It specifies the action which can be performed on the variable groups.</param>
        <param name="top">Number of variable groups to get.</param>
        <param name="continuationToken">Gets the variable groups after the continuation token provided.</param>
        <param name="queryOrder">Gets the results in the defined order. Default is 'IdDescending'.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get variable groups.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableGroupsByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsByIdAsync (Guid project, System.Collections.Generic.IEnumerable&lt;int&gt; groupIds, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsByIdAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; groupIds, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVariableGroupsByIdAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVariableGroupsByIdAsync : Guid * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;&#xA;override this.GetVariableGroupsByIdAsync : Guid * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetVariableGroupsByIdAsync (project, groupIds, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="groupIds">Comma separated list of Ids of variable groups.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get variable groups by ids.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariableGroupsByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsByIdAsync (string project, System.Collections.Generic.IEnumerable&lt;int&gt; groupIds, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt; GetVariableGroupsByIdAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; groupIds, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVariableGroupsByIdAsync(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVariableGroupsByIdAsync : string * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;&#xA;override this.GetVariableGroupsByIdAsync : string * seq&lt;int&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;" Usage="taskAgentHttpClientBase.GetVariableGroupsByIdAsync (project, groupIds, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="groupIds">Comma separated list of Ids of variable groups.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Get variable groups by ids.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVstsAadTenantIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetVstsAadTenantIdAsync (object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetVstsAadTenantIdAsync(object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.GetVstsAadTenantIdAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetVstsAadTenantIdAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetVstsAadTenantIdAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="taskAgentHttpClientBase.GetVstsAadTenantIdAsync (userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishPreviewTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishPreviewTaskGroupAsync (Guid project, Guid taskGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, Nullable&lt;bool&gt; disablePriorVersions = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishPreviewTaskGroupAsync(valuetype System.Guid project, valuetype System.Guid taskGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, valuetype System.Nullable`1&lt;bool&gt; disablePriorVersions, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.PublishPreviewTaskGroupAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PublishPreviewTaskGroupAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;&#xA;override this.PublishPreviewTaskGroupAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.PublishPreviewTaskGroupAsync (project, taskGroupId, taskGroup, disablePriorVersions, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup" />
        <Parameter Name="disablePriorVersions" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId"></param>
        <param name="taskGroup"></param>
        <param name="disablePriorVersions"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishPreviewTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishPreviewTaskGroupAsync (string project, Guid taskGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, Nullable&lt;bool&gt; disablePriorVersions = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishPreviewTaskGroupAsync(string project, valuetype System.Guid taskGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, valuetype System.Nullable`1&lt;bool&gt; disablePriorVersions, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.PublishPreviewTaskGroupAsync(System.String,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PublishPreviewTaskGroupAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;&#xA;override this.PublishPreviewTaskGroupAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * Nullable&lt;bool&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.PublishPreviewTaskGroupAsync (project, taskGroupId, taskGroup, disablePriorVersions, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup" />
        <Parameter Name="disablePriorVersions" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId"></param>
        <param name="taskGroup"></param>
        <param name="disablePriorVersions"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishTaskGroupAsync (Guid project, Guid parentTaskGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata taskGroupMetadata, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishTaskGroupAsync(valuetype System.Guid project, valuetype System.Guid parentTaskGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata taskGroupMetadata, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.PublishTaskGroupAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PublishTaskGroupAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;&#xA;override this.PublishTaskGroupAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.PublishTaskGroupAsync (project, parentTaskGroupId, taskGroupMetadata, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="parentTaskGroupId" Type="System.Guid" />
        <Parameter Name="taskGroupMetadata" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="parentTaskGroupId"></param>
        <param name="taskGroupMetadata"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishTaskGroupAsync (string project, Guid parentTaskGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata taskGroupMetadata, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; PublishTaskGroupAsync(string project, valuetype System.Guid parentTaskGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata taskGroupMetadata, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.PublishTaskGroupAsync(System.String,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PublishTaskGroupAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;&#xA;override this.PublishTaskGroupAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.PublishTaskGroupAsync (project, parentTaskGroupId, taskGroupMetadata, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="parentTaskGroupId" Type="System.Guid" />
        <Parameter Name="taskGroupMetadata" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.PublishTaskGroupMetadata" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="parentTaskGroupId"></param>
        <param name="taskGroupMetadata"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; QueryEndpointAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinitionEndpoint endpoint, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; QueryEndpointAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinitionEndpoint endpoint, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QueryEndpointAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinitionEndpoint,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueryEndpointAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinitionEndpoint * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.QueryEndpointAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinitionEndpoint * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="taskAgentHttpClientBase.QueryEndpointAsync (endpoint, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskDefinitionEndpoint" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpoint">Describes the URL to fetch.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Proxy for a GET request defined by an 'endpoint'. The request is authorized using a service connection. The response is filtered using an XPath/Json based selector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySecureFilesByPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; QuerySecureFilesByPropertiesAsync (Guid project, string condition, string namePattern = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; QuerySecureFilesByPropertiesAsync(valuetype System.Guid project, string condition, string namePattern, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QuerySecureFilesByPropertiesAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QuerySecureFilesByPropertiesAsync : Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.QuerySecureFilesByPropertiesAsync : Guid * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.QuerySecureFilesByPropertiesAsync (project, condition, namePattern, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="namePattern" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="condition">The main condition syntax is described [here](https://go.microsoft.com/fwlink/?linkid=842996). Use the *property('property-name')* function to access the value of the specified property of a secure file. It returns null if the property is not set. E.g. ``` and( eq( property('devices'), '2' ), in( property('provisioning profile type'), 'ad hoc', 'development' ) ) ```</param>
        <param name="namePattern">Name of the secure file to match. Can include wildcards to match multiple files.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Query secure files using a name pattern and a condition on file properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySecureFilesByPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; QuerySecureFilesByPropertiesAsync (string project, string condition, string namePattern = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; QuerySecureFilesByPropertiesAsync(string project, string condition, string namePattern, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QuerySecureFilesByPropertiesAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QuerySecureFilesByPropertiesAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.QuerySecureFilesByPropertiesAsync : string * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.QuerySecureFilesByPropertiesAsync (project, condition, namePattern, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="namePattern" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="condition">The main condition syntax is described [here](https://go.microsoft.com/fwlink/?linkid=842996). Use the *property('property-name')* function to access the value of the specified property of a secure file. It returns null if the property is not set. E.g. ``` and( eq( property('devices'), '2' ), in( property('provisioning profile type'), 'ad hoc', 'development' ) ) ```</param>
        <param name="namePattern">Name of the secure file to match. Can include wildcards to match multiple files.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Query secure files using a name pattern and a condition on file properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; QueryServiceEndpointAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding binding, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; QueryServiceEndpointAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding binding, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QueryServiceEndpointAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueryServiceEndpointAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.QueryServiceEndpointAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="taskAgentHttpClientBase.QueryServiceEndpointAsync (project, binding, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.Obsolete("Use ExecuteServiceEndpointRequest API Instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="binding" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="binding">Describes the data source to fetch.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Proxy for a GET request defined by an service endpoint. The request is authorized using a data source in service endpoint. The response is filtered using an XPath/Json based selector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; QueryServiceEndpointAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding binding, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;string&gt;&gt; QueryServiceEndpointAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding binding, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QueryServiceEndpointAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueryServiceEndpointAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;&#xA;override this.QueryServiceEndpointAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;string&gt;&gt;" Usage="taskAgentHttpClientBase.QueryServiceEndpointAsync (project, binding, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.Obsolete("Use ExecuteServiceEndpointRequest API Instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="binding" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DataSourceBinding" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="binding">Describes the data source to fetch.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Proxy for a GET request defined by an service endpoint. The request is authorized using a data source in service endpoint. The response is filtered using an XPath/Json based selector.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySharedProjectsForVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ProjectReference&gt;&gt; QuerySharedProjectsForVariableGroupAsync (int groupId, string project, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ProjectReference&gt;&gt; QuerySharedProjectsForVariableGroupAsync(int32 groupId, string project, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QuerySharedProjectsForVariableGroupAsync(System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QuerySharedProjectsForVariableGroupAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ProjectReference&gt;&gt;&#xA;override this.QuerySharedProjectsForVariableGroupAsync : int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ProjectReference&gt;&gt;" Usage="taskAgentHttpClientBase.QuerySharedProjectsForVariableGroupAsync (groupId, project, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ProjectReference&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"></param>
        <param name="project"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueAgentPoolMaintenanceJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt; QueueAgentPoolMaintenanceJobAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob job, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt; QueueAgentPoolMaintenanceJobAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob job, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QueueAgentPoolMaintenanceJobAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueAgentPoolMaintenanceJobAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&#xA;override this.QueueAgentPoolMaintenanceJobAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;" Usage="taskAgentHttpClientBase.QueueAgentPoolMaintenanceJobAsync (poolId, job, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="job" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="job"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueAgentRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; QueueAgentRequestAsync (int queueId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest request, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; QueueAgentRequestAsync(int32 queueId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest request, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QueueAgentRequestAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueAgentRequestAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&#xA;override this.QueueAgentRequestAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClientBase.QueueAgentRequestAsync (queueId, request, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.Int32" />
        <Parameter Name="request" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"></param>
        <param name="request"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueAgentRequestByPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; QueueAgentRequestByPoolAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest request, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; QueueAgentRequestByPoolAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest request, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.QueueAgentRequestByPoolAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueAgentRequestByPoolAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&#xA;override this.QueueAgentRequestByPoolAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClientBase.QueueAgentRequestByPoolAsync (poolId, request, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="request" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="request"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RefreshAgentAsync (int poolId, int agentId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshAgentAsync(int32 poolId, int32 agentId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.RefreshAgentAsync(System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RefreshAgentAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshAgentAsync : int * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.RefreshAgentAsync (poolId, agentId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAgentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RefreshAgentsAsync (int poolId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshAgentsAsync(int32 poolId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.RefreshAgentsAsync(System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RefreshAgentsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshAgentsAsync : int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.RefreshAgentsAsync (poolId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RefreshDeploymentMachinesAsync (Guid project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshDeploymentMachinesAsync(valuetype System.Guid project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.RefreshDeploymentMachinesAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RefreshDeploymentMachinesAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshDeploymentMachinesAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.RefreshDeploymentMachinesAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RefreshDeploymentMachinesAsync (string project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshDeploymentMachinesAsync(string project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.RefreshDeploymentMachinesAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RefreshDeploymentMachinesAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshDeploymentMachinesAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.RefreshDeploymentMachinesAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RefreshDeploymentTargetsAsync (Guid project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshDeploymentTargetsAsync(valuetype System.Guid project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.RefreshDeploymentTargetsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RefreshDeploymentTargetsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshDeploymentTargetsAsync : Guid * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.RefreshDeploymentTargetsAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Upgrade the deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RefreshDeploymentTargetsAsync (string project, int deploymentGroupId, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RefreshDeploymentTargetsAsync(string project, int32 deploymentGroupId, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.RefreshDeploymentTargetsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RefreshDeploymentTargetsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RefreshDeploymentTargetsAsync : string * int * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.RefreshDeploymentTargetsAsync (project, deploymentGroupId, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Upgrade the deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; ReplaceAgentAsync (int poolId, int agentId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; ReplaceAgentAsync(int32 poolId, int32 agentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ReplaceAgentAsync(System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAgentAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&#xA;override this.ReplaceAgentAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClientBase.ReplaceAgentAsync (poolId, agentId, agent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="agent" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="agent"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentMachineAsync (Guid project, int deploymentGroupId, int machineId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentMachineAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 machineId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ReplaceDeploymentMachineAsync(System.Guid,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceDeploymentMachineAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.ReplaceDeploymentMachineAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.ReplaceDeploymentMachineAsync (project, deploymentGroupId, machineId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="machine"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentMachineAsync (string project, int deploymentGroupId, int machineId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentMachineAsync(string project, int32 deploymentGroupId, int32 machineId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ReplaceDeploymentMachineAsync(System.String,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceDeploymentMachineAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.ReplaceDeploymentMachineAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.ReplaceDeploymentMachineAsync (project, deploymentGroupId, machineId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="machine"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentTargetAsync (Guid project, int deploymentGroupId, int targetId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentTargetAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 targetId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ReplaceDeploymentTargetAsync(System.Guid,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceDeploymentTargetAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.ReplaceDeploymentTargetAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.ReplaceDeploymentTargetAsync (project, deploymentGroupId, targetId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment target is replaced.</param>
        <param name="targetId">ID of the deployment target to replace.</param>
        <param name="machine">New deployment target.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Replace a deployment target in a deployment group. Generally this is called by agent configuration tool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentTargetAsync (string project, int deploymentGroupId, int targetId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; ReplaceDeploymentTargetAsync(string project, int32 deploymentGroupId, int32 targetId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ReplaceDeploymentTargetAsync(System.String,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceDeploymentTargetAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.ReplaceDeploymentTargetAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.ReplaceDeploymentTargetAsync (project, deploymentGroupId, targetId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment target is replaced.</param>
        <param name="targetId">ID of the deployment target to replace.</param>
        <param name="machine">New deployment target.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Replace a deployment target in a deployment group. Generally this is called by agent configuration tool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendMessageAsync (int poolId, long requestId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage message, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendMessageAsync(int32 poolId, int64 requestId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage message, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.SendMessageAsync(System.Int32,System.Int64,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : int * int64 * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendMessageAsync : int * int64 * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.SendMessageAsync (poolId, requestId, message, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="message" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentMessage" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="requestId"></param>
        <param name="message"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareVariableGroupWithProjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShareVariableGroupWithProjectAsync (int groupId, string fromProject, string withProject, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShareVariableGroupWithProjectAsync(int32 groupId, string fromProject, string withProject, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ShareVariableGroupWithProjectAsync(System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ShareVariableGroupWithProjectAsync : int * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ShareVariableGroupWithProjectAsync : int * string * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="taskAgentHttpClientBase.ShareVariableGroupWithProjectAsync (groupId, fromProject, withProject, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="fromProject" Type="System.String" />
        <Parameter Name="withProject" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"></param>
        <param name="fromProject"></param>
        <param name="withProject"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndeleteTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; UndeleteTaskGroupAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; UndeleteTaskGroupAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UndeleteTaskGroupAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UndeleteTaskGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;&#xA;override this.UndeleteTaskGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.UndeleteTaskGroupAsync (project, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndeleteTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; UndeleteTaskGroupAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt; UndeleteTaskGroupAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UndeleteTaskGroupAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UndeleteTaskGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;&#xA;override this.UndeleteTaskGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;" Usage="taskAgentHttpClientBase.UndeleteTaskGroupAsync (project, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; UpdateAgentAsync (int poolId, int agentId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; UpdateAgentAsync(int32 poolId, int32 agentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent agent, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentAsync(System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&#xA;override this.UpdateAgentAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClientBase.UpdateAgentAsync (poolId, agentId, agent, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="agent" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="agent"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt; UpdateAgentPoolAsync (int poolId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool pool, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt; UpdateAgentPoolAsync(int32 poolId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool pool, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentPoolAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentPoolAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;&#xA;override this.UpdateAgentPoolAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;" Usage="taskAgentHttpClientBase.UpdateAgentPoolAsync (poolId, pool, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="pool" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPool" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="pool"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentPoolMaintenanceDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt; UpdateAgentPoolMaintenanceDefinitionAsync (int poolId, int definitionId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition definition, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt; UpdateAgentPoolMaintenanceDefinitionAsync(int32 poolId, int32 definitionId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition definition, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentPoolMaintenanceDefinitionAsync(System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentPoolMaintenanceDefinitionAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;&#xA;override this.UpdateAgentPoolMaintenanceDefinitionAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;" Usage="taskAgentHttpClientBase.UpdateAgentPoolMaintenanceDefinitionAsync (poolId, definitionId, definition, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="definitionId" Type="System.Int32" />
        <Parameter Name="definition" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceDefinition" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="definitionId"></param>
        <param name="definition"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentPoolMaintenanceJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt; UpdateAgentPoolMaintenanceJobAsync (int poolId, int jobId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob job, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt; UpdateAgentPoolMaintenanceJobAsync(int32 poolId, int32 jobId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob job, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentPoolMaintenanceJobAsync(System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentPoolMaintenanceJobAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;&#xA;override this.UpdateAgentPoolMaintenanceJobAsync : int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;" Usage="taskAgentHttpClientBase.UpdateAgentPoolMaintenanceJobAsync (poolId, jobId, job, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="jobId" Type="System.Int32" />
        <Parameter Name="job" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJob" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="jobId"></param>
        <param name="job"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentRequestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; UpdateAgentRequestAsync (int poolId, long requestId, Guid lockToken, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest request, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt; UpdateAgentRequestAsync(int32 poolId, int64 requestId, valuetype System.Guid lockToken, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest request, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentRequestAsync(System.Int32,System.Int64,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentRequestAsync : int * int64 * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;&#xA;override this.UpdateAgentRequestAsync : int * int64 * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;" Usage="taskAgentHttpClientBase.UpdateAgentRequestAsync (poolId, requestId, lockToken, request, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="requestId" Type="System.Int64" />
        <Parameter Name="lockToken" Type="System.Guid" />
        <Parameter Name="request" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentJobRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="requestId"></param>
        <param name="lockToken"></param>
        <param name="request"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentUpdateStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; UpdateAgentUpdateStateAsync (int poolId, int agentId, string currentState, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; UpdateAgentUpdateStateAsync(int32 poolId, int32 agentId, string currentState, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentUpdateStateAsync(System.Int32,System.Int32,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentUpdateStateAsync : int * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&#xA;override this.UpdateAgentUpdateStateAsync : int * int * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClientBase.UpdateAgentUpdateStateAsync (poolId, agentId, currentState, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="currentState" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="currentState"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAgentUserCapabilitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; UpdateAgentUserCapabilitiesAsync (int poolId, int agentId, System.Collections.Generic.IDictionary&lt;string,string&gt; userCapabilities, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt; UpdateAgentUserCapabilitiesAsync(int32 poolId, int32 agentId, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; userCapabilities, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateAgentUserCapabilitiesAsync(System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAgentUserCapabilitiesAsync : int * int * System.Collections.Generic.IDictionary&lt;string, string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;&#xA;override this.UpdateAgentUserCapabilitiesAsync : int * int * System.Collections.Generic.IDictionary&lt;string, string&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;" Usage="taskAgentHttpClientBase.UpdateAgentUserCapabilitiesAsync (poolId, agentId, userCapabilities, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="poolId" Type="System.Int32" />
        <Parameter Name="agentId" Type="System.Int32" />
        <Parameter Name="userCapabilities" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="poolId"></param>
        <param name="agentId"></param>
        <param name="userCapabilities"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; UpdateDeploymentGroupAsync (Guid project, int deploymentGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter deploymentGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; UpdateDeploymentGroupAsync(valuetype System.Guid project, int32 deploymentGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter deploymentGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentGroupAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&#xA;override this.UpdateDeploymentGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentGroupAsync (project, deploymentGroupId, deploymentGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="deploymentGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="deploymentGroup">Deployment group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; UpdateDeploymentGroupAsync (string project, int deploymentGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter deploymentGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt; UpdateDeploymentGroupAsync(string project, int32 deploymentGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter deploymentGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentGroupAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;&#xA;override this.UpdateDeploymentGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentGroupAsync (project, deploymentGroupId, deploymentGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="deploymentGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentGroupUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group.</param>
        <param name="deploymentGroup">Deployment group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentMachineAsync (Guid project, int deploymentGroupId, int machineId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentMachineAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 machineId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachineAsync(System.Guid,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachineAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.UpdateDeploymentMachineAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachineAsync (project, deploymentGroupId, machineId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="machine"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentMachineAsync (string project, int deploymentGroupId, int machineId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentMachineAsync(string project, int32 deploymentGroupId, int32 machineId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachineAsync(System.String,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachineAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.UpdateDeploymentMachineAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachineAsync (project, deploymentGroupId, machineId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machineId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machineId"></param>
        <param name="machine"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; UpdateDeploymentMachineGroupAsync (Guid project, int machineGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; UpdateDeploymentMachineGroupAsync(valuetype System.Guid project, int32 machineGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachineGroupAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachineGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&#xA;override this.UpdateDeploymentMachineGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachineGroupAsync (project, machineGroupId, machineGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="machineGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupId"></param>
        <param name="machineGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachineGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; UpdateDeploymentMachineGroupAsync (string project, int machineGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt; UpdateDeploymentMachineGroupAsync(string project, int32 machineGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup machineGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachineGroupAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachineGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;&#xA;override this.UpdateDeploymentMachineGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachineGroupAsync (project, machineGroupId, machineGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="machineGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachineGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupId"></param>
        <param name="machineGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachineGroupMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachineGroupMachinesAsync (Guid project, int machineGroupId, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; deploymentMachines, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachineGroupMachinesAsync(valuetype System.Guid project, int32 machineGroupId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; deploymentMachines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachineGroupMachinesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachineGroupMachinesAsync : Guid * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.UpdateDeploymentMachineGroupMachinesAsync : Guid * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachineGroupMachinesAsync (project, machineGroupId, deploymentMachines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="deploymentMachines" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="machineGroupId"></param>
        <param name="deploymentMachines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachineGroupMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachineGroupMachinesAsync (string project, int machineGroupId, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; deploymentMachines, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachineGroupMachinesAsync(string project, int32 machineGroupId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; deploymentMachines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachineGroupMachinesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachineGroupMachinesAsync : string * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.UpdateDeploymentMachineGroupMachinesAsync : string * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachineGroupMachinesAsync (project, machineGroupId, deploymentMachines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="machineGroupId" Type="System.Int32" />
        <Parameter Name="deploymentMachines" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="machineGroupId"></param>
        <param name="deploymentMachines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachinesAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; machines, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachinesAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; machines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachinesAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachinesAsync : Guid * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.UpdateDeploymentMachinesAsync : Guid * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachinesAsync (project, deploymentGroupId, machines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machines" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId"></param>
        <param name="machines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachinesAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; machines, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentMachinesAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; machines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentMachinesAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentMachinesAsync : string * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.UpdateDeploymentMachinesAsync : string * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentMachinesAsync (project, deploymentGroupId, machines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machines" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId"></param>
        <param name="machines"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentTargetAsync (Guid project, int deploymentGroupId, int targetId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentTargetAsync(valuetype System.Guid project, int32 deploymentGroupId, int32 targetId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentTargetAsync(System.Guid,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentTargetAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.UpdateDeploymentTargetAsync : Guid * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentTargetAsync (project, deploymentGroupId, targetId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment target is updated.</param>
        <param name="targetId">ID of the deployment target to update.</param>
        <param name="machine">Deployment target to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a deployment target and its agent properties in a deployment group. Generally this is called by agent configuration tool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentTargetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentTargetAsync (string project, int deploymentGroupId, int targetId, Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt; UpdateDeploymentTargetAsync(string project, int32 deploymentGroupId, int32 targetId, class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine machine, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentTargetAsync(System.String,System.Int32,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentTargetAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&#xA;override this.UpdateDeploymentTargetAsync : string * int * int * Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentTargetAsync (project, deploymentGroupId, targetId, machine, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="machine" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment target is updated.</param>
        <param name="targetId">ID of the deployment target to update.</param>
        <param name="machine">Deployment target to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a deployment target and its agent properties in a deployment group. Generally this is called by agent configuration tool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentTargetsAsync (Guid project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; machines, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentTargetsAsync(valuetype System.Guid project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; machines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentTargetsAsync(System.Guid,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentTargetsAsync : Guid * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.UpdateDeploymentTargetsAsync : Guid * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentTargetsAsync (project, deploymentGroupId, machines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machines" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment targets are updated.</param>
        <param name="machines">Deployment targets with tags to udpdate.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update tags of a list of deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDeploymentTargetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentTargetsAsync (string project, int deploymentGroupId, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; machines, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt; UpdateDeploymentTargetsAsync(string project, int32 deploymentGroupId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; machines, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateDeploymentTargetsAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDeploymentTargetsAsync : string * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;&#xA;override this.UpdateDeploymentTargetsAsync : string * int * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateDeploymentTargetsAsync (project, deploymentGroupId, machines, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="deploymentGroupId" Type="System.Int32" />
        <Parameter Name="machines" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DeploymentTargetUpdateParameter&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="deploymentGroupId">ID of the deployment group in which deployment targets are updated.</param>
        <param name="machines">Deployment targets with tags to udpdate.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update tags of a list of deployment targets in a deployment group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; UpdateEnvironmentAsync (Guid project, int environmentId, Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter environmentUpdateParameter, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; UpdateEnvironmentAsync(valuetype System.Guid project, int32 environmentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter environmentUpdateParameter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateEnvironmentAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateEnvironmentAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&#xA;override this.UpdateEnvironmentAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;" Usage="taskAgentHttpClientBase.UpdateEnvironmentAsync (project, environmentId, environmentUpdateParameter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="environmentUpdateParameter" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId">ID of the environment.</param>
        <param name="environmentUpdateParameter">Environment data to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update the specified environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; UpdateEnvironmentAsync (string project, int environmentId, Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter environmentUpdateParameter, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt; UpdateEnvironmentAsync(string project, int32 environmentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter environmentUpdateParameter, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateEnvironmentAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateEnvironmentAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;&#xA;override this.UpdateEnvironmentAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;" Usage="taskAgentHttpClientBase.UpdateEnvironmentAsync (project, environmentId, environmentUpdateParameter, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.DistributedTaskEnvironment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="environmentUpdateParameter" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.EnvironmentUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId">ID of the environment.</param>
        <param name="environmentUpdateParameter">Environment data to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update the specified environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateOAuthConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; UpdateOAuthConfigurationAsync (int configurationId, Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams configurationParams, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt; UpdateOAuthConfigurationAsync(int32 configurationId, class Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams configurationParams, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateOAuthConfigurationAsync(System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateOAuthConfigurationAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;&#xA;override this.UpdateOAuthConfigurationAsync : int * Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;" Usage="taskAgentHttpClientBase.UpdateOAuthConfigurationAsync (configurationId, configurationParams, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationId" Type="System.Int32" />
        <Parameter Name="configurationParams" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.OAuthConfigurationParams" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationId"></param>
        <param name="configurationParams"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UpdateSecureFileAsync (Guid project, Guid secureFileId, Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile secureFile, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UpdateSecureFileAsync(valuetype System.Guid project, valuetype System.Guid secureFileId, class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile secureFile, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateSecureFileAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSecureFileAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&#xA;override this.UpdateSecureFileAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClientBase.UpdateSecureFileAsync (project, secureFileId, secureFile, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="secureFile" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="secureFile">The secure file with updated name and/or properties</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update the name or properties of an existing secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UpdateSecureFileAsync (string project, Guid secureFileId, Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile secureFile, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UpdateSecureFileAsync(string project, valuetype System.Guid secureFileId, class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile secureFile, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateSecureFileAsync(System.String,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSecureFileAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&#xA;override this.UpdateSecureFileAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClientBase.UpdateSecureFileAsync (project, secureFileId, secureFile, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFileId" Type="System.Guid" />
        <Parameter Name="secureFile" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFileId">The unique secure file Id</param>
        <param name="secureFile">The secure file with updated name and/or properties</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update the name or properties of an existing secure file
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecureFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; UpdateSecureFilesAsync (Guid project, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; secureFiles, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; UpdateSecureFilesAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; secureFiles, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateSecureFilesAsync(System.Guid,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSecureFilesAsync : Guid * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.UpdateSecureFilesAsync : Guid * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateSecureFilesAsync (project, secureFiles, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="secureFiles" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="secureFiles">A list of secure file objects. Only three field must be populated Id, Name, and Properties. The rest of fields in the object are ignored.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update properties and/or names of a set of secure files. Files are identified by their IDs. Properties provided override the existing one entirely, i.e. do not merge.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecureFilesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; UpdateSecureFilesAsync (string project, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; secureFiles, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt; UpdateSecureFilesAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; secureFiles, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateSecureFilesAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSecureFilesAsync : string * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;&#xA;override this.UpdateSecureFilesAsync : string * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateSecureFilesAsync (project, secureFiles, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="secureFiles" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="secureFiles">A list of secure file objects. Only three field must be populated Id, Name, and Properties. The rest of fields in the object are ignored.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update properties and/or names of a set of secure files. Files are identified by their IDs. Properties provided override the existing one entirely, i.e. do not merge.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; UpdateServiceEndpointAsync (Guid project, Guid endpointId, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, string operation = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; UpdateServiceEndpointAsync(valuetype System.Guid project, valuetype System.Guid endpointId, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, string operation, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateServiceEndpointAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateServiceEndpointAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&#xA;override this.UpdateServiceEndpointAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" Usage="taskAgentHttpClientBase.UpdateServiceEndpointAsync (project, endpointId, endpoint, operation, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="endpoint" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpointId"></param>
        <param name="endpoint"></param>
        <param name="operation"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; UpdateServiceEndpointAsync (string project, Guid endpointId, Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, string operation = null, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; UpdateServiceEndpointAsync(string project, valuetype System.Guid endpointId, class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint endpoint, string operation, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateServiceEndpointAsync(System.String,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateServiceEndpointAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&#xA;override this.UpdateServiceEndpointAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" Usage="taskAgentHttpClientBase.UpdateServiceEndpointAsync (project, endpointId, endpoint, operation, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpointId" Type="System.Guid" />
        <Parameter Name="endpoint" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpointId"></param>
        <param name="endpoint"></param>
        <param name="operation"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; UpdateServiceEndpointsAsync (Guid project, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; endpoints, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; UpdateServiceEndpointsAsync(valuetype System.Guid project, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; endpoints, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateServiceEndpointsAsync(System.Guid,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateServiceEndpointsAsync : Guid * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;&#xA;override this.UpdateServiceEndpointsAsync : Guid * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateServiceEndpointsAsync (project, endpoints, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="endpoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="endpoints"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; UpdateServiceEndpointsAsync (string project, System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; endpoints, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt; UpdateServiceEndpointsAsync(string project, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; endpoints, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateServiceEndpointsAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateServiceEndpointsAsync : string * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;&#xA;override this.UpdateServiceEndpointsAsync : string * seq&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;" Usage="taskAgentHttpClientBase.UpdateServiceEndpointsAsync (project, endpoints, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.Obsolete("ServiceEndpoint APIs under distributedtask area is deprecated. Use the APIs under serviceendpoint area instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="endpoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.ServiceEndpoint&gt;" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="endpoints"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; UpdateServiceGroupAsync (Guid project, int environmentId, Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup serviceGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; UpdateServiceGroupAsync(valuetype System.Guid project, int32 environmentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup serviceGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateServiceGroupAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateServiceGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;&#xA;override this.UpdateServiceGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;" Usage="taskAgentHttpClientBase.UpdateServiceGroupAsync (project, environmentId, serviceGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="serviceGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="environmentId"></param>
        <param name="serviceGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; UpdateServiceGroupAsync (string project, int environmentId, Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup serviceGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt; UpdateServiceGroupAsync(string project, int32 environmentId, class Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup serviceGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateServiceGroupAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateServiceGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;&#xA;override this.UpdateServiceGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;" Usage="taskAgentHttpClientBase.UpdateServiceGroupAsync (project, environmentId, serviceGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-devops-dotnet-preview">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="environmentId" Type="System.Int32" />
        <Parameter Name="serviceGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.KubernetesServiceGroup" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="environmentId"></param>
        <param name="serviceGroup"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync (Guid project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync(valuetype System.Guid project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateTaskGroupAsync(System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTaskGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.UpdateTaskGroupAsync : Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.UpdateTaskGroupAsync (project, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use UpdateTaskGroup(Guid taskGroupId, [FromBody] TaskGroupUpdateParameter taskGroup) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroup">Task group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync (string project, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync(string project, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateTaskGroupAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTaskGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.UpdateTaskGroupAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.UpdateTaskGroupAsync (project, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use UpdateTaskGroup(Guid taskGroupId, [FromBody] TaskGroupUpdateParameter taskGroup) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroup">Task group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync (Guid project, Guid taskGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync(valuetype System.Guid project, valuetype System.Guid taskGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateTaskGroupAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTaskGroupAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.UpdateTaskGroupAsync : Guid * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.UpdateTaskGroupAsync (project, taskGroupId, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="taskGroupId">Id of the task group to update.</param>
        <param name="taskGroup">Task group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTaskGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync (string project, Guid taskGroupId, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt; UpdateTaskGroupAsync(string project, valuetype System.Guid taskGroupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter taskGroup, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateTaskGroupAsync(System.String,System.Guid,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTaskGroupAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;&#xA;override this.UpdateTaskGroupAsync : string * Guid * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;" Usage="taskAgentHttpClientBase.UpdateTaskGroupAsync (project, taskGroupId, taskGroup, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="taskGroupId" Type="System.Guid" />
        <Parameter Name="taskGroup" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskGroupUpdateParameter" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="taskGroupId">Id of the task group to update.</param>
        <param name="taskGroup">Task group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a task group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTaskHubLicenseDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt; UpdateTaskHubLicenseDetailsAsync (string hubName, Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails taskHubLicenseDetails, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt; UpdateTaskHubLicenseDetailsAsync(string hubName, class Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails taskHubLicenseDetails, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateTaskHubLicenseDetailsAsync(System.String,Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTaskHubLicenseDetailsAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt;&#xA;override this.UpdateTaskHubLicenseDetailsAsync : string * Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt;" Usage="taskAgentHttpClientBase.UpdateTaskHubLicenseDetailsAsync (hubName, taskHubLicenseDetails, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hubName" Type="System.String" />
        <Parameter Name="taskHubLicenseDetails" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.TaskHubLicenseDetails" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hubName"></param>
        <param name="taskHubLicenseDetails"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; UpdateVariableGroupAsync (Guid project, int groupId, Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; UpdateVariableGroupAsync(valuetype System.Guid project, int32 groupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateVariableGroupAsync(System.Guid,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateVariableGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&#xA;override this.UpdateVariableGroupAsync : Guid * int * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;" Usage="taskAgentHttpClientBase.UpdateVariableGroupAsync (project, groupId, group, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="group" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="groupId">Id of the variable group to update.</param>
        <param name="group">Variable group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a variable group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateVariableGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; UpdateVariableGroupAsync (string project, int groupId, Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt; UpdateVariableGroupAsync(string project, int32 groupId, class Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters group, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UpdateVariableGroupAsync(System.String,System.Int32,Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateVariableGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;&#xA;override this.UpdateVariableGroupAsync : string * int * Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;" Usage="taskAgentHttpClientBase.UpdateVariableGroupAsync (project, groupId, group, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="group" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.VariableGroupParameters" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="groupId">Id of the variable group to update.</param>
        <param name="group">Variable group to update.</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Update a variable group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UploadSecureFileAsync (Guid project, System.IO.Stream uploadStream, string name, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UploadSecureFileAsync(valuetype System.Guid project, class System.IO.Stream uploadStream, string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UploadSecureFileAsync(System.Guid,System.IO.Stream,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadSecureFileAsync : Guid * System.IO.Stream * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&#xA;override this.UploadSecureFileAsync : Guid * System.IO.Stream * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClientBase.UploadSecureFileAsync (project, uploadStream, name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.Guid" />
        <Parameter Name="uploadStream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID</param>
        <param name="uploadStream">Stream to upload</param>
        <param name="name">Name of the file to upload</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Upload a secure file, include the file stream in the request body
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadSecureFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UploadSecureFileAsync (string project, System.IO.Stream uploadStream, string name, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt; UploadSecureFileAsync(string project, class System.IO.Stream uploadStream, string name, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.UploadSecureFileAsync(System.String,System.IO.Stream,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadSecureFileAsync : string * System.IO.Stream * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;&#xA;override this.UploadSecureFileAsync : string * System.IO.Stream * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;" Usage="taskAgentHttpClientBase.UploadSecureFileAsync (project, uploadStream, name, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.SecureFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
        <Parameter Name="uploadStream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="project">Project ID or project name</param>
        <param name="uploadStream">Stream to upload</param>
        <param name="name">Name of the file to upload</param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API] Upload a secure file, include the file stream in the request body
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInputsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest&gt; ValidateInputsAsync (Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest inputValidationRequest, object userState = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest&gt; ValidateInputsAsync(class Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest inputValidationRequest, object userState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentHttpClientBase.ValidateInputsAsync(Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ValidateInputsAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest&gt;&#xA;override this.ValidateInputsAsync : Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest&gt;" Usage="taskAgentHttpClientBase.ValidateInputsAsync (inputValidationRequest, userState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.TeamFoundation.DistributedTask.WebApi</AssemblyName>
        <AssemblyVersion>16.0.0.0</AssemblyVersion>
        <AssemblyVersion>17.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputValidationRequest" Type="Microsoft.TeamFoundation.DistributedTask.WebApi.InputValidationRequest" />
        <Parameter Name="userState" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="inputValidationRequest"></param>
        <param name="userState"></param>
        <param name="cancellationToken">The cancellation token to cancel operation.</param>
        <summary>
            [Preview API]
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>